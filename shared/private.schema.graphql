### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AddProviderInput {
  groups: [Int!]!
  name: String!
  official: Boolean!
  people: [Int!]!
  url: String!
}

type Alias {
  createdAt: DateTime!
  id: Int!
  name: String!
  updatedAt: DateTime!
}

input AliasCreateManyPersonInput {
  createdAt: DateTime
  id: Int
  name: String!
  updatedAt: DateTime
}

input AliasCreateManyPersonInputEnvelope {
  data: [AliasCreateManyPersonInput!]
  skipDuplicates: Boolean
}

input AliasCreateNestedManyWithoutPersonInput {
  connect: [AliasWhereUniqueInput!]
  connectOrCreate: [AliasCreateOrConnectWithoutPersonInput!]
  create: [AliasCreateWithoutPersonInput!]
  createMany: AliasCreateManyPersonInputEnvelope
}

input AliasCreateNestedOneWithoutPreferredAliasOfInput {
  connect: AliasWhereUniqueInput
  connectOrCreate: AliasCreateOrConnectWithoutPreferredAliasOfInput
  create: AliasCreateWithoutPreferredAliasOfInput
}

input AliasCreateOrConnectWithoutPersonInput {
  create: AliasCreateWithoutPersonInput!
  where: AliasWhereUniqueInput!
}

input AliasCreateOrConnectWithoutPreferredAliasOfInput {
  create: AliasCreateWithoutPreferredAliasOfInput!
  where: AliasWhereUniqueInput!
}

input AliasCreateWithoutPersonInput {
  createdAt: DateTime
  name: String!
  preferredAliasOf: PersonCreateNestedOneWithoutPreferredAliasInput
  updatedAt: DateTime
}

input AliasCreateWithoutPreferredAliasOfInput {
  createdAt: DateTime
  name: String!
  person: PersonCreateNestedOneWithoutAliasesInput!
  updatedAt: DateTime
}

input AliasListRelationFilter {
  every: AliasWhereInput
  none: AliasWhereInput
  some: AliasWhereInput
}

input AliasOrderByRelationAggregateInput {
  _count: SortOrder
}

input AliasOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  person: PersonOrderByWithRelationInput
  personId: SortOrder
  preferredAliasOf: PersonOrderByWithRelationInput
  updatedAt: SortOrder
}

input AliasPersonAliasCompoundUniqueInput {
  name: String!
  personId: Int!
}

input AliasScalarWhereInput {
  AND: [AliasScalarWhereInput!]
  NOT: [AliasScalarWhereInput!]
  OR: [AliasScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  personId: IntFilter
  updatedAt: DateTimeFilter
}

input AliasUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AliasUpdateManyWithWhereWithoutPersonInput {
  data: AliasUpdateManyMutationInput!
  where: AliasScalarWhereInput!
}

input AliasUpdateManyWithoutPersonInput {
  connect: [AliasWhereUniqueInput!]
  connectOrCreate: [AliasCreateOrConnectWithoutPersonInput!]
  create: [AliasCreateWithoutPersonInput!]
  createMany: AliasCreateManyPersonInputEnvelope
  delete: [AliasWhereUniqueInput!]
  deleteMany: [AliasScalarWhereInput!]
  disconnect: [AliasWhereUniqueInput!]
  set: [AliasWhereUniqueInput!]
  update: [AliasUpdateWithWhereUniqueWithoutPersonInput!]
  updateMany: [AliasUpdateManyWithWhereWithoutPersonInput!]
  upsert: [AliasUpsertWithWhereUniqueWithoutPersonInput!]
}

input AliasUpdateOneWithoutPreferredAliasOfInput {
  connect: AliasWhereUniqueInput
  connectOrCreate: AliasCreateOrConnectWithoutPreferredAliasOfInput
  create: AliasCreateWithoutPreferredAliasOfInput
  delete: Boolean
  disconnect: Boolean
  update: AliasUpdateWithoutPreferredAliasOfInput
  upsert: AliasUpsertWithoutPreferredAliasOfInput
}

input AliasUpdateWithWhereUniqueWithoutPersonInput {
  data: AliasUpdateWithoutPersonInput!
  where: AliasWhereUniqueInput!
}

input AliasUpdateWithoutPersonInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  preferredAliasOf: PersonUpdateOneWithoutPreferredAliasInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AliasUpdateWithoutPreferredAliasOfInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  person: PersonUpdateOneRequiredWithoutAliasesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AliasUpsertWithWhereUniqueWithoutPersonInput {
  create: AliasCreateWithoutPersonInput!
  update: AliasUpdateWithoutPersonInput!
  where: AliasWhereUniqueInput!
}

input AliasUpsertWithoutPreferredAliasOfInput {
  create: AliasCreateWithoutPreferredAliasOfInput!
  update: AliasUpdateWithoutPreferredAliasOfInput!
}

input AliasWhereInput {
  AND: [AliasWhereInput!]
  NOT: [AliasWhereInput!]
  OR: [AliasWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  person: PersonWhereInput
  personId: IntFilter
  preferredAliasOf: PersonWhereInput
  updatedAt: DateTimeFilter
}

input AliasWhereUniqueInput {
  id: Int
  personAlias: AliasPersonAliasCompoundUniqueInput
}

type Appearance {
  addedBy: User
  createdAt: DateTime!
  faces(cursor: FaceWhereUniqueInput, skip: Int, take: Int): [Face!]!
  id: Int!
  image: Image!
  person: Person!
  tags(cursor: AppearanceTagWhereUniqueInput, skip: Int, take: Int): [AppearanceTag!]!
  updatedAt: DateTime!
}

type AppearanceCount {
  count: Int!
  group: Group!
}

input AppearanceCreateManyAddedByInput {
  createdAt: DateTime
  id: Int
  imageId: Int!
  personId: Int!
  updatedAt: DateTime
}

input AppearanceCreateManyAddedByInputEnvelope {
  data: [AppearanceCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input AppearanceCreateManyImageInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  personId: Int!
  updatedAt: DateTime
}

input AppearanceCreateManyImageInputEnvelope {
  data: [AppearanceCreateManyImageInput!]
  skipDuplicates: Boolean
}

input AppearanceCreateManyPersonInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  imageId: Int!
  updatedAt: DateTime
}

input AppearanceCreateManyPersonInputEnvelope {
  data: [AppearanceCreateManyPersonInput!]
  skipDuplicates: Boolean
}

input AppearanceCreateNestedManyWithoutAddedByInput {
  connect: [AppearanceWhereUniqueInput!]
  connectOrCreate: [AppearanceCreateOrConnectWithoutAddedByInput!]
  create: [AppearanceCreateWithoutAddedByInput!]
  createMany: AppearanceCreateManyAddedByInputEnvelope
}

input AppearanceCreateNestedManyWithoutImageInput {
  connect: [AppearanceWhereUniqueInput!]
  connectOrCreate: [AppearanceCreateOrConnectWithoutImageInput!]
  create: [AppearanceCreateWithoutImageInput!]
  createMany: AppearanceCreateManyImageInputEnvelope
}

input AppearanceCreateNestedManyWithoutPersonInput {
  connect: [AppearanceWhereUniqueInput!]
  connectOrCreate: [AppearanceCreateOrConnectWithoutPersonInput!]
  create: [AppearanceCreateWithoutPersonInput!]
  createMany: AppearanceCreateManyPersonInputEnvelope
}

input AppearanceCreateNestedOneWithoutTagsInput {
  connect: AppearanceWhereUniqueInput
  connectOrCreate: AppearanceCreateOrConnectWithoutTagsInput
  create: AppearanceCreateWithoutTagsInput
}

input AppearanceCreateOrConnectWithoutAddedByInput {
  create: AppearanceCreateWithoutAddedByInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceCreateOrConnectWithoutFacesInput {
  create: AppearanceCreateWithoutFacesInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceCreateOrConnectWithoutImageInput {
  create: AppearanceCreateWithoutImageInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceCreateOrConnectWithoutPersonInput {
  create: AppearanceCreateWithoutPersonInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceCreateOrConnectWithoutTagsInput {
  create: AppearanceCreateWithoutTagsInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceCreateWithoutAddedByInput {
  createdAt: DateTime
  faces: FaceCreateNestedManyWithoutAppearanceInput
  image: ImageCreateNestedOneWithoutAppearancesInput!
  person: PersonCreateNestedOneWithoutAppearancesInput!
  tags: AppearanceTagCreateNestedManyWithoutAppearanceInput
  updatedAt: DateTime
}

input AppearanceCreateWithoutFacesInput {
  addedBy: UserCreateNestedOneWithoutTaggedAppearancesInput
  createdAt: DateTime
  image: ImageCreateNestedOneWithoutAppearancesInput!
  person: PersonCreateNestedOneWithoutAppearancesInput!
  tags: AppearanceTagCreateNestedManyWithoutAppearanceInput
  updatedAt: DateTime
}

input AppearanceCreateWithoutImageInput {
  addedBy: UserCreateNestedOneWithoutTaggedAppearancesInput
  createdAt: DateTime
  faces: FaceCreateNestedManyWithoutAppearanceInput
  person: PersonCreateNestedOneWithoutAppearancesInput!
  tags: AppearanceTagCreateNestedManyWithoutAppearanceInput
  updatedAt: DateTime
}

input AppearanceCreateWithoutPersonInput {
  addedBy: UserCreateNestedOneWithoutTaggedAppearancesInput
  createdAt: DateTime
  faces: FaceCreateNestedManyWithoutAppearanceInput
  image: ImageCreateNestedOneWithoutAppearancesInput!
  tags: AppearanceTagCreateNestedManyWithoutAppearanceInput
  updatedAt: DateTime
}

input AppearanceCreateWithoutTagsInput {
  addedBy: UserCreateNestedOneWithoutTaggedAppearancesInput
  createdAt: DateTime
  faces: FaceCreateNestedManyWithoutAppearanceInput
  image: ImageCreateNestedOneWithoutAppearancesInput!
  person: PersonCreateNestedOneWithoutAppearancesInput!
  updatedAt: DateTime
}

input AppearanceListRelationFilter {
  every: AppearanceWhereInput
  none: AppearanceWhereInput
  some: AppearanceWhereInput
}

input AppearanceOrderByRelationAggregateInput {
  _count: SortOrder
}

input AppearancePersonIdImageIdCompoundUniqueInput {
  imageId: Int!
  personId: Int!
}

input AppearanceScalarWhereInput {
  AND: [AppearanceScalarWhereInput!]
  NOT: [AppearanceScalarWhereInput!]
  OR: [AppearanceScalarWhereInput!]
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  imageId: IntFilter
  personId: IntFilter
  updatedAt: DateTimeFilter
}

type AppearanceTag {
  addedBy: User
  appearance: Appearance!
  createdAt: DateTime!
  tag: Tag!
  updatedAt: DateTime!
}

input AppearanceTagAppearanceTagCompoundUniqueInput {
  appearanceId: Int!
  tagId: Int!
}

input AppearanceTagCreateManyAddedByInput {
  appearanceId: Int!
  createdAt: DateTime
  id: Int
  imageId: Int
  tagId: Int!
  updatedAt: DateTime
}

input AppearanceTagCreateManyAddedByInputEnvelope {
  data: [AppearanceTagCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input AppearanceTagCreateManyAppearanceInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  imageId: Int
  tagId: Int!
  updatedAt: DateTime
}

input AppearanceTagCreateManyAppearanceInputEnvelope {
  data: [AppearanceTagCreateManyAppearanceInput!]
  skipDuplicates: Boolean
}

input AppearanceTagCreateManyImageInput {
  addedById: Int
  appearanceId: Int!
  createdAt: DateTime
  id: Int
  tagId: Int!
  updatedAt: DateTime
}

input AppearanceTagCreateManyImageInputEnvelope {
  data: [AppearanceTagCreateManyImageInput!]
  skipDuplicates: Boolean
}

input AppearanceTagCreateManyTagInput {
  addedById: Int
  appearanceId: Int!
  createdAt: DateTime
  id: Int
  imageId: Int
  updatedAt: DateTime
}

input AppearanceTagCreateManyTagInputEnvelope {
  data: [AppearanceTagCreateManyTagInput!]
  skipDuplicates: Boolean
}

input AppearanceTagCreateNestedManyWithoutAddedByInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutAddedByInput!]
  create: [AppearanceTagCreateWithoutAddedByInput!]
  createMany: AppearanceTagCreateManyAddedByInputEnvelope
}

input AppearanceTagCreateNestedManyWithoutAppearanceInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutAppearanceInput!]
  create: [AppearanceTagCreateWithoutAppearanceInput!]
  createMany: AppearanceTagCreateManyAppearanceInputEnvelope
}

input AppearanceTagCreateNestedManyWithoutImageInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutImageInput!]
  create: [AppearanceTagCreateWithoutImageInput!]
  createMany: AppearanceTagCreateManyImageInputEnvelope
}

input AppearanceTagCreateNestedManyWithoutTagInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutTagInput!]
  create: [AppearanceTagCreateWithoutTagInput!]
  createMany: AppearanceTagCreateManyTagInputEnvelope
}

input AppearanceTagCreateOrConnectWithoutAddedByInput {
  create: AppearanceTagCreateWithoutAddedByInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagCreateOrConnectWithoutAppearanceInput {
  create: AppearanceTagCreateWithoutAppearanceInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagCreateOrConnectWithoutImageInput {
  create: AppearanceTagCreateWithoutImageInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagCreateOrConnectWithoutTagInput {
  create: AppearanceTagCreateWithoutTagInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagCreateWithoutAddedByInput {
  Image: ImageCreateNestedOneWithoutAppearanceTagsInput
  appearance: AppearanceCreateNestedOneWithoutTagsInput!
  createdAt: DateTime
  tag: TagCreateNestedOneWithoutAppearancesInput!
  updatedAt: DateTime
}

input AppearanceTagCreateWithoutAppearanceInput {
  Image: ImageCreateNestedOneWithoutAppearanceTagsInput
  addedBy: UserCreateNestedOneWithoutAppearanceTagsInput
  createdAt: DateTime
  tag: TagCreateNestedOneWithoutAppearancesInput!
  updatedAt: DateTime
}

input AppearanceTagCreateWithoutImageInput {
  addedBy: UserCreateNestedOneWithoutAppearanceTagsInput
  appearance: AppearanceCreateNestedOneWithoutTagsInput!
  createdAt: DateTime
  tag: TagCreateNestedOneWithoutAppearancesInput!
  updatedAt: DateTime
}

input AppearanceTagCreateWithoutTagInput {
  Image: ImageCreateNestedOneWithoutAppearanceTagsInput
  addedBy: UserCreateNestedOneWithoutAppearanceTagsInput
  appearance: AppearanceCreateNestedOneWithoutTagsInput!
  createdAt: DateTime
  updatedAt: DateTime
}

input AppearanceTagListRelationFilter {
  every: AppearanceTagWhereInput
  none: AppearanceTagWhereInput
  some: AppearanceTagWhereInput
}

input AppearanceTagOrderByRelationAggregateInput {
  _count: SortOrder
}

input AppearanceTagScalarWhereInput {
  AND: [AppearanceTagScalarWhereInput!]
  NOT: [AppearanceTagScalarWhereInput!]
  OR: [AppearanceTagScalarWhereInput!]
  addedById: IntNullableFilter
  appearanceId: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  imageId: IntNullableFilter
  tagId: IntFilter
  updatedAt: DateTimeFilter
}

input AppearanceTagUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceTagUpdateManyWithWhereWithoutAddedByInput {
  data: AppearanceTagUpdateManyMutationInput!
  where: AppearanceTagScalarWhereInput!
}

input AppearanceTagUpdateManyWithWhereWithoutAppearanceInput {
  data: AppearanceTagUpdateManyMutationInput!
  where: AppearanceTagScalarWhereInput!
}

input AppearanceTagUpdateManyWithWhereWithoutImageInput {
  data: AppearanceTagUpdateManyMutationInput!
  where: AppearanceTagScalarWhereInput!
}

input AppearanceTagUpdateManyWithWhereWithoutTagInput {
  data: AppearanceTagUpdateManyMutationInput!
  where: AppearanceTagScalarWhereInput!
}

input AppearanceTagUpdateManyWithoutAddedByInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutAddedByInput!]
  create: [AppearanceTagCreateWithoutAddedByInput!]
  createMany: AppearanceTagCreateManyAddedByInputEnvelope
  delete: [AppearanceTagWhereUniqueInput!]
  deleteMany: [AppearanceTagScalarWhereInput!]
  disconnect: [AppearanceTagWhereUniqueInput!]
  set: [AppearanceTagWhereUniqueInput!]
  update: [AppearanceTagUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [AppearanceTagUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [AppearanceTagUpsertWithWhereUniqueWithoutAddedByInput!]
}

input AppearanceTagUpdateManyWithoutAppearanceInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutAppearanceInput!]
  create: [AppearanceTagCreateWithoutAppearanceInput!]
  createMany: AppearanceTagCreateManyAppearanceInputEnvelope
  delete: [AppearanceTagWhereUniqueInput!]
  deleteMany: [AppearanceTagScalarWhereInput!]
  disconnect: [AppearanceTagWhereUniqueInput!]
  set: [AppearanceTagWhereUniqueInput!]
  update: [AppearanceTagUpdateWithWhereUniqueWithoutAppearanceInput!]
  updateMany: [AppearanceTagUpdateManyWithWhereWithoutAppearanceInput!]
  upsert: [AppearanceTagUpsertWithWhereUniqueWithoutAppearanceInput!]
}

input AppearanceTagUpdateManyWithoutImageInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutImageInput!]
  create: [AppearanceTagCreateWithoutImageInput!]
  createMany: AppearanceTagCreateManyImageInputEnvelope
  delete: [AppearanceTagWhereUniqueInput!]
  deleteMany: [AppearanceTagScalarWhereInput!]
  disconnect: [AppearanceTagWhereUniqueInput!]
  set: [AppearanceTagWhereUniqueInput!]
  update: [AppearanceTagUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [AppearanceTagUpdateManyWithWhereWithoutImageInput!]
  upsert: [AppearanceTagUpsertWithWhereUniqueWithoutImageInput!]
}

input AppearanceTagUpdateManyWithoutTagInput {
  connect: [AppearanceTagWhereUniqueInput!]
  connectOrCreate: [AppearanceTagCreateOrConnectWithoutTagInput!]
  create: [AppearanceTagCreateWithoutTagInput!]
  createMany: AppearanceTagCreateManyTagInputEnvelope
  delete: [AppearanceTagWhereUniqueInput!]
  deleteMany: [AppearanceTagScalarWhereInput!]
  disconnect: [AppearanceTagWhereUniqueInput!]
  set: [AppearanceTagWhereUniqueInput!]
  update: [AppearanceTagUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [AppearanceTagUpdateManyWithWhereWithoutTagInput!]
  upsert: [AppearanceTagUpsertWithWhereUniqueWithoutTagInput!]
}

input AppearanceTagUpdateWithWhereUniqueWithoutAddedByInput {
  data: AppearanceTagUpdateWithoutAddedByInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpdateWithWhereUniqueWithoutAppearanceInput {
  data: AppearanceTagUpdateWithoutAppearanceInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpdateWithWhereUniqueWithoutImageInput {
  data: AppearanceTagUpdateWithoutImageInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpdateWithWhereUniqueWithoutTagInput {
  data: AppearanceTagUpdateWithoutTagInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpdateWithoutAddedByInput {
  Image: ImageUpdateOneWithoutAppearanceTagsInput
  appearance: AppearanceUpdateOneRequiredWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutAppearancesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceTagUpdateWithoutAppearanceInput {
  Image: ImageUpdateOneWithoutAppearanceTagsInput
  addedBy: UserUpdateOneWithoutAppearanceTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutAppearancesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceTagUpdateWithoutImageInput {
  addedBy: UserUpdateOneWithoutAppearanceTagsInput
  appearance: AppearanceUpdateOneRequiredWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutAppearancesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceTagUpdateWithoutTagInput {
  Image: ImageUpdateOneWithoutAppearanceTagsInput
  addedBy: UserUpdateOneWithoutAppearanceTagsInput
  appearance: AppearanceUpdateOneRequiredWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceTagUpsertWithWhereUniqueWithoutAddedByInput {
  create: AppearanceTagCreateWithoutAddedByInput!
  update: AppearanceTagUpdateWithoutAddedByInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpsertWithWhereUniqueWithoutAppearanceInput {
  create: AppearanceTagCreateWithoutAppearanceInput!
  update: AppearanceTagUpdateWithoutAppearanceInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpsertWithWhereUniqueWithoutImageInput {
  create: AppearanceTagCreateWithoutImageInput!
  update: AppearanceTagUpdateWithoutImageInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagUpsertWithWhereUniqueWithoutTagInput {
  create: AppearanceTagCreateWithoutTagInput!
  update: AppearanceTagUpdateWithoutTagInput!
  where: AppearanceTagWhereUniqueInput!
}

input AppearanceTagWhereInput {
  AND: [AppearanceTagWhereInput!]
  Image: ImageWhereInput
  NOT: [AppearanceTagWhereInput!]
  OR: [AppearanceTagWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  appearance: AppearanceWhereInput
  appearanceId: IntFilter
  createdAt: DateTimeFilter
  id: IntFilter
  imageId: IntNullableFilter
  tag: TagWhereInput
  tagId: IntFilter
  updatedAt: DateTimeFilter
}

input AppearanceTagWhereUniqueInput {
  appearanceTag: AppearanceTagAppearanceTagCompoundUniqueInput
  id: Int
}

input AppearanceUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceUpdateManyWithWhereWithoutAddedByInput {
  data: AppearanceUpdateManyMutationInput!
  where: AppearanceScalarWhereInput!
}

input AppearanceUpdateManyWithWhereWithoutImageInput {
  data: AppearanceUpdateManyMutationInput!
  where: AppearanceScalarWhereInput!
}

input AppearanceUpdateManyWithWhereWithoutPersonInput {
  data: AppearanceUpdateManyMutationInput!
  where: AppearanceScalarWhereInput!
}

input AppearanceUpdateManyWithoutAddedByInput {
  connect: [AppearanceWhereUniqueInput!]
  connectOrCreate: [AppearanceCreateOrConnectWithoutAddedByInput!]
  create: [AppearanceCreateWithoutAddedByInput!]
  createMany: AppearanceCreateManyAddedByInputEnvelope
  delete: [AppearanceWhereUniqueInput!]
  deleteMany: [AppearanceScalarWhereInput!]
  disconnect: [AppearanceWhereUniqueInput!]
  set: [AppearanceWhereUniqueInput!]
  update: [AppearanceUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [AppearanceUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [AppearanceUpsertWithWhereUniqueWithoutAddedByInput!]
}

input AppearanceUpdateManyWithoutImageInput {
  connect: [AppearanceWhereUniqueInput!]
  connectOrCreate: [AppearanceCreateOrConnectWithoutImageInput!]
  create: [AppearanceCreateWithoutImageInput!]
  createMany: AppearanceCreateManyImageInputEnvelope
  delete: [AppearanceWhereUniqueInput!]
  deleteMany: [AppearanceScalarWhereInput!]
  disconnect: [AppearanceWhereUniqueInput!]
  set: [AppearanceWhereUniqueInput!]
  update: [AppearanceUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [AppearanceUpdateManyWithWhereWithoutImageInput!]
  upsert: [AppearanceUpsertWithWhereUniqueWithoutImageInput!]
}

input AppearanceUpdateManyWithoutPersonInput {
  connect: [AppearanceWhereUniqueInput!]
  connectOrCreate: [AppearanceCreateOrConnectWithoutPersonInput!]
  create: [AppearanceCreateWithoutPersonInput!]
  createMany: AppearanceCreateManyPersonInputEnvelope
  delete: [AppearanceWhereUniqueInput!]
  deleteMany: [AppearanceScalarWhereInput!]
  disconnect: [AppearanceWhereUniqueInput!]
  set: [AppearanceWhereUniqueInput!]
  update: [AppearanceUpdateWithWhereUniqueWithoutPersonInput!]
  updateMany: [AppearanceUpdateManyWithWhereWithoutPersonInput!]
  upsert: [AppearanceUpsertWithWhereUniqueWithoutPersonInput!]
}

input AppearanceUpdateOneRequiredWithoutTagsInput {
  connect: AppearanceWhereUniqueInput
  connectOrCreate: AppearanceCreateOrConnectWithoutTagsInput
  create: AppearanceCreateWithoutTagsInput
  update: AppearanceUpdateWithoutTagsInput
  upsert: AppearanceUpsertWithoutTagsInput
}

input AppearanceUpdateOneWithoutFacesInput {
  connect: AppearanceWhereUniqueInput
  connectOrCreate: AppearanceCreateOrConnectWithoutFacesInput
  create: AppearanceCreateWithoutFacesInput
  delete: Boolean
  disconnect: Boolean
  update: AppearanceUpdateWithoutFacesInput
  upsert: AppearanceUpsertWithoutFacesInput
}

input AppearanceUpdateWithWhereUniqueWithoutAddedByInput {
  data: AppearanceUpdateWithoutAddedByInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceUpdateWithWhereUniqueWithoutImageInput {
  data: AppearanceUpdateWithoutImageInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceUpdateWithWhereUniqueWithoutPersonInput {
  data: AppearanceUpdateWithoutPersonInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceUpdateWithoutAddedByInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutAppearanceInput
  image: ImageUpdateOneRequiredWithoutAppearancesInput
  person: PersonUpdateOneRequiredWithoutAppearancesInput
  tags: AppearanceTagUpdateManyWithoutAppearanceInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceUpdateWithoutFacesInput {
  addedBy: UserUpdateOneWithoutTaggedAppearancesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutAppearancesInput
  person: PersonUpdateOneRequiredWithoutAppearancesInput
  tags: AppearanceTagUpdateManyWithoutAppearanceInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceUpdateWithoutImageInput {
  addedBy: UserUpdateOneWithoutTaggedAppearancesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutAppearanceInput
  person: PersonUpdateOneRequiredWithoutAppearancesInput
  tags: AppearanceTagUpdateManyWithoutAppearanceInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceUpdateWithoutPersonInput {
  addedBy: UserUpdateOneWithoutTaggedAppearancesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutAppearanceInput
  image: ImageUpdateOneRequiredWithoutAppearancesInput
  tags: AppearanceTagUpdateManyWithoutAppearanceInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceUpdateWithoutTagsInput {
  addedBy: UserUpdateOneWithoutTaggedAppearancesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutAppearanceInput
  image: ImageUpdateOneRequiredWithoutAppearancesInput
  person: PersonUpdateOneRequiredWithoutAppearancesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AppearanceUpsertWithWhereUniqueWithoutAddedByInput {
  create: AppearanceCreateWithoutAddedByInput!
  update: AppearanceUpdateWithoutAddedByInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceUpsertWithWhereUniqueWithoutImageInput {
  create: AppearanceCreateWithoutImageInput!
  update: AppearanceUpdateWithoutImageInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceUpsertWithWhereUniqueWithoutPersonInput {
  create: AppearanceCreateWithoutPersonInput!
  update: AppearanceUpdateWithoutPersonInput!
  where: AppearanceWhereUniqueInput!
}

input AppearanceUpsertWithoutFacesInput {
  create: AppearanceCreateWithoutFacesInput!
  update: AppearanceUpdateWithoutFacesInput!
}

input AppearanceUpsertWithoutTagsInput {
  create: AppearanceCreateWithoutTagsInput!
  update: AppearanceUpdateWithoutTagsInput!
}

input AppearanceWhereInput {
  AND: [AppearanceWhereInput!]
  NOT: [AppearanceWhereInput!]
  OR: [AppearanceWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  faces: FaceListRelationFilter
  id: IntFilter
  image: ImageWhereInput
  imageId: IntFilter
  person: PersonWhereInput
  personId: IntFilter
  tags: AppearanceTagListRelationFilter
  updatedAt: DateTimeFilter
}

input AppearanceWhereUniqueInput {
  id: Int
  personId_imageId: AppearancePersonIdImageIdCompoundUniqueInput
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type DiscoveredImage {
  approvedImage: Image
  createdAt: DateTime!
  duplicateImage: Image
  id: Int!
  providerType: String!
  referenceUrl: String

  """A smaller thumbnail of the image"""
  thumbnail: String!
  uniqueIdentifier: String!
  updatedAt: DateTime!
  url: String!
  verdict: DiscoveredImageVerdict

  """The vote cast by the currently logged in user"""
  vote: DiscoveredImageVote

  """Votes cast by all users"""
  votes(cursor: DiscoveredImageVoteWhereUniqueInput, skip: Int, take: Int, where: DiscoveredImageVoteWhereInput): [DiscoveredImageVote!]!
}

input DiscoveredImageCreateManyDuplicateDiscoveredImageInput {
  createdAt: DateTime
  duplicateImageId: Int
  id: Int
  imageId: Int
  mediaType: String!
  postId: Int
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
}

input DiscoveredImageCreateManyDuplicateDiscoveredImageInputEnvelope {
  data: [DiscoveredImageCreateManyDuplicateDiscoveredImageInput!]
  skipDuplicates: Boolean
}

input DiscoveredImageCreateManyDuplicateImageInput {
  createdAt: DateTime
  duplicateDiscoveredImageId: Int
  id: Int
  imageId: Int
  mediaType: String!
  postId: Int
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
}

input DiscoveredImageCreateManyDuplicateImageInputEnvelope {
  data: [DiscoveredImageCreateManyDuplicateImageInput!]
  skipDuplicates: Boolean
}

input DiscoveredImageCreateNestedManyWithoutDuplicateDiscoveredImageInput {
  connect: [DiscoveredImageWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageCreateOrConnectWithoutDuplicateDiscoveredImageInput!]
  create: [DiscoveredImageCreateWithoutDuplicateDiscoveredImageInput!]
  createMany: DiscoveredImageCreateManyDuplicateDiscoveredImageInputEnvelope
}

input DiscoveredImageCreateNestedManyWithoutDuplicateImageInput {
  connect: [DiscoveredImageWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageCreateOrConnectWithoutDuplicateImageInput!]
  create: [DiscoveredImageCreateWithoutDuplicateImageInput!]
  createMany: DiscoveredImageCreateManyDuplicateImageInputEnvelope
}

input DiscoveredImageCreateNestedOneWithoutDuplicateDiscoveredImagesInput {
  connect: DiscoveredImageWhereUniqueInput
  connectOrCreate: DiscoveredImageCreateOrConnectWithoutDuplicateDiscoveredImagesInput
  create: DiscoveredImageCreateWithoutDuplicateDiscoveredImagesInput
}

input DiscoveredImageCreateNestedOneWithoutImageInput {
  connect: DiscoveredImageWhereUniqueInput
  connectOrCreate: DiscoveredImageCreateOrConnectWithoutImageInput
  create: DiscoveredImageCreateWithoutImageInput
}

input DiscoveredImageCreateNestedOneWithoutVotesInput {
  connect: DiscoveredImageWhereUniqueInput
  connectOrCreate: DiscoveredImageCreateOrConnectWithoutVotesInput
  create: DiscoveredImageCreateWithoutVotesInput
}

input DiscoveredImageCreateOrConnectWithoutDuplicateDiscoveredImageInput {
  create: DiscoveredImageCreateWithoutDuplicateDiscoveredImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageCreateOrConnectWithoutDuplicateDiscoveredImagesInput {
  create: DiscoveredImageCreateWithoutDuplicateDiscoveredImagesInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageCreateOrConnectWithoutDuplicateImageInput {
  create: DiscoveredImageCreateWithoutDuplicateImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageCreateOrConnectWithoutImageInput {
  create: DiscoveredImageCreateWithoutImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageCreateOrConnectWithoutVotesInput {
  create: DiscoveredImageCreateWithoutVotesInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageCreateWithoutDuplicateDiscoveredImageInput {
  createdAt: DateTime
  duplicateDiscoveredImages: DiscoveredImageCreateNestedManyWithoutDuplicateDiscoveredImageInput
  duplicateImage: ImageCreateNestedOneWithoutPotentialDuplicatesInput
  image: ImageCreateNestedOneWithoutDiscoverySourceInput
  mediaType: String!
  post: DiscoveredPostCreateNestedOneWithoutDiscoveredImagesInput
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
  verdict: DiscoveredImageVerdictCreateNestedOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteCreateNestedManyWithoutDiscoveredImageInput
}

input DiscoveredImageCreateWithoutDuplicateDiscoveredImagesInput {
  createdAt: DateTime
  duplicateDiscoveredImage: DiscoveredImageCreateNestedOneWithoutDuplicateDiscoveredImagesInput
  duplicateImage: ImageCreateNestedOneWithoutPotentialDuplicatesInput
  image: ImageCreateNestedOneWithoutDiscoverySourceInput
  mediaType: String!
  post: DiscoveredPostCreateNestedOneWithoutDiscoveredImagesInput
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
  verdict: DiscoveredImageVerdictCreateNestedOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteCreateNestedManyWithoutDiscoveredImageInput
}

input DiscoveredImageCreateWithoutDuplicateImageInput {
  createdAt: DateTime
  duplicateDiscoveredImage: DiscoveredImageCreateNestedOneWithoutDuplicateDiscoveredImagesInput
  duplicateDiscoveredImages: DiscoveredImageCreateNestedManyWithoutDuplicateDiscoveredImageInput
  image: ImageCreateNestedOneWithoutDiscoverySourceInput
  mediaType: String!
  post: DiscoveredPostCreateNestedOneWithoutDiscoveredImagesInput
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
  verdict: DiscoveredImageVerdictCreateNestedOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteCreateNestedManyWithoutDiscoveredImageInput
}

input DiscoveredImageCreateWithoutImageInput {
  createdAt: DateTime
  duplicateDiscoveredImage: DiscoveredImageCreateNestedOneWithoutDuplicateDiscoveredImagesInput
  duplicateDiscoveredImages: DiscoveredImageCreateNestedManyWithoutDuplicateDiscoveredImageInput
  duplicateImage: ImageCreateNestedOneWithoutPotentialDuplicatesInput
  mediaType: String!
  post: DiscoveredPostCreateNestedOneWithoutDiscoveredImagesInput
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
  verdict: DiscoveredImageVerdictCreateNestedOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteCreateNestedManyWithoutDiscoveredImageInput
}

input DiscoveredImageCreateWithoutVotesInput {
  createdAt: DateTime
  duplicateDiscoveredImage: DiscoveredImageCreateNestedOneWithoutDuplicateDiscoveredImagesInput
  duplicateDiscoveredImages: DiscoveredImageCreateNestedManyWithoutDuplicateDiscoveredImageInput
  duplicateImage: ImageCreateNestedOneWithoutPotentialDuplicatesInput
  image: ImageCreateNestedOneWithoutDiscoverySourceInput
  mediaType: String!
  post: DiscoveredPostCreateNestedOneWithoutDiscoveredImagesInput
  providerType: String!
  referenceUrl: String
  uniqueIdentifier: String!
  updatedAt: DateTime
  url: String!
  verdict: DiscoveredImageVerdictCreateNestedOneWithoutDiscoveredImageInput
}

input DiscoveredImageListRelationFilter {
  every: DiscoveredImageWhereInput
  none: DiscoveredImageWhereInput
  some: DiscoveredImageWhereInput
}

input DiscoveredImageOrderByRelationAggregateInput {
  _count: SortOrder
}

input DiscoveredImageOrderByWithRelationInput {
  createdAt: SortOrder
  duplicateDiscoveredImage: DiscoveredImageOrderByWithRelationInput
  duplicateDiscoveredImageId: SortOrder
  duplicateDiscoveredImages: DiscoveredImageOrderByRelationAggregateInput
  duplicateImage: ImageOrderByWithRelationInput
  duplicateImageId: SortOrder
  id: SortOrder
  image: ImageOrderByWithRelationInput
  imageId: SortOrder
  mediaType: SortOrder
  post: DiscoveredPostOrderByWithRelationInput
  postId: SortOrder
  providerType: SortOrder
  referenceUrl: SortOrder
  uniqueIdentifier: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  verdict: DiscoveredImageVerdictOrderByWithRelationInput
  votes: DiscoveredImageVoteOrderByRelationAggregateInput
}

input DiscoveredImageProviderTypeUniqueIdentifierCompoundUniqueInput {
  providerType: String!
  uniqueIdentifier: String!
}

input DiscoveredImageScalarWhereInput {
  AND: [DiscoveredImageScalarWhereInput!]
  NOT: [DiscoveredImageScalarWhereInput!]
  OR: [DiscoveredImageScalarWhereInput!]
  createdAt: DateTimeFilter
  duplicateDiscoveredImageId: IntNullableFilter
  duplicateImageId: IntNullableFilter
  id: IntFilter
  imageId: IntNullableFilter
  mediaType: StringFilter
  postId: IntNullableFilter
  providerType: StringFilter
  referenceUrl: StringNullableFilter
  uniqueIdentifier: StringFilter
  updatedAt: DateTimeFilter
  url: StringFilter
}

input DiscoveredImageUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  mediaType: StringFieldUpdateOperationsInput
  providerType: StringFieldUpdateOperationsInput
  referenceUrl: NullableStringFieldUpdateOperationsInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input DiscoveredImageUpdateManyWithWhereWithoutDuplicateDiscoveredImageInput {
  data: DiscoveredImageUpdateManyMutationInput!
  where: DiscoveredImageScalarWhereInput!
}

input DiscoveredImageUpdateManyWithWhereWithoutDuplicateImageInput {
  data: DiscoveredImageUpdateManyMutationInput!
  where: DiscoveredImageScalarWhereInput!
}

input DiscoveredImageUpdateManyWithoutDuplicateDiscoveredImageInput {
  connect: [DiscoveredImageWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageCreateOrConnectWithoutDuplicateDiscoveredImageInput!]
  create: [DiscoveredImageCreateWithoutDuplicateDiscoveredImageInput!]
  createMany: DiscoveredImageCreateManyDuplicateDiscoveredImageInputEnvelope
  delete: [DiscoveredImageWhereUniqueInput!]
  deleteMany: [DiscoveredImageScalarWhereInput!]
  disconnect: [DiscoveredImageWhereUniqueInput!]
  set: [DiscoveredImageWhereUniqueInput!]
  update: [DiscoveredImageUpdateWithWhereUniqueWithoutDuplicateDiscoveredImageInput!]
  updateMany: [DiscoveredImageUpdateManyWithWhereWithoutDuplicateDiscoveredImageInput!]
  upsert: [DiscoveredImageUpsertWithWhereUniqueWithoutDuplicateDiscoveredImageInput!]
}

input DiscoveredImageUpdateManyWithoutDuplicateImageInput {
  connect: [DiscoveredImageWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageCreateOrConnectWithoutDuplicateImageInput!]
  create: [DiscoveredImageCreateWithoutDuplicateImageInput!]
  createMany: DiscoveredImageCreateManyDuplicateImageInputEnvelope
  delete: [DiscoveredImageWhereUniqueInput!]
  deleteMany: [DiscoveredImageScalarWhereInput!]
  disconnect: [DiscoveredImageWhereUniqueInput!]
  set: [DiscoveredImageWhereUniqueInput!]
  update: [DiscoveredImageUpdateWithWhereUniqueWithoutDuplicateImageInput!]
  updateMany: [DiscoveredImageUpdateManyWithWhereWithoutDuplicateImageInput!]
  upsert: [DiscoveredImageUpsertWithWhereUniqueWithoutDuplicateImageInput!]
}

input DiscoveredImageUpdateOneRequiredWithoutVotesInput {
  connect: DiscoveredImageWhereUniqueInput
  connectOrCreate: DiscoveredImageCreateOrConnectWithoutVotesInput
  create: DiscoveredImageCreateWithoutVotesInput
  update: DiscoveredImageUpdateWithoutVotesInput
  upsert: DiscoveredImageUpsertWithoutVotesInput
}

input DiscoveredImageUpdateOneWithoutDuplicateDiscoveredImagesInput {
  connect: DiscoveredImageWhereUniqueInput
  connectOrCreate: DiscoveredImageCreateOrConnectWithoutDuplicateDiscoveredImagesInput
  create: DiscoveredImageCreateWithoutDuplicateDiscoveredImagesInput
  delete: Boolean
  disconnect: Boolean
  update: DiscoveredImageUpdateWithoutDuplicateDiscoveredImagesInput
  upsert: DiscoveredImageUpsertWithoutDuplicateDiscoveredImagesInput
}

input DiscoveredImageUpdateOneWithoutImageInput {
  connect: DiscoveredImageWhereUniqueInput
  connectOrCreate: DiscoveredImageCreateOrConnectWithoutImageInput
  create: DiscoveredImageCreateWithoutImageInput
  delete: Boolean
  disconnect: Boolean
  update: DiscoveredImageUpdateWithoutImageInput
  upsert: DiscoveredImageUpsertWithoutImageInput
}

input DiscoveredImageUpdateWithWhereUniqueWithoutDuplicateDiscoveredImageInput {
  data: DiscoveredImageUpdateWithoutDuplicateDiscoveredImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageUpdateWithWhereUniqueWithoutDuplicateImageInput {
  data: DiscoveredImageUpdateWithoutDuplicateImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageUpdateWithoutDuplicateDiscoveredImageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  duplicateDiscoveredImages: DiscoveredImageUpdateManyWithoutDuplicateDiscoveredImageInput
  duplicateImage: ImageUpdateOneWithoutPotentialDuplicatesInput
  image: ImageUpdateOneWithoutDiscoverySourceInput
  mediaType: StringFieldUpdateOperationsInput
  post: DiscoveredPostUpdateOneWithoutDiscoveredImagesInput
  providerType: StringFieldUpdateOperationsInput
  referenceUrl: NullableStringFieldUpdateOperationsInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  verdict: DiscoveredImageVerdictUpdateOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteUpdateManyWithoutDiscoveredImageInput
}

input DiscoveredImageUpdateWithoutDuplicateDiscoveredImagesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  duplicateDiscoveredImage: DiscoveredImageUpdateOneWithoutDuplicateDiscoveredImagesInput
  duplicateImage: ImageUpdateOneWithoutPotentialDuplicatesInput
  image: ImageUpdateOneWithoutDiscoverySourceInput
  mediaType: StringFieldUpdateOperationsInput
  post: DiscoveredPostUpdateOneWithoutDiscoveredImagesInput
  providerType: StringFieldUpdateOperationsInput
  referenceUrl: NullableStringFieldUpdateOperationsInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  verdict: DiscoveredImageVerdictUpdateOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteUpdateManyWithoutDiscoveredImageInput
}

input DiscoveredImageUpdateWithoutDuplicateImageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  duplicateDiscoveredImage: DiscoveredImageUpdateOneWithoutDuplicateDiscoveredImagesInput
  duplicateDiscoveredImages: DiscoveredImageUpdateManyWithoutDuplicateDiscoveredImageInput
  image: ImageUpdateOneWithoutDiscoverySourceInput
  mediaType: StringFieldUpdateOperationsInput
  post: DiscoveredPostUpdateOneWithoutDiscoveredImagesInput
  providerType: StringFieldUpdateOperationsInput
  referenceUrl: NullableStringFieldUpdateOperationsInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  verdict: DiscoveredImageVerdictUpdateOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteUpdateManyWithoutDiscoveredImageInput
}

input DiscoveredImageUpdateWithoutImageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  duplicateDiscoveredImage: DiscoveredImageUpdateOneWithoutDuplicateDiscoveredImagesInput
  duplicateDiscoveredImages: DiscoveredImageUpdateManyWithoutDuplicateDiscoveredImageInput
  duplicateImage: ImageUpdateOneWithoutPotentialDuplicatesInput
  mediaType: StringFieldUpdateOperationsInput
  post: DiscoveredPostUpdateOneWithoutDiscoveredImagesInput
  providerType: StringFieldUpdateOperationsInput
  referenceUrl: NullableStringFieldUpdateOperationsInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  verdict: DiscoveredImageVerdictUpdateOneWithoutDiscoveredImageInput
  votes: DiscoveredImageVoteUpdateManyWithoutDiscoveredImageInput
}

input DiscoveredImageUpdateWithoutVotesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  duplicateDiscoveredImage: DiscoveredImageUpdateOneWithoutDuplicateDiscoveredImagesInput
  duplicateDiscoveredImages: DiscoveredImageUpdateManyWithoutDuplicateDiscoveredImageInput
  duplicateImage: ImageUpdateOneWithoutPotentialDuplicatesInput
  image: ImageUpdateOneWithoutDiscoverySourceInput
  mediaType: StringFieldUpdateOperationsInput
  post: DiscoveredPostUpdateOneWithoutDiscoveredImagesInput
  providerType: StringFieldUpdateOperationsInput
  referenceUrl: NullableStringFieldUpdateOperationsInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  verdict: DiscoveredImageVerdictUpdateOneWithoutDiscoveredImageInput
}

input DiscoveredImageUpsertWithWhereUniqueWithoutDuplicateDiscoveredImageInput {
  create: DiscoveredImageCreateWithoutDuplicateDiscoveredImageInput!
  update: DiscoveredImageUpdateWithoutDuplicateDiscoveredImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageUpsertWithWhereUniqueWithoutDuplicateImageInput {
  create: DiscoveredImageCreateWithoutDuplicateImageInput!
  update: DiscoveredImageUpdateWithoutDuplicateImageInput!
  where: DiscoveredImageWhereUniqueInput!
}

input DiscoveredImageUpsertWithoutDuplicateDiscoveredImagesInput {
  create: DiscoveredImageCreateWithoutDuplicateDiscoveredImagesInput!
  update: DiscoveredImageUpdateWithoutDuplicateDiscoveredImagesInput!
}

input DiscoveredImageUpsertWithoutImageInput {
  create: DiscoveredImageCreateWithoutImageInput!
  update: DiscoveredImageUpdateWithoutImageInput!
}

input DiscoveredImageUpsertWithoutVotesInput {
  create: DiscoveredImageCreateWithoutVotesInput!
  update: DiscoveredImageUpdateWithoutVotesInput!
}

type DiscoveredImageVerdict {
  createdAt: DateTime!
  id: Int!
  reason: String
  verdict: String!
}

input DiscoveredImageVerdictCreateNestedOneWithoutDiscoveredImageInput {
  connect: DiscoveredImageVerdictWhereUniqueInput
  connectOrCreate: DiscoveredImageVerdictCreateOrConnectWithoutDiscoveredImageInput
  create: DiscoveredImageVerdictCreateWithoutDiscoveredImageInput
}

input DiscoveredImageVerdictCreateOrConnectWithoutDiscoveredImageInput {
  create: DiscoveredImageVerdictCreateWithoutDiscoveredImageInput!
  where: DiscoveredImageVerdictWhereUniqueInput!
}

input DiscoveredImageVerdictCreateWithoutDiscoveredImageInput {
  createdAt: DateTime
  reason: String
  verdict: String!
}

input DiscoveredImageVerdictOrderByWithRelationInput {
  createdAt: SortOrder
  discoveredImage: DiscoveredImageOrderByWithRelationInput
  discoveredImageId: SortOrder
  id: SortOrder
  reason: SortOrder
  verdict: SortOrder
}

input DiscoveredImageVerdictUpdateOneWithoutDiscoveredImageInput {
  connect: DiscoveredImageVerdictWhereUniqueInput
  connectOrCreate: DiscoveredImageVerdictCreateOrConnectWithoutDiscoveredImageInput
  create: DiscoveredImageVerdictCreateWithoutDiscoveredImageInput
  delete: Boolean
  disconnect: Boolean
  update: DiscoveredImageVerdictUpdateWithoutDiscoveredImageInput
  upsert: DiscoveredImageVerdictUpsertWithoutDiscoveredImageInput
}

input DiscoveredImageVerdictUpdateWithoutDiscoveredImageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  verdict: StringFieldUpdateOperationsInput
}

input DiscoveredImageVerdictUpsertWithoutDiscoveredImageInput {
  create: DiscoveredImageVerdictCreateWithoutDiscoveredImageInput!
  update: DiscoveredImageVerdictUpdateWithoutDiscoveredImageInput!
}

input DiscoveredImageVerdictWhereInput {
  AND: [DiscoveredImageVerdictWhereInput!]
  NOT: [DiscoveredImageVerdictWhereInput!]
  OR: [DiscoveredImageVerdictWhereInput!]
  createdAt: DateTimeFilter
  discoveredImage: DiscoveredImageWhereInput
  discoveredImageId: IntFilter
  id: IntFilter
  reason: StringNullableFilter
  verdict: StringFilter
}

input DiscoveredImageVerdictWhereUniqueInput {
  discoveredImageId: Int
  id: Int
}

type DiscoveredImageVote {
  createdAt: DateTime!
  id: Int!
  reason: String
  updatedAt: DateTime!
  user: User!
  verdict: String!
}

input DiscoveredImageVoteCreateManyDiscoveredImageInput {
  createdAt: DateTime
  id: Int
  reason: String
  updatedAt: DateTime
  userId: Int!
  verdict: String!
  xp: Int
}

input DiscoveredImageVoteCreateManyDiscoveredImageInputEnvelope {
  data: [DiscoveredImageVoteCreateManyDiscoveredImageInput!]
  skipDuplicates: Boolean
}

input DiscoveredImageVoteCreateManyUserInput {
  createdAt: DateTime
  discoveredImageId: Int!
  id: Int
  reason: String
  updatedAt: DateTime
  verdict: String!
  xp: Int
}

input DiscoveredImageVoteCreateManyUserInputEnvelope {
  data: [DiscoveredImageVoteCreateManyUserInput!]
  skipDuplicates: Boolean
}

input DiscoveredImageVoteCreateNestedManyWithoutDiscoveredImageInput {
  connect: [DiscoveredImageVoteWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageVoteCreateOrConnectWithoutDiscoveredImageInput!]
  create: [DiscoveredImageVoteCreateWithoutDiscoveredImageInput!]
  createMany: DiscoveredImageVoteCreateManyDiscoveredImageInputEnvelope
}

input DiscoveredImageVoteCreateNestedManyWithoutUserInput {
  connect: [DiscoveredImageVoteWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageVoteCreateOrConnectWithoutUserInput!]
  create: [DiscoveredImageVoteCreateWithoutUserInput!]
  createMany: DiscoveredImageVoteCreateManyUserInputEnvelope
}

input DiscoveredImageVoteCreateOrConnectWithoutDiscoveredImageInput {
  create: DiscoveredImageVoteCreateWithoutDiscoveredImageInput!
  where: DiscoveredImageVoteWhereUniqueInput!
}

input DiscoveredImageVoteCreateOrConnectWithoutUserInput {
  create: DiscoveredImageVoteCreateWithoutUserInput!
  where: DiscoveredImageVoteWhereUniqueInput!
}

input DiscoveredImageVoteCreateWithoutDiscoveredImageInput {
  createdAt: DateTime
  reason: String
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutDiscoveredImageVoteInput!
  verdict: String!
  xp: Int
}

input DiscoveredImageVoteCreateWithoutUserInput {
  createdAt: DateTime
  discoveredImage: DiscoveredImageCreateNestedOneWithoutVotesInput!
  reason: String
  updatedAt: DateTime
  verdict: String!
  xp: Int
}

input DiscoveredImageVoteListRelationFilter {
  every: DiscoveredImageVoteWhereInput
  none: DiscoveredImageVoteWhereInput
  some: DiscoveredImageVoteWhereInput
}

input DiscoveredImageVoteOrderByRelationAggregateInput {
  _count: SortOrder
}

input DiscoveredImageVoteScalarWhereInput {
  AND: [DiscoveredImageVoteScalarWhereInput!]
  NOT: [DiscoveredImageVoteScalarWhereInput!]
  OR: [DiscoveredImageVoteScalarWhereInput!]
  createdAt: DateTimeFilter
  discoveredImageId: IntFilter
  id: IntFilter
  reason: StringNullableFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
  verdict: StringFilter
  xp: IntFilter
}

input DiscoveredImageVoteUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verdict: StringFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input DiscoveredImageVoteUpdateManyWithWhereWithoutDiscoveredImageInput {
  data: DiscoveredImageVoteUpdateManyMutationInput!
  where: DiscoveredImageVoteScalarWhereInput!
}

input DiscoveredImageVoteUpdateManyWithWhereWithoutUserInput {
  data: DiscoveredImageVoteUpdateManyMutationInput!
  where: DiscoveredImageVoteScalarWhereInput!
}

input DiscoveredImageVoteUpdateManyWithoutDiscoveredImageInput {
  connect: [DiscoveredImageVoteWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageVoteCreateOrConnectWithoutDiscoveredImageInput!]
  create: [DiscoveredImageVoteCreateWithoutDiscoveredImageInput!]
  createMany: DiscoveredImageVoteCreateManyDiscoveredImageInputEnvelope
  delete: [DiscoveredImageVoteWhereUniqueInput!]
  deleteMany: [DiscoveredImageVoteScalarWhereInput!]
  disconnect: [DiscoveredImageVoteWhereUniqueInput!]
  set: [DiscoveredImageVoteWhereUniqueInput!]
  update: [DiscoveredImageVoteUpdateWithWhereUniqueWithoutDiscoveredImageInput!]
  updateMany: [DiscoveredImageVoteUpdateManyWithWhereWithoutDiscoveredImageInput!]
  upsert: [DiscoveredImageVoteUpsertWithWhereUniqueWithoutDiscoveredImageInput!]
}

input DiscoveredImageVoteUpdateManyWithoutUserInput {
  connect: [DiscoveredImageVoteWhereUniqueInput!]
  connectOrCreate: [DiscoveredImageVoteCreateOrConnectWithoutUserInput!]
  create: [DiscoveredImageVoteCreateWithoutUserInput!]
  createMany: DiscoveredImageVoteCreateManyUserInputEnvelope
  delete: [DiscoveredImageVoteWhereUniqueInput!]
  deleteMany: [DiscoveredImageVoteScalarWhereInput!]
  disconnect: [DiscoveredImageVoteWhereUniqueInput!]
  set: [DiscoveredImageVoteWhereUniqueInput!]
  update: [DiscoveredImageVoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [DiscoveredImageVoteUpdateManyWithWhereWithoutUserInput!]
  upsert: [DiscoveredImageVoteUpsertWithWhereUniqueWithoutUserInput!]
}

input DiscoveredImageVoteUpdateWithWhereUniqueWithoutDiscoveredImageInput {
  data: DiscoveredImageVoteUpdateWithoutDiscoveredImageInput!
  where: DiscoveredImageVoteWhereUniqueInput!
}

input DiscoveredImageVoteUpdateWithWhereUniqueWithoutUserInput {
  data: DiscoveredImageVoteUpdateWithoutUserInput!
  where: DiscoveredImageVoteWhereUniqueInput!
}

input DiscoveredImageVoteUpdateWithoutDiscoveredImageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscoveredImageVoteInput
  verdict: StringFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input DiscoveredImageVoteUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  discoveredImage: DiscoveredImageUpdateOneRequiredWithoutVotesInput
  reason: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verdict: StringFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input DiscoveredImageVoteUpsertWithWhereUniqueWithoutDiscoveredImageInput {
  create: DiscoveredImageVoteCreateWithoutDiscoveredImageInput!
  update: DiscoveredImageVoteUpdateWithoutDiscoveredImageInput!
  where: DiscoveredImageVoteWhereUniqueInput!
}

input DiscoveredImageVoteUpsertWithWhereUniqueWithoutUserInput {
  create: DiscoveredImageVoteCreateWithoutUserInput!
  update: DiscoveredImageVoteUpdateWithoutUserInput!
  where: DiscoveredImageVoteWhereUniqueInput!
}

input DiscoveredImageVoteUserVoteCompoundUniqueInput {
  discoveredImageId: Int!
  userId: Int!
}

input DiscoveredImageVoteWhereInput {
  AND: [DiscoveredImageVoteWhereInput!]
  NOT: [DiscoveredImageVoteWhereInput!]
  OR: [DiscoveredImageVoteWhereInput!]
  createdAt: DateTimeFilter
  discoveredImage: DiscoveredImageWhereInput
  discoveredImageId: IntFilter
  id: IntFilter
  reason: StringNullableFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: IntFilter
  verdict: StringFilter
  xp: IntFilter
}

input DiscoveredImageVoteWhereUniqueInput {
  id: Int
  userVote: DiscoveredImageVoteUserVoteCompoundUniqueInput
}

input DiscoveredImageWhereInput {
  AND: [DiscoveredImageWhereInput!]
  NOT: [DiscoveredImageWhereInput!]
  OR: [DiscoveredImageWhereInput!]
  createdAt: DateTimeFilter
  duplicateDiscoveredImage: DiscoveredImageWhereInput
  duplicateDiscoveredImageId: IntNullableFilter
  duplicateDiscoveredImages: DiscoveredImageListRelationFilter
  duplicateImage: ImageWhereInput
  duplicateImageId: IntNullableFilter
  id: IntFilter
  image: ImageWhereInput
  imageId: IntNullableFilter
  mediaType: StringFilter
  post: DiscoveredPostWhereInput
  postId: IntNullableFilter
  providerType: StringFilter
  referenceUrl: StringNullableFilter
  uniqueIdentifier: StringFilter
  updatedAt: DateTimeFilter
  url: StringFilter
  verdict: DiscoveredImageVerdictWhereInput
  votes: DiscoveredImageVoteListRelationFilter
}

input DiscoveredImageWhereUniqueInput {
  id: Int
  imageId: Int
  providerType_uniqueIdentifier: DiscoveredImageProviderTypeUniqueIdentifierCompoundUniqueInput
}

type DiscoveredPost {
  accountAvatarUrl: String
  accountName: String!
  body: String
  createdAt: DateTime!
  id: Int!
  images(cursor: DiscoveredImageWhereUniqueInput, skip: Int, take: Int): [DiscoveredImage!]!
  originalPostDate: DateTime
  postUrl: String
  providerType: String!

  """
  Groups who are associated with the social media account that created this post.
  """
  referencingGroups: [Group!]!

  """
  People who are associated with the social media account that created this post.
  """
  referencingPeople: [Person!]!
  uniqueIdentifier: String!
  updatedAt: DateTime!
}

input DiscoveredPostCreateNestedOneWithoutDiscoveredImagesInput {
  connect: DiscoveredPostWhereUniqueInput
  connectOrCreate: DiscoveredPostCreateOrConnectWithoutDiscoveredImagesInput
  create: DiscoveredPostCreateWithoutDiscoveredImagesInput
}

input DiscoveredPostCreateOrConnectWithoutDiscoveredImagesInput {
  create: DiscoveredPostCreateWithoutDiscoveredImagesInput!
  where: DiscoveredPostWhereUniqueInput!
}

input DiscoveredPostCreateWithoutDiscoveredImagesInput {
  accountAvatarUrl: String
  accountName: String!
  body: String
  createdAt: DateTime
  official: Boolean
  originalPostDate: DateTime
  postUrl: String
  providerType: String!
  referencingGroups: DiscoveredPostCreatereferencingGroupsInput
  referencingPeople: DiscoveredPostCreatereferencingPeopleInput
  uniqueIdentifier: String!
  updatedAt: DateTime
}

input DiscoveredPostCreatereferencingGroupsInput {
  set: [Int!]
}

input DiscoveredPostCreatereferencingPeopleInput {
  set: [Int!]
}

input DiscoveredPostDiscoveredProviderCompoundUniqueInput {
  providerType: String!
  uniqueIdentifier: String!
}

input DiscoveredPostOrderByWithRelationInput {
  accountAvatarUrl: SortOrder
  accountName: SortOrder
  body: SortOrder
  createdAt: SortOrder
  discoveredImages: DiscoveredImageOrderByRelationAggregateInput
  id: SortOrder
  official: SortOrder
  originalPostDate: SortOrder
  postUrl: SortOrder
  providerType: SortOrder
  referencingGroups: SortOrder
  referencingPeople: SortOrder
  uniqueIdentifier: SortOrder
  updatedAt: SortOrder
}

input DiscoveredPostUpdateOneWithoutDiscoveredImagesInput {
  connect: DiscoveredPostWhereUniqueInput
  connectOrCreate: DiscoveredPostCreateOrConnectWithoutDiscoveredImagesInput
  create: DiscoveredPostCreateWithoutDiscoveredImagesInput
  delete: Boolean
  disconnect: Boolean
  update: DiscoveredPostUpdateWithoutDiscoveredImagesInput
  upsert: DiscoveredPostUpsertWithoutDiscoveredImagesInput
}

input DiscoveredPostUpdateWithoutDiscoveredImagesInput {
  accountAvatarUrl: NullableStringFieldUpdateOperationsInput
  accountName: StringFieldUpdateOperationsInput
  body: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  official: BoolFieldUpdateOperationsInput
  originalPostDate: NullableDateTimeFieldUpdateOperationsInput
  postUrl: NullableStringFieldUpdateOperationsInput
  providerType: StringFieldUpdateOperationsInput
  referencingGroups: DiscoveredPostUpdatereferencingGroupsInput
  referencingPeople: DiscoveredPostUpdatereferencingPeopleInput
  uniqueIdentifier: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DiscoveredPostUpdatereferencingGroupsInput {
  push: Int
  set: [Int!]
}

input DiscoveredPostUpdatereferencingPeopleInput {
  push: Int
  set: [Int!]
}

input DiscoveredPostUpsertWithoutDiscoveredImagesInput {
  create: DiscoveredPostCreateWithoutDiscoveredImagesInput!
  update: DiscoveredPostUpdateWithoutDiscoveredImagesInput!
}

input DiscoveredPostWhereInput {
  AND: [DiscoveredPostWhereInput!]
  NOT: [DiscoveredPostWhereInput!]
  OR: [DiscoveredPostWhereInput!]
  accountAvatarUrl: StringNullableFilter
  accountName: StringFilter
  body: StringNullableFilter
  createdAt: DateTimeFilter
  discoveredImages: DiscoveredImageListRelationFilter
  id: IntFilter
  official: BoolFilter
  originalPostDate: DateTimeNullableFilter
  postUrl: StringNullableFilter
  providerType: StringFilter
  referencingGroups: IntNullableListFilter
  referencingPeople: IntNullableListFilter
  uniqueIdentifier: StringFilter
  updatedAt: DateTimeFilter
}

input DiscoveredPostWhereUniqueInput {
  discoveredProvider: DiscoveredPostDiscoveredProviderCompoundUniqueInput
  id: Int
}

"""The list of providers that supply images for the discovery feed"""
type DiscoveryProvider {
  destination: String!
  name: String
  official: Boolean!
  provider: String!
  url: String!

  """
  The number of days remaining until this provider is checked for updates again
  """
  waitDays: Int!
}

type DiscoveryStatistic {
  count: Int!
  verdict: String!
}

input EnumFaceSourceFieldUpdateOperationsInput {
  set: FaceSource
}

input EnumFaceSourceFilter {
  equals: FaceSource
  in: [FaceSource!]
  not: NestedEnumFaceSourceFilter
  notIn: [FaceSource!]
}

input EnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input EnumImageReportActionNullableFilter {
  equals: ImageReportAction
  in: [ImageReportAction!]
  not: NestedEnumImageReportActionNullableFilter
  notIn: [ImageReportAction!]
}

input EnumMimeTypeFieldUpdateOperationsInput {
  set: MimeType
}

input EnumMimeTypeFilter {
  equals: MimeType
  in: [MimeType!]
  not: NestedEnumMimeTypeFilter
  notIn: [MimeType!]
}

input EnumRestrictionKindFieldUpdateOperationsInput {
  set: RestrictionKind
}

input EnumRestrictionKindFilter {
  equals: RestrictionKind
  in: [RestrictionKind!]
  not: NestedEnumRestrictionKindFilter
  notIn: [RestrictionKind!]
}

input EnumTagSourceFieldUpdateOperationsInput {
  set: TagSource
}

input EnumTagSourceFilter {
  equals: TagSource
  in: [TagSource!]
  not: NestedEnumTagSourceFilter
  notIn: [TagSource!]
}

input EnumUploadTypeFieldUpdateOperationsInput {
  set: UploadType
}

input EnumUploadTypeFilter {
  equals: UploadType
  in: [UploadType!]
  not: NestedEnumUploadTypeFilter
  notIn: [UploadType!]
}

type Face {
  addedBy: User
  appearance: Appearance
  createdAt: DateTime!
  height: Float!
  id: Int!
  image: Image!
  score: Float! @deprecated
  source: FaceSource!
  updatedAt: DateTime!
  width: Float!
  x: Float!
  y: Float!
}

input FaceCreateNestedManyWithoutAddedByInput {
  connect: [FaceWhereUniqueInput!]
}

input FaceCreateNestedManyWithoutAppearanceInput {
  connect: [FaceWhereUniqueInput!]
}

input FaceCreateNestedManyWithoutImageInput {
  connect: [FaceWhereUniqueInput!]
}

input FaceCreateNestedManyWithoutPersonInput {
  connect: [FaceWhereUniqueInput!]
}

input FaceInput {
  certainty: Float!
  descriptor: [Float!]!
  height: Float!
  width: Float!
  x: Float!
  y: Float!
}

input FaceListRelationFilter {
  every: FaceWhereInput
  none: FaceWhereInput
  some: FaceWhereInput
}

input FaceOrderByRelationAggregateInput {
  _count: SortOrder
}

input FaceScalarWhereInput {
  AND: [FaceScalarWhereInput!]
  NOT: [FaceScalarWhereInput!]
  OR: [FaceScalarWhereInput!]
  addedById: IntNullableFilter
  appearanceId: IntNullableFilter
  createdAt: DateTimeFilter
  height: FloatFilter
  id: IntFilter
  imageId: IntFilter
  personId: IntNullableFilter
  score: FloatFilter
  source: EnumFaceSourceFilter
  updatedAt: DateTimeFilter
  width: FloatFilter
  x: FloatFilter
  y: FloatFilter
}

enum FaceSource {
  Manual
  Scan
}

input FaceUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  height: FloatFieldUpdateOperationsInput
  score: FloatFieldUpdateOperationsInput
  source: EnumFaceSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  width: FloatFieldUpdateOperationsInput
  x: FloatFieldUpdateOperationsInput
  y: FloatFieldUpdateOperationsInput
}

input FaceUpdateManyWithWhereWithoutAddedByInput {
  data: FaceUpdateManyMutationInput!
  where: FaceScalarWhereInput!
}

input FaceUpdateManyWithWhereWithoutAppearanceInput {
  data: FaceUpdateManyMutationInput!
  where: FaceScalarWhereInput!
}

input FaceUpdateManyWithWhereWithoutImageInput {
  data: FaceUpdateManyMutationInput!
  where: FaceScalarWhereInput!
}

input FaceUpdateManyWithWhereWithoutPersonInput {
  data: FaceUpdateManyMutationInput!
  where: FaceScalarWhereInput!
}

input FaceUpdateManyWithoutAddedByInput {
  connect: [FaceWhereUniqueInput!]
  delete: [FaceWhereUniqueInput!]
  deleteMany: [FaceScalarWhereInput!]
  disconnect: [FaceWhereUniqueInput!]
  set: [FaceWhereUniqueInput!]
  update: [FaceUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [FaceUpdateManyWithWhereWithoutAddedByInput!]
}

input FaceUpdateManyWithoutAppearanceInput {
  connect: [FaceWhereUniqueInput!]
  delete: [FaceWhereUniqueInput!]
  deleteMany: [FaceScalarWhereInput!]
  disconnect: [FaceWhereUniqueInput!]
  set: [FaceWhereUniqueInput!]
  update: [FaceUpdateWithWhereUniqueWithoutAppearanceInput!]
  updateMany: [FaceUpdateManyWithWhereWithoutAppearanceInput!]
}

input FaceUpdateManyWithoutImageInput {
  connect: [FaceWhereUniqueInput!]
  delete: [FaceWhereUniqueInput!]
  deleteMany: [FaceScalarWhereInput!]
  disconnect: [FaceWhereUniqueInput!]
  set: [FaceWhereUniqueInput!]
  update: [FaceUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [FaceUpdateManyWithWhereWithoutImageInput!]
}

input FaceUpdateManyWithoutPersonInput {
  connect: [FaceWhereUniqueInput!]
  delete: [FaceWhereUniqueInput!]
  deleteMany: [FaceScalarWhereInput!]
  disconnect: [FaceWhereUniqueInput!]
  set: [FaceWhereUniqueInput!]
  update: [FaceUpdateWithWhereUniqueWithoutPersonInput!]
  updateMany: [FaceUpdateManyWithWhereWithoutPersonInput!]
}

input FaceUpdateWithWhereUniqueWithoutAddedByInput {
  data: FaceUpdateWithoutAddedByInput!
  where: FaceWhereUniqueInput!
}

input FaceUpdateWithWhereUniqueWithoutAppearanceInput {
  data: FaceUpdateWithoutAppearanceInput!
  where: FaceWhereUniqueInput!
}

input FaceUpdateWithWhereUniqueWithoutImageInput {
  data: FaceUpdateWithoutImageInput!
  where: FaceWhereUniqueInput!
}

input FaceUpdateWithWhereUniqueWithoutPersonInput {
  data: FaceUpdateWithoutPersonInput!
  where: FaceWhereUniqueInput!
}

input FaceUpdateWithoutAddedByInput {
  appearance: AppearanceUpdateOneWithoutFacesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: FloatFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutFacesInput
  person: PersonUpdateOneWithoutAppearsInInput
  score: FloatFieldUpdateOperationsInput
  source: EnumFaceSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  width: FloatFieldUpdateOperationsInput
  x: FloatFieldUpdateOperationsInput
  y: FloatFieldUpdateOperationsInput
}

input FaceUpdateWithoutAppearanceInput {
  addedBy: UserUpdateOneWithoutMarkedFacesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: FloatFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutFacesInput
  person: PersonUpdateOneWithoutAppearsInInput
  score: FloatFieldUpdateOperationsInput
  source: EnumFaceSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  width: FloatFieldUpdateOperationsInput
  x: FloatFieldUpdateOperationsInput
  y: FloatFieldUpdateOperationsInput
}

input FaceUpdateWithoutImageInput {
  addedBy: UserUpdateOneWithoutMarkedFacesInput
  appearance: AppearanceUpdateOneWithoutFacesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: FloatFieldUpdateOperationsInput
  person: PersonUpdateOneWithoutAppearsInInput
  score: FloatFieldUpdateOperationsInput
  source: EnumFaceSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  width: FloatFieldUpdateOperationsInput
  x: FloatFieldUpdateOperationsInput
  y: FloatFieldUpdateOperationsInput
}

input FaceUpdateWithoutPersonInput {
  addedBy: UserUpdateOneWithoutMarkedFacesInput
  appearance: AppearanceUpdateOneWithoutFacesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: FloatFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutFacesInput
  score: FloatFieldUpdateOperationsInput
  source: EnumFaceSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  width: FloatFieldUpdateOperationsInput
  x: FloatFieldUpdateOperationsInput
  y: FloatFieldUpdateOperationsInput
}

input FaceWhereInput {
  AND: [FaceWhereInput!]
  NOT: [FaceWhereInput!]
  OR: [FaceWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  appearance: AppearanceWhereInput
  appearanceId: IntNullableFilter
  createdAt: DateTimeFilter
  height: FloatFilter
  id: IntFilter
  image: ImageWhereInput
  imageId: IntFilter
  person: PersonWhereInput
  personId: IntNullableFilter
  score: FloatFilter
  source: EnumFaceSourceFilter
  updatedAt: DateTimeFilter
  width: FloatFilter
  x: FloatFilter
  y: FloatFilter
}

input FaceWhereUniqueInput {
  id: Int
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

enum Gender {
  FEMALE
  MALE
  NONBINARY
}

type Group {
  aliases(cursor: GroupAliasWhereUniqueInput, skip: Int, take: Int): [GroupAlias!]!
  avatar: Image
  banner: Image
  createdAt: DateTime!
  id: Int!
  members(cursor: GroupMemberWhereUniqueInput, skip: Int, take: Int): [GroupMember!]!
  name: String!
  updatedAt: DateTime!
}

type GroupAlias {
  createdAt: DateTime!
  id: Int!
  name: String!
  updatedAt: DateTime!
}

input GroupAliasCreateManyGroupInput {
  createdAt: DateTime
  id: Int
  name: String!
  updatedAt: DateTime
}

input GroupAliasCreateManyGroupInputEnvelope {
  data: [GroupAliasCreateManyGroupInput!]
  skipDuplicates: Boolean
}

input GroupAliasCreateNestedManyWithoutGroupInput {
  connect: [GroupAliasWhereUniqueInput!]
  connectOrCreate: [GroupAliasCreateOrConnectWithoutGroupInput!]
  create: [GroupAliasCreateWithoutGroupInput!]
  createMany: GroupAliasCreateManyGroupInputEnvelope
}

input GroupAliasCreateOrConnectWithoutGroupInput {
  create: GroupAliasCreateWithoutGroupInput!
  where: GroupAliasWhereUniqueInput!
}

input GroupAliasCreateWithoutGroupInput {
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input GroupAliasListRelationFilter {
  every: GroupAliasWhereInput
  none: GroupAliasWhereInput
  some: GroupAliasWhereInput
}

input GroupAliasOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupAliasScalarWhereInput {
  AND: [GroupAliasScalarWhereInput!]
  NOT: [GroupAliasScalarWhereInput!]
  OR: [GroupAliasScalarWhereInput!]
  createdAt: DateTimeFilter
  groupId: IntFilter
  id: IntFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input GroupAliasUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupAliasUpdateManyWithWhereWithoutGroupInput {
  data: GroupAliasUpdateManyMutationInput!
  where: GroupAliasScalarWhereInput!
}

input GroupAliasUpdateManyWithoutGroupInput {
  connect: [GroupAliasWhereUniqueInput!]
  connectOrCreate: [GroupAliasCreateOrConnectWithoutGroupInput!]
  create: [GroupAliasCreateWithoutGroupInput!]
  createMany: GroupAliasCreateManyGroupInputEnvelope
  delete: [GroupAliasWhereUniqueInput!]
  deleteMany: [GroupAliasScalarWhereInput!]
  disconnect: [GroupAliasWhereUniqueInput!]
  set: [GroupAliasWhereUniqueInput!]
  update: [GroupAliasUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [GroupAliasUpdateManyWithWhereWithoutGroupInput!]
  upsert: [GroupAliasUpsertWithWhereUniqueWithoutGroupInput!]
}

input GroupAliasUpdateWithWhereUniqueWithoutGroupInput {
  data: GroupAliasUpdateWithoutGroupInput!
  where: GroupAliasWhereUniqueInput!
}

input GroupAliasUpdateWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupAliasUpsertWithWhereUniqueWithoutGroupInput {
  create: GroupAliasCreateWithoutGroupInput!
  update: GroupAliasUpdateWithoutGroupInput!
  where: GroupAliasWhereUniqueInput!
}

input GroupAliasWhereInput {
  AND: [GroupAliasWhereInput!]
  NOT: [GroupAliasWhereInput!]
  OR: [GroupAliasWhereInput!]
  createdAt: DateTimeFilter
  group: GroupWhereInput
  groupId: IntFilter
  id: IntFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input GroupAliasWhereUniqueInput {
  id: Int
}

input GroupCreateInput {
  aliases: GroupAliasCreateNestedManyWithoutGroupInput
  avatar: ImageCreateNestedOneWithoutGroupAvatarOfInput
  banner: ImageCreateNestedOneWithoutGroupBannerOfInput
  createdAt: DateTime
  ireneBotId: Int
  members: GroupMemberCreateNestedManyWithoutGroupInput
  name: String!
  updatedAt: DateTime
}

input GroupCreateNestedOneWithoutAvatarInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutAvatarInput
  create: GroupCreateWithoutAvatarInput
}

input GroupCreateNestedOneWithoutBannerInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutBannerInput
  create: GroupCreateWithoutBannerInput
}

input GroupCreateNestedOneWithoutMembersInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutMembersInput
  create: GroupCreateWithoutMembersInput
}

input GroupCreateOrConnectWithoutAvatarInput {
  create: GroupCreateWithoutAvatarInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutBannerInput {
  create: GroupCreateWithoutBannerInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutMembersInput {
  create: GroupCreateWithoutMembersInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutAvatarInput {
  aliases: GroupAliasCreateNestedManyWithoutGroupInput
  banner: ImageCreateNestedOneWithoutGroupBannerOfInput
  createdAt: DateTime
  ireneBotId: Int
  members: GroupMemberCreateNestedManyWithoutGroupInput
  name: String!
  updatedAt: DateTime
}

input GroupCreateWithoutBannerInput {
  aliases: GroupAliasCreateNestedManyWithoutGroupInput
  avatar: ImageCreateNestedOneWithoutGroupAvatarOfInput
  createdAt: DateTime
  ireneBotId: Int
  members: GroupMemberCreateNestedManyWithoutGroupInput
  name: String!
  updatedAt: DateTime
}

input GroupCreateWithoutMembersInput {
  aliases: GroupAliasCreateNestedManyWithoutGroupInput
  avatar: ImageCreateNestedOneWithoutGroupAvatarOfInput
  banner: ImageCreateNestedOneWithoutGroupBannerOfInput
  createdAt: DateTime
  ireneBotId: Int
  name: String!
  updatedAt: DateTime
}

type GroupMember {
  createdAt: DateTime!
  endDate: DateTime
  group: Group!
  id: Int!
  person: Person!
  startDate: DateTime
  updatedAt: DateTime!
}

input GroupMemberCreateManyGroupInput {
  createdAt: DateTime
  endDate: DateTime
  id: Int
  personId: Int!
  startDate: DateTime
  updatedAt: DateTime
}

input GroupMemberCreateManyGroupInputEnvelope {
  data: [GroupMemberCreateManyGroupInput!]
  skipDuplicates: Boolean
}

input GroupMemberCreateManyPersonInput {
  createdAt: DateTime
  endDate: DateTime
  groupId: Int!
  id: Int
  startDate: DateTime
  updatedAt: DateTime
}

input GroupMemberCreateManyPersonInputEnvelope {
  data: [GroupMemberCreateManyPersonInput!]
  skipDuplicates: Boolean
}

input GroupMemberCreateNestedManyWithoutGroupInput {
  connect: [GroupMemberWhereUniqueInput!]
  connectOrCreate: [GroupMemberCreateOrConnectWithoutGroupInput!]
  create: [GroupMemberCreateWithoutGroupInput!]
  createMany: GroupMemberCreateManyGroupInputEnvelope
}

input GroupMemberCreateNestedManyWithoutPersonInput {
  connect: [GroupMemberWhereUniqueInput!]
  connectOrCreate: [GroupMemberCreateOrConnectWithoutPersonInput!]
  create: [GroupMemberCreateWithoutPersonInput!]
  createMany: GroupMemberCreateManyPersonInputEnvelope
}

input GroupMemberCreateNestedOneWithoutPreferredMemberships_Input {
  connect: GroupMemberWhereUniqueInput
  connectOrCreate: GroupMemberCreateOrConnectWithoutPreferredMemberships_Input
  create: GroupMemberCreateWithoutPreferredMemberships_Input
}

input GroupMemberCreateOrConnectWithoutGroupInput {
  create: GroupMemberCreateWithoutGroupInput!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberCreateOrConnectWithoutPersonInput {
  create: GroupMemberCreateWithoutPersonInput!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberCreateOrConnectWithoutPreferredMemberships_Input {
  create: GroupMemberCreateWithoutPreferredMemberships_Input!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberCreateWithoutGroupInput {
  createdAt: DateTime
  endDate: DateTime
  person: PersonCreateNestedOneWithoutMemberOfInput!
  preferredMemberships_: PersonCreateNestedManyWithoutPreferredMembershipInput
  startDate: DateTime
  updatedAt: DateTime
}

input GroupMemberCreateWithoutPersonInput {
  createdAt: DateTime
  endDate: DateTime
  group: GroupCreateNestedOneWithoutMembersInput!
  preferredMemberships_: PersonCreateNestedManyWithoutPreferredMembershipInput
  startDate: DateTime
  updatedAt: DateTime
}

input GroupMemberCreateWithoutPreferredMemberships_Input {
  createdAt: DateTime
  endDate: DateTime
  group: GroupCreateNestedOneWithoutMembersInput!
  person: PersonCreateNestedOneWithoutMemberOfInput!
  startDate: DateTime
  updatedAt: DateTime
}

input GroupMemberGroupIdPersonIdCompoundUniqueInput {
  groupId: Int!
  personId: Int!
}

input GroupMemberListRelationFilter {
  every: GroupMemberWhereInput
  none: GroupMemberWhereInput
  some: GroupMemberWhereInput
}

input GroupMemberOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupMemberOrderByWithRelationInput {
  createdAt: SortOrder
  endDate: SortOrder
  group: GroupOrderByWithRelationInput
  groupId: SortOrder
  id: SortOrder
  person: PersonOrderByWithRelationInput
  personId: SortOrder
  preferredMemberships_: PersonOrderByRelationAggregateInput
  startDate: SortOrder
  updatedAt: SortOrder
}

input GroupMemberScalarWhereInput {
  AND: [GroupMemberScalarWhereInput!]
  NOT: [GroupMemberScalarWhereInput!]
  OR: [GroupMemberScalarWhereInput!]
  createdAt: DateTimeFilter
  endDate: DateTimeNullableFilter
  groupId: IntFilter
  id: IntFilter
  personId: IntFilter
  startDate: DateTimeNullableFilter
  updatedAt: DateTimeFilter
}

input GroupMemberUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupMemberUpdateManyWithWhereWithoutGroupInput {
  data: GroupMemberUpdateManyMutationInput!
  where: GroupMemberScalarWhereInput!
}

input GroupMemberUpdateManyWithWhereWithoutPersonInput {
  data: GroupMemberUpdateManyMutationInput!
  where: GroupMemberScalarWhereInput!
}

input GroupMemberUpdateManyWithoutGroupInput {
  connect: [GroupMemberWhereUniqueInput!]
  connectOrCreate: [GroupMemberCreateOrConnectWithoutGroupInput!]
  create: [GroupMemberCreateWithoutGroupInput!]
  createMany: GroupMemberCreateManyGroupInputEnvelope
  delete: [GroupMemberWhereUniqueInput!]
  deleteMany: [GroupMemberScalarWhereInput!]
  disconnect: [GroupMemberWhereUniqueInput!]
  set: [GroupMemberWhereUniqueInput!]
  update: [GroupMemberUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [GroupMemberUpdateManyWithWhereWithoutGroupInput!]
  upsert: [GroupMemberUpsertWithWhereUniqueWithoutGroupInput!]
}

input GroupMemberUpdateManyWithoutPersonInput {
  connect: [GroupMemberWhereUniqueInput!]
  connectOrCreate: [GroupMemberCreateOrConnectWithoutPersonInput!]
  create: [GroupMemberCreateWithoutPersonInput!]
  createMany: GroupMemberCreateManyPersonInputEnvelope
  delete: [GroupMemberWhereUniqueInput!]
  deleteMany: [GroupMemberScalarWhereInput!]
  disconnect: [GroupMemberWhereUniqueInput!]
  set: [GroupMemberWhereUniqueInput!]
  update: [GroupMemberUpdateWithWhereUniqueWithoutPersonInput!]
  updateMany: [GroupMemberUpdateManyWithWhereWithoutPersonInput!]
  upsert: [GroupMemberUpsertWithWhereUniqueWithoutPersonInput!]
}

input GroupMemberUpdateOneWithoutPreferredMemberships_Input {
  connect: GroupMemberWhereUniqueInput
  connectOrCreate: GroupMemberCreateOrConnectWithoutPreferredMemberships_Input
  create: GroupMemberCreateWithoutPreferredMemberships_Input
  delete: Boolean
  disconnect: Boolean
  update: GroupMemberUpdateWithoutPreferredMemberships_Input
  upsert: GroupMemberUpsertWithoutPreferredMemberships_Input
}

input GroupMemberUpdateWithWhereUniqueWithoutGroupInput {
  data: GroupMemberUpdateWithoutGroupInput!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberUpdateWithWhereUniqueWithoutPersonInput {
  data: GroupMemberUpdateWithoutPersonInput!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberUpdateWithoutGroupInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  person: PersonUpdateOneRequiredWithoutMemberOfInput
  preferredMemberships_: PersonUpdateManyWithoutPreferredMembershipInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupMemberUpdateWithoutPersonInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  group: GroupUpdateOneRequiredWithoutMembersInput
  preferredMemberships_: PersonUpdateManyWithoutPreferredMembershipInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupMemberUpdateWithoutPreferredMemberships_Input {
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  group: GroupUpdateOneRequiredWithoutMembersInput
  person: PersonUpdateOneRequiredWithoutMemberOfInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupMemberUpsertWithWhereUniqueWithoutGroupInput {
  create: GroupMemberCreateWithoutGroupInput!
  update: GroupMemberUpdateWithoutGroupInput!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberUpsertWithWhereUniqueWithoutPersonInput {
  create: GroupMemberCreateWithoutPersonInput!
  update: GroupMemberUpdateWithoutPersonInput!
  where: GroupMemberWhereUniqueInput!
}

input GroupMemberUpsertWithoutPreferredMemberships_Input {
  create: GroupMemberCreateWithoutPreferredMemberships_Input!
  update: GroupMemberUpdateWithoutPreferredMemberships_Input!
}

input GroupMemberWhereInput {
  AND: [GroupMemberWhereInput!]
  NOT: [GroupMemberWhereInput!]
  OR: [GroupMemberWhereInput!]
  createdAt: DateTimeFilter
  endDate: DateTimeNullableFilter
  group: GroupWhereInput
  groupId: IntFilter
  id: IntFilter
  person: PersonWhereInput
  personId: IntFilter
  preferredMemberships_: PersonListRelationFilter
  startDate: DateTimeNullableFilter
  updatedAt: DateTimeFilter
}

input GroupMemberWhereUniqueInput {
  groupId_personId: GroupMemberGroupIdPersonIdCompoundUniqueInput
  id: Int
}

input GroupMembership {
  endDate: String
  id: Int!
  startDate: String
}

input GroupOrderByWithRelationInput {
  aliases: GroupAliasOrderByRelationAggregateInput
  avatar: ImageOrderByWithRelationInput
  avatarId: SortOrder
  banner: ImageOrderByWithRelationInput
  bannerId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  ireneBotId: SortOrder
  members: GroupMemberOrderByRelationAggregateInput
  name: SortOrder
  updatedAt: SortOrder
}

input GroupUpdateInput {
  aliases: GroupAliasUpdateManyWithoutGroupInput
  avatar: ImageUpdateOneWithoutGroupAvatarOfInput
  banner: ImageUpdateOneWithoutGroupBannerOfInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  members: GroupMemberUpdateManyWithoutGroupInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateOneRequiredWithoutMembersInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutMembersInput
  create: GroupCreateWithoutMembersInput
  update: GroupUpdateWithoutMembersInput
  upsert: GroupUpsertWithoutMembersInput
}

input GroupUpdateOneWithoutAvatarInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutAvatarInput
  create: GroupCreateWithoutAvatarInput
  delete: Boolean
  disconnect: Boolean
  update: GroupUpdateWithoutAvatarInput
  upsert: GroupUpsertWithoutAvatarInput
}

input GroupUpdateOneWithoutBannerInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutBannerInput
  create: GroupCreateWithoutBannerInput
  delete: Boolean
  disconnect: Boolean
  update: GroupUpdateWithoutBannerInput
  upsert: GroupUpsertWithoutBannerInput
}

input GroupUpdateWithoutAvatarInput {
  aliases: GroupAliasUpdateManyWithoutGroupInput
  banner: ImageUpdateOneWithoutGroupBannerOfInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  members: GroupMemberUpdateManyWithoutGroupInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateWithoutBannerInput {
  aliases: GroupAliasUpdateManyWithoutGroupInput
  avatar: ImageUpdateOneWithoutGroupAvatarOfInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  members: GroupMemberUpdateManyWithoutGroupInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateWithoutMembersInput {
  aliases: GroupAliasUpdateManyWithoutGroupInput
  avatar: ImageUpdateOneWithoutGroupAvatarOfInput
  banner: ImageUpdateOneWithoutGroupBannerOfInput
  createdAt: DateTimeFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpsertWithoutAvatarInput {
  create: GroupCreateWithoutAvatarInput!
  update: GroupUpdateWithoutAvatarInput!
}

input GroupUpsertWithoutBannerInput {
  create: GroupCreateWithoutBannerInput!
  update: GroupUpdateWithoutBannerInput!
}

input GroupUpsertWithoutMembersInput {
  create: GroupCreateWithoutMembersInput!
  update: GroupUpdateWithoutMembersInput!
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  aliases: GroupAliasListRelationFilter
  avatar: ImageWhereInput
  avatarId: IntNullableFilter
  banner: ImageWhereInput
  bannerId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  ireneBotId: IntNullableFilter
  members: GroupMemberListRelationFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input GroupWhereUniqueInput {
  avatarId: Int
  bannerId: Int
  id: Int
  ireneBotId: Int
}

type Homepage {
  trending: [[HomepageTrendingPerson!]!]!
}

type HomepageTrendingPerson {
  person: Person!
}

type Image {
  appearanceTags(cursor: AppearanceTagWhereUniqueInput, skip: Int, take: Int): [AppearanceTag!]!
  appearances(cursor: AppearanceWhereUniqueInput, skip: Int, take: Int): [Appearance!]!

  """The aspect ratio of the image"""
  aspectRatio: Float!
  bytes: Int!
  caption: String

  """
  A graph of connections people in this image share with others based on images they appear together in up to a depth of 4
  """
  connections(depth: Int! = 2): ImageConnections!
  createdAt: DateTime!
  faceScanDate: DateTime

  """The name the image file was uploaded with."""
  fileName: String

  """Human readable file size. Use `bytes` for a number representation."""
  fileSize: String!

  """
  The center of focus for the image. Calculated based on the position of the faces in the image.
  """
  focus: ImageCoordinate!

  """SHA256 checksum of the image."""
  hash: String!

  """Height of the image in pixels."""
  height: Int!
  hiddenAt: DateTime
  id: Int!
  imageTags(cursor: ImageTagWhereUniqueInput, skip: Int, take: Int): [ImageTag!]!
  ireneBotId: Int
  isNsfw: Boolean! @deprecated(reason: "Unused field, all images are SFW")

  """False if not logged in"""
  liked: Boolean

  """The IANA media type of the image."""
  mimetype: MimeType!

  """Dominant colors in the image in decimal format, sorted by frequency."""
  palette: [Int!]!

  """The visibility status of the image."""
  public: Boolean!

  """Direct link to the image on the CDN"""
  rawUrl: String!
  reported: Boolean!

  """The unique url identifier of the image."""
  slug: String!

  """
  The url the image was taken from (if applicable). Not guaranteed to be a direct image url.
  """
  source: String
  thumbnail: Thumbnail!
  unknownFaces: [Face!]!
  uploadType: UploadType!
  uploadedBy: User

  """Link to the image on the site"""
  url: String!
  views: Int!

  """Width of the image in pixels."""
  width: Int!
}

enum ImageConnectionEdge {
  IMAGE_TO_PERSON
  PERSON_TO_IMAGE
}

type ImageConnections {
  edges: [ImageEdge!]!
  images: [Image!]!
  people: [Person!]!
}

"""A coordinate representing a position on an image"""
type ImageCoordinate {
  x: Int!
  y: Int!
}

input ImageCreateManyUserInput {
  bytes: Int
  caption: String
  createdAt: DateTime
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  fileName: String
  hash: String!
  height: Int!
  hiddenAt: DateTime
  id: Int
  ireneBotId: Int
  isNsfw: Boolean
  mimetype: MimeType!
  pHash: String
  palette: ImageCreateManypaletteInput
  public: Boolean
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateManyUserInputEnvelope {
  data: [ImageCreateManyUserInput!]
  skipDuplicates: Boolean
}

input ImageCreateManypaletteInput {
  set: [Int!]
}

input ImageCreateNestedManyWithoutUserInput {
  connect: [ImageWhereUniqueInput!]
  connectOrCreate: [ImageCreateOrConnectWithoutUserInput!]
  create: [ImageCreateWithoutUserInput!]
  createMany: ImageCreateManyUserInputEnvelope
}

input ImageCreateNestedOneWithoutAppearanceTagsInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutAppearanceTagsInput
  create: ImageCreateWithoutAppearanceTagsInput
}

input ImageCreateNestedOneWithoutAppearancesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutAppearancesInput
  create: ImageCreateWithoutAppearancesInput
}

input ImageCreateNestedOneWithoutDiscoverySourceInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutDiscoverySourceInput
  create: ImageCreateWithoutDiscoverySourceInput
}

input ImageCreateNestedOneWithoutGroupAvatarOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutGroupAvatarOfInput
  create: ImageCreateWithoutGroupAvatarOfInput
}

input ImageCreateNestedOneWithoutGroupBannerOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutGroupBannerOfInput
  create: ImageCreateWithoutGroupBannerOfInput
}

input ImageCreateNestedOneWithoutImageTagsInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutImageTagsInput
  create: ImageCreateWithoutImageTagsInput
}

input ImageCreateNestedOneWithoutLikesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutLikesInput
  create: ImageCreateWithoutLikesInput
}

input ImageCreateNestedOneWithoutPersonAvatarOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutPersonAvatarOfInput
  create: ImageCreateWithoutPersonAvatarOfInput
}

input ImageCreateNestedOneWithoutPersonBannerOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutPersonBannerOfInput
  create: ImageCreateWithoutPersonBannerOfInput
}

input ImageCreateNestedOneWithoutPotentialDuplicatesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutPotentialDuplicatesInput
  create: ImageCreateWithoutPotentialDuplicatesInput
}

input ImageCreateNestedOneWithoutReportsInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutReportsInput
  create: ImageCreateWithoutReportsInput
}

input ImageCreateNestedOneWithoutUserAvatarOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutUserAvatarOfInput
  create: ImageCreateWithoutUserAvatarOfInput
}

input ImageCreateNestedOneWithoutUserBannerOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutUserBannerOfInput
  create: ImageCreateWithoutUserBannerOfInput
}

input ImageCreateOrConnectWithoutAppearanceTagsInput {
  create: ImageCreateWithoutAppearanceTagsInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutAppearancesInput {
  create: ImageCreateWithoutAppearancesInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutDiscoverySourceInput {
  create: ImageCreateWithoutDiscoverySourceInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutFacesInput {
  create: ImageCreateWithoutFacesInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutGroupAvatarOfInput {
  create: ImageCreateWithoutGroupAvatarOfInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutGroupBannerOfInput {
  create: ImageCreateWithoutGroupBannerOfInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutImageTagsInput {
  create: ImageCreateWithoutImageTagsInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutLikesInput {
  create: ImageCreateWithoutLikesInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutPersonAvatarOfInput {
  create: ImageCreateWithoutPersonAvatarOfInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutPersonBannerOfInput {
  create: ImageCreateWithoutPersonBannerOfInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutPotentialDuplicatesInput {
  create: ImageCreateWithoutPotentialDuplicatesInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutReportsInput {
  create: ImageCreateWithoutReportsInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutUserAvatarOfInput {
  create: ImageCreateWithoutUserAvatarOfInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutUserBannerOfInput {
  create: ImageCreateWithoutUserBannerOfInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateOrConnectWithoutUserInput {
  create: ImageCreateWithoutUserInput!
  where: ImageWhereUniqueInput!
}

input ImageCreateWithoutAppearanceTagsInput {
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutAppearancesInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutDiscoverySourceInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutFacesInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutGroupAvatarOfInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutGroupBannerOfInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutImageTagsInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutLikesInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutPersonAvatarOfInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutPersonBannerOfInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutPotentialDuplicatesInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutReportsInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutUserAvatarOfInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutUserBannerOfInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  user: UserCreateNestedOneWithoutImagesInput
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreateWithoutUserInput {
  appearanceTags: AppearanceTagCreateNestedManyWithoutImageInput
  appearances: AppearanceCreateNestedManyWithoutImageInput
  bytes: Int
  caption: String
  createdAt: DateTime
  discoverySource: DiscoveredImageCreateNestedOneWithoutImageInput
  faceScanDate: DateTime
  faceScanRequestDate: DateTime
  faces: FaceCreateNestedManyWithoutImageInput
  fileName: String
  groupAvatarOf: GroupCreateNestedOneWithoutAvatarInput
  groupBannerOf: GroupCreateNestedOneWithoutBannerInput
  hash: String!
  height: Int!
  hiddenAt: DateTime
  imageTags: ImageTagCreateNestedManyWithoutImageInput
  ireneBotId: Int
  isNsfw: Boolean
  likes: ImageLikeCreateNestedManyWithoutImageInput
  mimetype: MimeType!
  pHash: String
  palette: ImageCreatepaletteInput
  personAvatarOf: PersonCreateNestedOneWithoutAvatarInput
  personBannerOf: PersonCreateNestedOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageCreateNestedManyWithoutDuplicateImageInput
  public: Boolean
  reports: ImageReportCreateNestedManyWithoutImageInput
  slug: String!
  source: String
  updatedAt: DateTime
  uploadType: UploadType!
  userAvatarOf: UserCreateNestedOneWithoutAvatarInput
  userBannerOf: UserCreateNestedOneWithoutBannerInput
  views: Int
  width: Int!
  xp: Int
}

input ImageCreatepaletteInput {
  set: [Int!]
}

type ImageEdge {
  from: Int!
  to: Int!
  type: ImageConnectionEdge
}

input ImageLikeCreateManyImageInput {
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
  userId: Int!
}

input ImageLikeCreateManyImageInputEnvelope {
  data: [ImageLikeCreateManyImageInput!]
  skipDuplicates: Boolean
}

input ImageLikeCreateManyUserInput {
  createdAt: DateTime
  id: Int
  imageId: Int!
  updatedAt: DateTime
}

input ImageLikeCreateManyUserInputEnvelope {
  data: [ImageLikeCreateManyUserInput!]
  skipDuplicates: Boolean
}

input ImageLikeCreateNestedManyWithoutImageInput {
  connect: [ImageLikeWhereUniqueInput!]
  connectOrCreate: [ImageLikeCreateOrConnectWithoutImageInput!]
  create: [ImageLikeCreateWithoutImageInput!]
  createMany: ImageLikeCreateManyImageInputEnvelope
}

input ImageLikeCreateNestedManyWithoutUserInput {
  connect: [ImageLikeWhereUniqueInput!]
  connectOrCreate: [ImageLikeCreateOrConnectWithoutUserInput!]
  create: [ImageLikeCreateWithoutUserInput!]
  createMany: ImageLikeCreateManyUserInputEnvelope
}

input ImageLikeCreateOrConnectWithoutImageInput {
  create: ImageLikeCreateWithoutImageInput!
  where: ImageLikeWhereUniqueInput!
}

input ImageLikeCreateOrConnectWithoutUserInput {
  create: ImageLikeCreateWithoutUserInput!
  where: ImageLikeWhereUniqueInput!
}

input ImageLikeCreateWithoutImageInput {
  createdAt: DateTime
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutImageLikesInput!
}

input ImageLikeCreateWithoutUserInput {
  createdAt: DateTime
  image: ImageCreateNestedOneWithoutLikesInput!
  updatedAt: DateTime
}

input ImageLikeListRelationFilter {
  every: ImageLikeWhereInput
  none: ImageLikeWhereInput
  some: ImageLikeWhereInput
}

input ImageLikeOrderByRelationAggregateInput {
  _count: SortOrder
}

input ImageLikeScalarWhereInput {
  AND: [ImageLikeScalarWhereInput!]
  NOT: [ImageLikeScalarWhereInput!]
  OR: [ImageLikeScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  imageId: IntFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
}

input ImageLikeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageLikeUpdateManyWithWhereWithoutImageInput {
  data: ImageLikeUpdateManyMutationInput!
  where: ImageLikeScalarWhereInput!
}

input ImageLikeUpdateManyWithWhereWithoutUserInput {
  data: ImageLikeUpdateManyMutationInput!
  where: ImageLikeScalarWhereInput!
}

input ImageLikeUpdateManyWithoutImageInput {
  connect: [ImageLikeWhereUniqueInput!]
  connectOrCreate: [ImageLikeCreateOrConnectWithoutImageInput!]
  create: [ImageLikeCreateWithoutImageInput!]
  createMany: ImageLikeCreateManyImageInputEnvelope
  delete: [ImageLikeWhereUniqueInput!]
  deleteMany: [ImageLikeScalarWhereInput!]
  disconnect: [ImageLikeWhereUniqueInput!]
  set: [ImageLikeWhereUniqueInput!]
  update: [ImageLikeUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [ImageLikeUpdateManyWithWhereWithoutImageInput!]
  upsert: [ImageLikeUpsertWithWhereUniqueWithoutImageInput!]
}

input ImageLikeUpdateManyWithoutUserInput {
  connect: [ImageLikeWhereUniqueInput!]
  connectOrCreate: [ImageLikeCreateOrConnectWithoutUserInput!]
  create: [ImageLikeCreateWithoutUserInput!]
  createMany: ImageLikeCreateManyUserInputEnvelope
  delete: [ImageLikeWhereUniqueInput!]
  deleteMany: [ImageLikeScalarWhereInput!]
  disconnect: [ImageLikeWhereUniqueInput!]
  set: [ImageLikeWhereUniqueInput!]
  update: [ImageLikeUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ImageLikeUpdateManyWithWhereWithoutUserInput!]
  upsert: [ImageLikeUpsertWithWhereUniqueWithoutUserInput!]
}

input ImageLikeUpdateWithWhereUniqueWithoutImageInput {
  data: ImageLikeUpdateWithoutImageInput!
  where: ImageLikeWhereUniqueInput!
}

input ImageLikeUpdateWithWhereUniqueWithoutUserInput {
  data: ImageLikeUpdateWithoutUserInput!
  where: ImageLikeWhereUniqueInput!
}

input ImageLikeUpdateWithoutImageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutImageLikesInput
}

input ImageLikeUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutLikesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageLikeUpsertWithWhereUniqueWithoutImageInput {
  create: ImageLikeCreateWithoutImageInput!
  update: ImageLikeUpdateWithoutImageInput!
  where: ImageLikeWhereUniqueInput!
}

input ImageLikeUpsertWithWhereUniqueWithoutUserInput {
  create: ImageLikeCreateWithoutUserInput!
  update: ImageLikeUpdateWithoutUserInput!
  where: ImageLikeWhereUniqueInput!
}

input ImageLikeUserIdImageIdCompoundUniqueInput {
  imageId: Int!
  userId: Int!
}

input ImageLikeWhereInput {
  AND: [ImageLikeWhereInput!]
  NOT: [ImageLikeWhereInput!]
  OR: [ImageLikeWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  image: ImageWhereInput
  imageId: IntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: IntFilter
}

input ImageLikeWhereUniqueInput {
  id: Int
  userId_imageId: ImageLikeUserIdImageIdCompoundUniqueInput
}

input ImageListRelationFilter {
  every: ImageWhereInput
  none: ImageWhereInput
  some: ImageWhereInput
}

type ImageMatch {
  face: Face!
  image: Image!
  person: Person!
}

input ImageOrderByRelationAggregateInput {
  _count: SortOrder
}

input ImageOrderByWithRelationInput {
  appearanceTags: AppearanceTagOrderByRelationAggregateInput
  appearances: AppearanceOrderByRelationAggregateInput
  bytes: SortOrder
  caption: SortOrder
  createdAt: SortOrder
  discoverySource: DiscoveredImageOrderByWithRelationInput
  faceScanDate: SortOrder
  faceScanRequestDate: SortOrder
  faces: FaceOrderByRelationAggregateInput
  fileName: SortOrder
  groupAvatarOf: GroupOrderByWithRelationInput
  groupBannerOf: GroupOrderByWithRelationInput
  hash: SortOrder
  height: SortOrder
  hiddenAt: SortOrder
  id: SortOrder
  imageTags: ImageTagOrderByRelationAggregateInput
  ireneBotId: SortOrder
  isNsfw: SortOrder
  likes: ImageLikeOrderByRelationAggregateInput
  mimetype: SortOrder
  pHash: SortOrder
  palette: SortOrder
  personAvatarOf: PersonOrderByWithRelationInput
  personBannerOf: PersonOrderByWithRelationInput
  potentialDuplicates: DiscoveredImageOrderByRelationAggregateInput
  public: SortOrder
  reports: ImageReportOrderByRelationAggregateInput
  slug: SortOrder
  source: SortOrder
  updatedAt: SortOrder
  uploadType: SortOrder
  user: UserOrderByWithRelationInput
  userAvatarOf: UserOrderByWithRelationInput
  userBannerOf: UserOrderByWithRelationInput
  userId: SortOrder
  views: SortOrder
  width: SortOrder
  xp: SortOrder
}

type ImageReport {
  action: ImageReportAction
  actionedAt: DateTime
  createdAt: DateTime!
  id: Int!
  image: Image!
  reason: String
  reportedBy: User!
  updatedAt: DateTime!
}

enum ImageReportAction {
  DELETE_IMAGE
  DISMISS
  HIDE_IMAGE
  OTHER
  RESTRICT_USER
}

input ImageReportCreateManyActionedByInput {
  action: ImageReportAction
  actionedAt: DateTime
  createdAt: DateTime
  id: Int
  imageId: Int!
  reason: String
  reportedById: Int!
  updatedAt: DateTime
}

input ImageReportCreateManyActionedByInputEnvelope {
  data: [ImageReportCreateManyActionedByInput!]
  skipDuplicates: Boolean
}

input ImageReportCreateManyImageInput {
  action: ImageReportAction
  actionedAt: DateTime
  actionedById: Int
  createdAt: DateTime
  id: Int
  reason: String
  reportedById: Int!
  updatedAt: DateTime
}

input ImageReportCreateManyImageInputEnvelope {
  data: [ImageReportCreateManyImageInput!]
  skipDuplicates: Boolean
}

input ImageReportCreateManyReportedByInput {
  action: ImageReportAction
  actionedAt: DateTime
  actionedById: Int
  createdAt: DateTime
  id: Int
  imageId: Int!
  reason: String
  updatedAt: DateTime
}

input ImageReportCreateManyReportedByInputEnvelope {
  data: [ImageReportCreateManyReportedByInput!]
  skipDuplicates: Boolean
}

input ImageReportCreateNestedManyWithoutActionedByInput {
  connect: [ImageReportWhereUniqueInput!]
  connectOrCreate: [ImageReportCreateOrConnectWithoutActionedByInput!]
  create: [ImageReportCreateWithoutActionedByInput!]
  createMany: ImageReportCreateManyActionedByInputEnvelope
}

input ImageReportCreateNestedManyWithoutImageInput {
  connect: [ImageReportWhereUniqueInput!]
  connectOrCreate: [ImageReportCreateOrConnectWithoutImageInput!]
  create: [ImageReportCreateWithoutImageInput!]
  createMany: ImageReportCreateManyImageInputEnvelope
}

input ImageReportCreateNestedManyWithoutReportedByInput {
  connect: [ImageReportWhereUniqueInput!]
  connectOrCreate: [ImageReportCreateOrConnectWithoutReportedByInput!]
  create: [ImageReportCreateWithoutReportedByInput!]
  createMany: ImageReportCreateManyReportedByInputEnvelope
}

input ImageReportCreateOrConnectWithoutActionedByInput {
  create: ImageReportCreateWithoutActionedByInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportCreateOrConnectWithoutImageInput {
  create: ImageReportCreateWithoutImageInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportCreateOrConnectWithoutReportedByInput {
  create: ImageReportCreateWithoutReportedByInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportCreateWithoutActionedByInput {
  action: ImageReportAction
  actionedAt: DateTime
  createdAt: DateTime
  image: ImageCreateNestedOneWithoutReportsInput!
  reason: String
  reportedBy: UserCreateNestedOneWithoutReportedImagesInput!
  updatedAt: DateTime
}

input ImageReportCreateWithoutImageInput {
  action: ImageReportAction
  actionedAt: DateTime
  actionedBy: UserCreateNestedOneWithoutActionedReportedImagesInput
  createdAt: DateTime
  reason: String
  reportedBy: UserCreateNestedOneWithoutReportedImagesInput!
  updatedAt: DateTime
}

input ImageReportCreateWithoutReportedByInput {
  action: ImageReportAction
  actionedAt: DateTime
  actionedBy: UserCreateNestedOneWithoutActionedReportedImagesInput
  createdAt: DateTime
  image: ImageCreateNestedOneWithoutReportsInput!
  reason: String
  updatedAt: DateTime
}

input ImageReportImageReportUserCompoundUniqueInput {
  imageId: Int!
  reportedById: Int!
}

input ImageReportListRelationFilter {
  every: ImageReportWhereInput
  none: ImageReportWhereInput
  some: ImageReportWhereInput
}

input ImageReportOrderByRelationAggregateInput {
  _count: SortOrder
}

input ImageReportOrderByWithRelationInput {
  action: SortOrder
  actionedAt: SortOrder
  actionedBy: UserOrderByWithRelationInput
  actionedById: SortOrder
  createdAt: SortOrder
  id: SortOrder
  image: ImageOrderByWithRelationInput
  imageId: SortOrder
  reason: SortOrder
  reportedBy: UserOrderByWithRelationInput
  reportedById: SortOrder
  updatedAt: SortOrder
}

input ImageReportScalarWhereInput {
  AND: [ImageReportScalarWhereInput!]
  NOT: [ImageReportScalarWhereInput!]
  OR: [ImageReportScalarWhereInput!]
  action: EnumImageReportActionNullableFilter
  actionedAt: DateTimeNullableFilter
  actionedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  imageId: IntFilter
  reason: StringNullableFilter
  reportedById: IntFilter
  updatedAt: DateTimeFilter
}

input ImageReportUpdateManyMutationInput {
  action: NullableEnumImageReportActionFieldUpdateOperationsInput
  actionedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageReportUpdateManyWithWhereWithoutActionedByInput {
  data: ImageReportUpdateManyMutationInput!
  where: ImageReportScalarWhereInput!
}

input ImageReportUpdateManyWithWhereWithoutImageInput {
  data: ImageReportUpdateManyMutationInput!
  where: ImageReportScalarWhereInput!
}

input ImageReportUpdateManyWithWhereWithoutReportedByInput {
  data: ImageReportUpdateManyMutationInput!
  where: ImageReportScalarWhereInput!
}

input ImageReportUpdateManyWithoutActionedByInput {
  connect: [ImageReportWhereUniqueInput!]
  connectOrCreate: [ImageReportCreateOrConnectWithoutActionedByInput!]
  create: [ImageReportCreateWithoutActionedByInput!]
  createMany: ImageReportCreateManyActionedByInputEnvelope
  delete: [ImageReportWhereUniqueInput!]
  deleteMany: [ImageReportScalarWhereInput!]
  disconnect: [ImageReportWhereUniqueInput!]
  set: [ImageReportWhereUniqueInput!]
  update: [ImageReportUpdateWithWhereUniqueWithoutActionedByInput!]
  updateMany: [ImageReportUpdateManyWithWhereWithoutActionedByInput!]
  upsert: [ImageReportUpsertWithWhereUniqueWithoutActionedByInput!]
}

input ImageReportUpdateManyWithoutImageInput {
  connect: [ImageReportWhereUniqueInput!]
  connectOrCreate: [ImageReportCreateOrConnectWithoutImageInput!]
  create: [ImageReportCreateWithoutImageInput!]
  createMany: ImageReportCreateManyImageInputEnvelope
  delete: [ImageReportWhereUniqueInput!]
  deleteMany: [ImageReportScalarWhereInput!]
  disconnect: [ImageReportWhereUniqueInput!]
  set: [ImageReportWhereUniqueInput!]
  update: [ImageReportUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [ImageReportUpdateManyWithWhereWithoutImageInput!]
  upsert: [ImageReportUpsertWithWhereUniqueWithoutImageInput!]
}

input ImageReportUpdateManyWithoutReportedByInput {
  connect: [ImageReportWhereUniqueInput!]
  connectOrCreate: [ImageReportCreateOrConnectWithoutReportedByInput!]
  create: [ImageReportCreateWithoutReportedByInput!]
  createMany: ImageReportCreateManyReportedByInputEnvelope
  delete: [ImageReportWhereUniqueInput!]
  deleteMany: [ImageReportScalarWhereInput!]
  disconnect: [ImageReportWhereUniqueInput!]
  set: [ImageReportWhereUniqueInput!]
  update: [ImageReportUpdateWithWhereUniqueWithoutReportedByInput!]
  updateMany: [ImageReportUpdateManyWithWhereWithoutReportedByInput!]
  upsert: [ImageReportUpsertWithWhereUniqueWithoutReportedByInput!]
}

input ImageReportUpdateWithWhereUniqueWithoutActionedByInput {
  data: ImageReportUpdateWithoutActionedByInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportUpdateWithWhereUniqueWithoutImageInput {
  data: ImageReportUpdateWithoutImageInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportUpdateWithWhereUniqueWithoutReportedByInput {
  data: ImageReportUpdateWithoutReportedByInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportUpdateWithoutActionedByInput {
  action: NullableEnumImageReportActionFieldUpdateOperationsInput
  actionedAt: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutReportsInput
  reason: NullableStringFieldUpdateOperationsInput
  reportedBy: UserUpdateOneRequiredWithoutReportedImagesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageReportUpdateWithoutImageInput {
  action: NullableEnumImageReportActionFieldUpdateOperationsInput
  actionedAt: NullableDateTimeFieldUpdateOperationsInput
  actionedBy: UserUpdateOneWithoutActionedReportedImagesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  reportedBy: UserUpdateOneRequiredWithoutReportedImagesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageReportUpdateWithoutReportedByInput {
  action: NullableEnumImageReportActionFieldUpdateOperationsInput
  actionedAt: NullableDateTimeFieldUpdateOperationsInput
  actionedBy: UserUpdateOneWithoutActionedReportedImagesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutReportsInput
  reason: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageReportUpsertWithWhereUniqueWithoutActionedByInput {
  create: ImageReportCreateWithoutActionedByInput!
  update: ImageReportUpdateWithoutActionedByInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportUpsertWithWhereUniqueWithoutImageInput {
  create: ImageReportCreateWithoutImageInput!
  update: ImageReportUpdateWithoutImageInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportUpsertWithWhereUniqueWithoutReportedByInput {
  create: ImageReportCreateWithoutReportedByInput!
  update: ImageReportUpdateWithoutReportedByInput!
  where: ImageReportWhereUniqueInput!
}

input ImageReportWhereInput {
  AND: [ImageReportWhereInput!]
  NOT: [ImageReportWhereInput!]
  OR: [ImageReportWhereInput!]
  action: EnumImageReportActionNullableFilter
  actionedAt: DateTimeNullableFilter
  actionedBy: UserWhereInput
  actionedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  image: ImageWhereInput
  imageId: IntFilter
  reason: StringNullableFilter
  reportedBy: UserWhereInput
  reportedById: IntFilter
  updatedAt: DateTimeFilter
}

input ImageReportWhereUniqueInput {
  id: Int
  imageReportUser: ImageReportImageReportUserCompoundUniqueInput
}

input ImageScalarWhereInput {
  AND: [ImageScalarWhereInput!]
  NOT: [ImageScalarWhereInput!]
  OR: [ImageScalarWhereInput!]
  bytes: IntFilter
  caption: StringNullableFilter
  createdAt: DateTimeFilter
  faceScanDate: DateTimeNullableFilter
  faceScanRequestDate: DateTimeNullableFilter
  fileName: StringNullableFilter
  hash: StringFilter
  height: IntFilter
  hiddenAt: DateTimeNullableFilter
  id: IntFilter
  ireneBotId: IntNullableFilter
  isNsfw: BoolFilter
  mimetype: EnumMimeTypeFilter
  pHash: StringNullableFilter
  palette: IntNullableListFilter
  public: BoolFilter
  slug: StringFilter
  source: StringNullableFilter
  updatedAt: DateTimeFilter
  uploadType: EnumUploadTypeFilter
  userId: IntNullableFilter
  views: IntFilter
  width: IntFilter
  xp: IntFilter
}

type ImageTag {
  addedBy: User
  createdAt: DateTime!
  image: Image!
  tag: Tag!
  updatedAt: DateTime!
}

input ImageTagCreateManyAddedByInput {
  createdAt: DateTime
  id: Int
  imageId: Int!
  tagId: Int!
  updatedAt: DateTime
}

input ImageTagCreateManyAddedByInputEnvelope {
  data: [ImageTagCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input ImageTagCreateManyImageInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  tagId: Int!
  updatedAt: DateTime
}

input ImageTagCreateManyImageInputEnvelope {
  data: [ImageTagCreateManyImageInput!]
  skipDuplicates: Boolean
}

input ImageTagCreateManyTagInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  imageId: Int!
  updatedAt: DateTime
}

input ImageTagCreateManyTagInputEnvelope {
  data: [ImageTagCreateManyTagInput!]
  skipDuplicates: Boolean
}

input ImageTagCreateNestedManyWithoutAddedByInput {
  connect: [ImageTagWhereUniqueInput!]
  connectOrCreate: [ImageTagCreateOrConnectWithoutAddedByInput!]
  create: [ImageTagCreateWithoutAddedByInput!]
  createMany: ImageTagCreateManyAddedByInputEnvelope
}

input ImageTagCreateNestedManyWithoutImageInput {
  connect: [ImageTagWhereUniqueInput!]
  connectOrCreate: [ImageTagCreateOrConnectWithoutImageInput!]
  create: [ImageTagCreateWithoutImageInput!]
  createMany: ImageTagCreateManyImageInputEnvelope
}

input ImageTagCreateNestedManyWithoutTagInput {
  connect: [ImageTagWhereUniqueInput!]
  connectOrCreate: [ImageTagCreateOrConnectWithoutTagInput!]
  create: [ImageTagCreateWithoutTagInput!]
  createMany: ImageTagCreateManyTagInputEnvelope
}

input ImageTagCreateOrConnectWithoutAddedByInput {
  create: ImageTagCreateWithoutAddedByInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagCreateOrConnectWithoutImageInput {
  create: ImageTagCreateWithoutImageInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagCreateOrConnectWithoutTagInput {
  create: ImageTagCreateWithoutTagInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagCreateWithoutAddedByInput {
  createdAt: DateTime
  image: ImageCreateNestedOneWithoutImageTagsInput!
  tag: TagCreateNestedOneWithoutImagesInput!
  updatedAt: DateTime
}

input ImageTagCreateWithoutImageInput {
  addedBy: UserCreateNestedOneWithoutImageTagsInput
  createdAt: DateTime
  tag: TagCreateNestedOneWithoutImagesInput!
  updatedAt: DateTime
}

input ImageTagCreateWithoutTagInput {
  addedBy: UserCreateNestedOneWithoutImageTagsInput
  createdAt: DateTime
  image: ImageCreateNestedOneWithoutImageTagsInput!
  updatedAt: DateTime
}

input ImageTagImageTagCompoundUniqueInput {
  imageId: Int!
  tagId: Int!
}

input ImageTagListRelationFilter {
  every: ImageTagWhereInput
  none: ImageTagWhereInput
  some: ImageTagWhereInput
}

input ImageTagOrderByRelationAggregateInput {
  _count: SortOrder
}

input ImageTagScalarWhereInput {
  AND: [ImageTagScalarWhereInput!]
  NOT: [ImageTagScalarWhereInput!]
  OR: [ImageTagScalarWhereInput!]
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  imageId: IntFilter
  tagId: IntFilter
  updatedAt: DateTimeFilter
}

input ImageTagUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageTagUpdateManyWithWhereWithoutAddedByInput {
  data: ImageTagUpdateManyMutationInput!
  where: ImageTagScalarWhereInput!
}

input ImageTagUpdateManyWithWhereWithoutImageInput {
  data: ImageTagUpdateManyMutationInput!
  where: ImageTagScalarWhereInput!
}

input ImageTagUpdateManyWithWhereWithoutTagInput {
  data: ImageTagUpdateManyMutationInput!
  where: ImageTagScalarWhereInput!
}

input ImageTagUpdateManyWithoutAddedByInput {
  connect: [ImageTagWhereUniqueInput!]
  connectOrCreate: [ImageTagCreateOrConnectWithoutAddedByInput!]
  create: [ImageTagCreateWithoutAddedByInput!]
  createMany: ImageTagCreateManyAddedByInputEnvelope
  delete: [ImageTagWhereUniqueInput!]
  deleteMany: [ImageTagScalarWhereInput!]
  disconnect: [ImageTagWhereUniqueInput!]
  set: [ImageTagWhereUniqueInput!]
  update: [ImageTagUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [ImageTagUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [ImageTagUpsertWithWhereUniqueWithoutAddedByInput!]
}

input ImageTagUpdateManyWithoutImageInput {
  connect: [ImageTagWhereUniqueInput!]
  connectOrCreate: [ImageTagCreateOrConnectWithoutImageInput!]
  create: [ImageTagCreateWithoutImageInput!]
  createMany: ImageTagCreateManyImageInputEnvelope
  delete: [ImageTagWhereUniqueInput!]
  deleteMany: [ImageTagScalarWhereInput!]
  disconnect: [ImageTagWhereUniqueInput!]
  set: [ImageTagWhereUniqueInput!]
  update: [ImageTagUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [ImageTagUpdateManyWithWhereWithoutImageInput!]
  upsert: [ImageTagUpsertWithWhereUniqueWithoutImageInput!]
}

input ImageTagUpdateManyWithoutTagInput {
  connect: [ImageTagWhereUniqueInput!]
  connectOrCreate: [ImageTagCreateOrConnectWithoutTagInput!]
  create: [ImageTagCreateWithoutTagInput!]
  createMany: ImageTagCreateManyTagInputEnvelope
  delete: [ImageTagWhereUniqueInput!]
  deleteMany: [ImageTagScalarWhereInput!]
  disconnect: [ImageTagWhereUniqueInput!]
  set: [ImageTagWhereUniqueInput!]
  update: [ImageTagUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [ImageTagUpdateManyWithWhereWithoutTagInput!]
  upsert: [ImageTagUpsertWithWhereUniqueWithoutTagInput!]
}

input ImageTagUpdateWithWhereUniqueWithoutAddedByInput {
  data: ImageTagUpdateWithoutAddedByInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagUpdateWithWhereUniqueWithoutImageInput {
  data: ImageTagUpdateWithoutImageInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagUpdateWithWhereUniqueWithoutTagInput {
  data: ImageTagUpdateWithoutTagInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagUpdateWithoutAddedByInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutImageTagsInput
  tag: TagUpdateOneRequiredWithoutImagesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageTagUpdateWithoutImageInput {
  addedBy: UserUpdateOneWithoutImageTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutImagesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageTagUpdateWithoutTagInput {
  addedBy: UserUpdateOneWithoutImageTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  image: ImageUpdateOneRequiredWithoutImageTagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ImageTagUpsertWithWhereUniqueWithoutAddedByInput {
  create: ImageTagCreateWithoutAddedByInput!
  update: ImageTagUpdateWithoutAddedByInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagUpsertWithWhereUniqueWithoutImageInput {
  create: ImageTagCreateWithoutImageInput!
  update: ImageTagUpdateWithoutImageInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagUpsertWithWhereUniqueWithoutTagInput {
  create: ImageTagCreateWithoutTagInput!
  update: ImageTagUpdateWithoutTagInput!
  where: ImageTagWhereUniqueInput!
}

input ImageTagWhereInput {
  AND: [ImageTagWhereInput!]
  NOT: [ImageTagWhereInput!]
  OR: [ImageTagWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  image: ImageWhereInput
  imageId: IntFilter
  tag: TagWhereInput
  tagId: IntFilter
  updatedAt: DateTimeFilter
}

input ImageTagWhereUniqueInput {
  id: Int
  imageTag: ImageTagImageTagCompoundUniqueInput
}

input ImageUpdateManyMutationInput {
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  fileName: NullableStringFieldUpdateOperationsInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  public: BoolFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateManyWithWhereWithoutUserInput {
  data: ImageUpdateManyMutationInput!
  where: ImageScalarWhereInput!
}

input ImageUpdateManyWithoutUserInput {
  connect: [ImageWhereUniqueInput!]
  connectOrCreate: [ImageCreateOrConnectWithoutUserInput!]
  create: [ImageCreateWithoutUserInput!]
  createMany: ImageCreateManyUserInputEnvelope
  delete: [ImageWhereUniqueInput!]
  deleteMany: [ImageScalarWhereInput!]
  disconnect: [ImageWhereUniqueInput!]
  set: [ImageWhereUniqueInput!]
  update: [ImageUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ImageUpdateManyWithWhereWithoutUserInput!]
  upsert: [ImageUpsertWithWhereUniqueWithoutUserInput!]
}

input ImageUpdateOneRequiredWithoutAppearancesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutAppearancesInput
  create: ImageCreateWithoutAppearancesInput
  update: ImageUpdateWithoutAppearancesInput
  upsert: ImageUpsertWithoutAppearancesInput
}

input ImageUpdateOneRequiredWithoutFacesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutFacesInput
  create: ImageCreateWithoutFacesInput
  update: ImageUpdateWithoutFacesInput
  upsert: ImageUpsertWithoutFacesInput
}

input ImageUpdateOneRequiredWithoutImageTagsInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutImageTagsInput
  create: ImageCreateWithoutImageTagsInput
  update: ImageUpdateWithoutImageTagsInput
  upsert: ImageUpsertWithoutImageTagsInput
}

input ImageUpdateOneRequiredWithoutLikesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutLikesInput
  create: ImageCreateWithoutLikesInput
  update: ImageUpdateWithoutLikesInput
  upsert: ImageUpsertWithoutLikesInput
}

input ImageUpdateOneRequiredWithoutReportsInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutReportsInput
  create: ImageCreateWithoutReportsInput
  update: ImageUpdateWithoutReportsInput
  upsert: ImageUpsertWithoutReportsInput
}

input ImageUpdateOneWithoutAppearanceTagsInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutAppearanceTagsInput
  create: ImageCreateWithoutAppearanceTagsInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutAppearanceTagsInput
  upsert: ImageUpsertWithoutAppearanceTagsInput
}

input ImageUpdateOneWithoutDiscoverySourceInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutDiscoverySourceInput
  create: ImageCreateWithoutDiscoverySourceInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutDiscoverySourceInput
  upsert: ImageUpsertWithoutDiscoverySourceInput
}

input ImageUpdateOneWithoutGroupAvatarOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutGroupAvatarOfInput
  create: ImageCreateWithoutGroupAvatarOfInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutGroupAvatarOfInput
  upsert: ImageUpsertWithoutGroupAvatarOfInput
}

input ImageUpdateOneWithoutGroupBannerOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutGroupBannerOfInput
  create: ImageCreateWithoutGroupBannerOfInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutGroupBannerOfInput
  upsert: ImageUpsertWithoutGroupBannerOfInput
}

input ImageUpdateOneWithoutPersonAvatarOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutPersonAvatarOfInput
  create: ImageCreateWithoutPersonAvatarOfInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutPersonAvatarOfInput
  upsert: ImageUpsertWithoutPersonAvatarOfInput
}

input ImageUpdateOneWithoutPersonBannerOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutPersonBannerOfInput
  create: ImageCreateWithoutPersonBannerOfInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutPersonBannerOfInput
  upsert: ImageUpsertWithoutPersonBannerOfInput
}

input ImageUpdateOneWithoutPotentialDuplicatesInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutPotentialDuplicatesInput
  create: ImageCreateWithoutPotentialDuplicatesInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutPotentialDuplicatesInput
  upsert: ImageUpsertWithoutPotentialDuplicatesInput
}

input ImageUpdateOneWithoutUserAvatarOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutUserAvatarOfInput
  create: ImageCreateWithoutUserAvatarOfInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutUserAvatarOfInput
  upsert: ImageUpsertWithoutUserAvatarOfInput
}

input ImageUpdateOneWithoutUserBannerOfInput {
  connect: ImageWhereUniqueInput
  connectOrCreate: ImageCreateOrConnectWithoutUserBannerOfInput
  create: ImageCreateWithoutUserBannerOfInput
  delete: Boolean
  disconnect: Boolean
  update: ImageUpdateWithoutUserBannerOfInput
  upsert: ImageUpsertWithoutUserBannerOfInput
}

input ImageUpdateWithWhereUniqueWithoutUserInput {
  data: ImageUpdateWithoutUserInput!
  where: ImageWhereUniqueInput!
}

input ImageUpdateWithoutAppearanceTagsInput {
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutAppearancesInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutDiscoverySourceInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutFacesInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutGroupAvatarOfInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutGroupBannerOfInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutImageTagsInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutLikesInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutPersonAvatarOfInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutPersonBannerOfInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutPotentialDuplicatesInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutReportsInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutUserAvatarOfInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutUserBannerOfInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutImagesInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdateWithoutUserInput {
  appearanceTags: AppearanceTagUpdateManyWithoutImageInput
  appearances: AppearanceUpdateManyWithoutImageInput
  bytes: IntFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discoverySource: DiscoveredImageUpdateOneWithoutImageInput
  faceScanDate: NullableDateTimeFieldUpdateOperationsInput
  faceScanRequestDate: NullableDateTimeFieldUpdateOperationsInput
  faces: FaceUpdateManyWithoutImageInput
  fileName: NullableStringFieldUpdateOperationsInput
  groupAvatarOf: GroupUpdateOneWithoutAvatarInput
  groupBannerOf: GroupUpdateOneWithoutBannerInput
  hash: StringFieldUpdateOperationsInput
  height: IntFieldUpdateOperationsInput
  hiddenAt: NullableDateTimeFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutImageInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  isNsfw: BoolFieldUpdateOperationsInput
  likes: ImageLikeUpdateManyWithoutImageInput
  mimetype: EnumMimeTypeFieldUpdateOperationsInput
  pHash: NullableStringFieldUpdateOperationsInput
  palette: ImageUpdatepaletteInput
  personAvatarOf: PersonUpdateOneWithoutAvatarInput
  personBannerOf: PersonUpdateOneWithoutBannerInput
  potentialDuplicates: DiscoveredImageUpdateManyWithoutDuplicateImageInput
  public: BoolFieldUpdateOperationsInput
  reports: ImageReportUpdateManyWithoutImageInput
  slug: StringFieldUpdateOperationsInput
  source: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uploadType: EnumUploadTypeFieldUpdateOperationsInput
  userAvatarOf: UserUpdateOneWithoutAvatarInput
  userBannerOf: UserUpdateOneWithoutBannerInput
  views: IntFieldUpdateOperationsInput
  width: IntFieldUpdateOperationsInput
  xp: IntFieldUpdateOperationsInput
}

input ImageUpdatepaletteInput {
  push: Int
  set: [Int!]
}

input ImageUpsertWithWhereUniqueWithoutUserInput {
  create: ImageCreateWithoutUserInput!
  update: ImageUpdateWithoutUserInput!
  where: ImageWhereUniqueInput!
}

input ImageUpsertWithoutAppearanceTagsInput {
  create: ImageCreateWithoutAppearanceTagsInput!
  update: ImageUpdateWithoutAppearanceTagsInput!
}

input ImageUpsertWithoutAppearancesInput {
  create: ImageCreateWithoutAppearancesInput!
  update: ImageUpdateWithoutAppearancesInput!
}

input ImageUpsertWithoutDiscoverySourceInput {
  create: ImageCreateWithoutDiscoverySourceInput!
  update: ImageUpdateWithoutDiscoverySourceInput!
}

input ImageUpsertWithoutFacesInput {
  create: ImageCreateWithoutFacesInput!
  update: ImageUpdateWithoutFacesInput!
}

input ImageUpsertWithoutGroupAvatarOfInput {
  create: ImageCreateWithoutGroupAvatarOfInput!
  update: ImageUpdateWithoutGroupAvatarOfInput!
}

input ImageUpsertWithoutGroupBannerOfInput {
  create: ImageCreateWithoutGroupBannerOfInput!
  update: ImageUpdateWithoutGroupBannerOfInput!
}

input ImageUpsertWithoutImageTagsInput {
  create: ImageCreateWithoutImageTagsInput!
  update: ImageUpdateWithoutImageTagsInput!
}

input ImageUpsertWithoutLikesInput {
  create: ImageCreateWithoutLikesInput!
  update: ImageUpdateWithoutLikesInput!
}

input ImageUpsertWithoutPersonAvatarOfInput {
  create: ImageCreateWithoutPersonAvatarOfInput!
  update: ImageUpdateWithoutPersonAvatarOfInput!
}

input ImageUpsertWithoutPersonBannerOfInput {
  create: ImageCreateWithoutPersonBannerOfInput!
  update: ImageUpdateWithoutPersonBannerOfInput!
}

input ImageUpsertWithoutPotentialDuplicatesInput {
  create: ImageCreateWithoutPotentialDuplicatesInput!
  update: ImageUpdateWithoutPotentialDuplicatesInput!
}

input ImageUpsertWithoutReportsInput {
  create: ImageCreateWithoutReportsInput!
  update: ImageUpdateWithoutReportsInput!
}

input ImageUpsertWithoutUserAvatarOfInput {
  create: ImageCreateWithoutUserAvatarOfInput!
  update: ImageUpdateWithoutUserAvatarOfInput!
}

input ImageUpsertWithoutUserBannerOfInput {
  create: ImageCreateWithoutUserBannerOfInput!
  update: ImageUpdateWithoutUserBannerOfInput!
}

input ImageWhereInput {
  AND: [ImageWhereInput!]
  NOT: [ImageWhereInput!]
  OR: [ImageWhereInput!]
  appearanceTags: AppearanceTagListRelationFilter
  appearances: AppearanceListRelationFilter
  bytes: IntFilter
  caption: StringNullableFilter
  createdAt: DateTimeFilter
  discoverySource: DiscoveredImageWhereInput
  faceScanDate: DateTimeNullableFilter
  faceScanRequestDate: DateTimeNullableFilter
  faces: FaceListRelationFilter
  fileName: StringNullableFilter
  groupAvatarOf: GroupWhereInput
  groupBannerOf: GroupWhereInput
  hash: StringFilter
  height: IntFilter
  hiddenAt: DateTimeNullableFilter
  id: IntFilter
  imageTags: ImageTagListRelationFilter
  ireneBotId: IntNullableFilter
  isNsfw: BoolFilter
  likes: ImageLikeListRelationFilter
  mimetype: EnumMimeTypeFilter
  pHash: StringNullableFilter
  palette: IntNullableListFilter
  personAvatarOf: PersonWhereInput
  personBannerOf: PersonWhereInput
  potentialDuplicates: DiscoveredImageListRelationFilter
  public: BoolFilter
  reports: ImageReportListRelationFilter
  slug: StringFilter
  source: StringNullableFilter
  updatedAt: DateTimeFilter
  uploadType: EnumUploadTypeFilter
  user: UserWhereInput
  userAvatarOf: UserWhereInput
  userBannerOf: UserWhereInput
  userId: IntNullableFilter
  views: IntFilter
  width: IntFilter
  xp: IntFilter
}

input ImageWhereUniqueInput {
  id: Int
  ireneBotId: Int
  slug: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableListFilter {
  equals: [Int!]
  has: Int
  hasEvery: [Int!]
  hasSome: [Int!]
  isEmpty: Boolean
}

type LeaderboardUser {
  rank: Int!
  user: User!
  xp: Int!
}

enum MimeType {
  AVIF
  GIF
  JPG
  MP4
  PNG
  SVG
  WEBM
  WEBP
}

type Mutation {
  """Add an appearance relation on an image."""
  addAppearance(imageId: Int!, personId: Int!): Appearance!
  addProvider(provider: AddProviderInput!): String!
  createAppearanceTag(appearanceId: Int!, name: String!): AppearanceTag!
  createImageTag(imageId: Int!, name: String!): ImageTag!
  createOnePerson(data: PersonCreateInput!): Person!
  createTag(name: String!): Tag!
  deleteAppearanceTag(appearanceId: Int!, name: String!): AppearanceTag
  deleteImageTag(imageId: Int!, name: String!): ImageTag
  discoveredImageVote(imageId: Int!, reason: String, verdict: String!): DiscoveredImageVote!

  """Vote using the same verdict on all images in a post"""
  discoveredPostVote(postId: Int!, reason: String, verdict: String!): [DiscoveredImage!]!

  """Action on an image reported by a user. Only usable by moderators"""
  imageReportAction(action: ImageReportAction!, reportId: Int!): ImageReport

  """Attach an existing face to an apperance."""
  linkFace(appearanceId: Int!, faceId: Int!): Appearance!

  """Removes an appearance from an image"""
  removeAppearance(appearanceId: Int!): Appearance!
  reportImage(imageId: Int!, reason: String): ImageReport

  """Queue an image to get scanned for faces"""
  scanFaces(slug: String!): QueueInfo!
  toggleLike(imageId: Int!): Image!

  """
  Unlinks an existing face from an appearance. This dissociates the face from the appearance but does not remove the face data
  """
  unlinkFace(appearanceId: Int!, faceId: Int!): Int!
  updatePerson(id: Int!, update: UpdatePersonInputs!): Person
  upsertOneGroup(create: GroupCreateInput!, update: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group!
  upsertOnePerson(create: PersonCreateInput!, update: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumFaceSourceFilter {
  equals: FaceSource
  in: [FaceSource!]
  not: NestedEnumFaceSourceFilter
  notIn: [FaceSource!]
}

input NestedEnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input NestedEnumImageReportActionNullableFilter {
  equals: ImageReportAction
  in: [ImageReportAction!]
  not: NestedEnumImageReportActionNullableFilter
  notIn: [ImageReportAction!]
}

input NestedEnumMimeTypeFilter {
  equals: MimeType
  in: [MimeType!]
  not: NestedEnumMimeTypeFilter
  notIn: [MimeType!]
}

input NestedEnumRestrictionKindFilter {
  equals: RestrictionKind
  in: [RestrictionKind!]
  not: NestedEnumRestrictionKindFilter
  notIn: [RestrictionKind!]
}

input NestedEnumTagSourceFilter {
  equals: TagSource
  in: [TagSource!]
  not: NestedEnumTagSourceFilter
  notIn: [TagSource!]
}

input NestedEnumUploadTypeFilter {
  equals: UploadType
  in: [UploadType!]
  not: NestedEnumUploadTypeFilter
  notIn: [UploadType!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumGenderFieldUpdateOperationsInput {
  set: Gender
}

input NullableEnumImageReportActionFieldUpdateOperationsInput {
  set: ImageReportAction
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Person {
  aliases(cursor: AliasWhereUniqueInput, skip: Int, take: Int): [Alias!]!
  appearances(cursor: AppearanceWhereUniqueInput, skip: Int, take: Int): [Appearance!]!
  avatar: Image
  banner: Image
  birthDate: DateTime
  createdAt: DateTime!
  faces(cursor: FaceWhereUniqueInput, skip: Int, take: Int): [Face!]!
  id: Int!
  memberOf(cursor: GroupMemberWhereUniqueInput, skip: Int, take: Int): [GroupMember!]!
  name: String!
  preferredAlias: Alias
  preferredMembership: GroupMember
  updatedAt: DateTime!
}

input PersonCreateInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateManyPreferredMembershipInput {
  avatarId: Int
  bannerId: Int
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  id: Int
  ireneBotId: Int
  name: String!
  preferredAliasId: Int
  updatedAt: DateTime
}

input PersonCreateManyPreferredMembershipInputEnvelope {
  data: [PersonCreateManyPreferredMembershipInput!]
  skipDuplicates: Boolean
}

input PersonCreateNestedManyWithoutPreferredMembershipInput {
  connect: [PersonWhereUniqueInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutPreferredMembershipInput!]
  create: [PersonCreateWithoutPreferredMembershipInput!]
  createMany: PersonCreateManyPreferredMembershipInputEnvelope
}

input PersonCreateNestedOneWithoutAliasesInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAliasesInput
  create: PersonCreateWithoutAliasesInput
}

input PersonCreateNestedOneWithoutAppearancesInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAppearancesInput
  create: PersonCreateWithoutAppearancesInput
}

input PersonCreateNestedOneWithoutAvatarInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAvatarInput
  create: PersonCreateWithoutAvatarInput
}

input PersonCreateNestedOneWithoutBannerInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutBannerInput
  create: PersonCreateWithoutBannerInput
}

input PersonCreateNestedOneWithoutMemberOfInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutMemberOfInput
  create: PersonCreateWithoutMemberOfInput
}

input PersonCreateNestedOneWithoutPreferredAliasInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutPreferredAliasInput
  create: PersonCreateWithoutPreferredAliasInput
}

input PersonCreateOrConnectWithoutAliasesInput {
  create: PersonCreateWithoutAliasesInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutAppearancesInput {
  create: PersonCreateWithoutAppearancesInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutAppearsInInput {
  create: PersonCreateWithoutAppearsInInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutAvatarInput {
  create: PersonCreateWithoutAvatarInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutBannerInput {
  create: PersonCreateWithoutBannerInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutMemberOfInput {
  create: PersonCreateWithoutMemberOfInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutPreferredAliasInput {
  create: PersonCreateWithoutPreferredAliasInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutPreferredMembershipInput {
  create: PersonCreateWithoutPreferredMembershipInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateWithoutAliasesInput {
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutAppearancesInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutAppearsInInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutAvatarInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutBannerInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutMemberOfInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutPreferredAliasInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredMembership: GroupMemberCreateNestedOneWithoutPreferredMemberships_Input
  updatedAt: DateTime
}

input PersonCreateWithoutPreferredMembershipInput {
  aliases: AliasCreateNestedManyWithoutPersonInput
  appearances: AppearanceCreateNestedManyWithoutPersonInput
  appearsIn: FaceCreateNestedManyWithoutPersonInput
  avatar: ImageCreateNestedOneWithoutPersonAvatarOfInput
  banner: ImageCreateNestedOneWithoutPersonBannerOfInput
  birthDate: DateTime
  createdAt: DateTime
  description: String
  gender: Gender
  ireneBotId: Int
  memberOf: GroupMemberCreateNestedManyWithoutPersonInput
  name: String!
  preferredAlias: AliasCreateNestedOneWithoutPreferredAliasOfInput
  updatedAt: DateTime
}

input PersonListRelationFilter {
  every: PersonWhereInput
  none: PersonWhereInput
  some: PersonWhereInput
}

input PersonOrderByRelationAggregateInput {
  _count: SortOrder
}

input PersonOrderByWithRelationInput {
  aliases: AliasOrderByRelationAggregateInput
  appearances: AppearanceOrderByRelationAggregateInput
  appearsIn: FaceOrderByRelationAggregateInput
  avatar: ImageOrderByWithRelationInput
  avatarId: SortOrder
  banner: ImageOrderByWithRelationInput
  bannerId: SortOrder
  birthDate: SortOrder
  createdAt: SortOrder
  description: SortOrder
  gender: SortOrder
  id: SortOrder
  ireneBotId: SortOrder
  memberOf: GroupMemberOrderByRelationAggregateInput
  name: SortOrder
  preferredAlias: AliasOrderByWithRelationInput
  preferredAliasId: SortOrder
  preferredMembership: GroupMemberOrderByWithRelationInput
  preferredMembershipId: SortOrder
  updatedAt: SortOrder
}

input PersonScalarWhereInput {
  AND: [PersonScalarWhereInput!]
  NOT: [PersonScalarWhereInput!]
  OR: [PersonScalarWhereInput!]
  avatarId: IntNullableFilter
  bannerId: IntNullableFilter
  birthDate: DateTimeNullableFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  gender: EnumGenderNullableFilter
  id: IntFilter
  ireneBotId: IntNullableFilter
  name: StringFilter
  preferredAliasId: IntNullableFilter
  preferredMembershipId: IntNullableFilter
  updatedAt: DateTimeFilter
}

input PersonUpdateInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateManyMutationInput {
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateManyWithWhereWithoutPreferredMembershipInput {
  data: PersonUpdateManyMutationInput!
  where: PersonScalarWhereInput!
}

input PersonUpdateManyWithoutPreferredMembershipInput {
  connect: [PersonWhereUniqueInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutPreferredMembershipInput!]
  create: [PersonCreateWithoutPreferredMembershipInput!]
  createMany: PersonCreateManyPreferredMembershipInputEnvelope
  delete: [PersonWhereUniqueInput!]
  deleteMany: [PersonScalarWhereInput!]
  disconnect: [PersonWhereUniqueInput!]
  set: [PersonWhereUniqueInput!]
  update: [PersonUpdateWithWhereUniqueWithoutPreferredMembershipInput!]
  updateMany: [PersonUpdateManyWithWhereWithoutPreferredMembershipInput!]
  upsert: [PersonUpsertWithWhereUniqueWithoutPreferredMembershipInput!]
}

input PersonUpdateOneRequiredWithoutAliasesInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAliasesInput
  create: PersonCreateWithoutAliasesInput
  update: PersonUpdateWithoutAliasesInput
  upsert: PersonUpsertWithoutAliasesInput
}

input PersonUpdateOneRequiredWithoutAppearancesInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAppearancesInput
  create: PersonCreateWithoutAppearancesInput
  update: PersonUpdateWithoutAppearancesInput
  upsert: PersonUpsertWithoutAppearancesInput
}

input PersonUpdateOneRequiredWithoutMemberOfInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutMemberOfInput
  create: PersonCreateWithoutMemberOfInput
  update: PersonUpdateWithoutMemberOfInput
  upsert: PersonUpsertWithoutMemberOfInput
}

input PersonUpdateOneWithoutAppearsInInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAppearsInInput
  create: PersonCreateWithoutAppearsInInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutAppearsInInput
  upsert: PersonUpsertWithoutAppearsInInput
}

input PersonUpdateOneWithoutAvatarInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAvatarInput
  create: PersonCreateWithoutAvatarInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutAvatarInput
  upsert: PersonUpsertWithoutAvatarInput
}

input PersonUpdateOneWithoutBannerInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutBannerInput
  create: PersonCreateWithoutBannerInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutBannerInput
  upsert: PersonUpsertWithoutBannerInput
}

input PersonUpdateOneWithoutPreferredAliasInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutPreferredAliasInput
  create: PersonCreateWithoutPreferredAliasInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutPreferredAliasInput
  upsert: PersonUpsertWithoutPreferredAliasInput
}

input PersonUpdateWithWhereUniqueWithoutPreferredMembershipInput {
  data: PersonUpdateWithoutPreferredMembershipInput!
  where: PersonWhereUniqueInput!
}

input PersonUpdateWithoutAliasesInput {
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutAppearancesInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutAppearsInInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutAvatarInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutBannerInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutMemberOfInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutPreferredAliasInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredMembership: GroupMemberUpdateOneWithoutPreferredMemberships_Input
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpdateWithoutPreferredMembershipInput {
  aliases: AliasUpdateManyWithoutPersonInput
  appearances: AppearanceUpdateManyWithoutPersonInput
  appearsIn: FaceUpdateManyWithoutPersonInput
  avatar: ImageUpdateOneWithoutPersonAvatarOfInput
  banner: ImageUpdateOneWithoutPersonBannerOfInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  ireneBotId: NullableIntFieldUpdateOperationsInput
  memberOf: GroupMemberUpdateManyWithoutPersonInput
  name: StringFieldUpdateOperationsInput
  preferredAlias: AliasUpdateOneWithoutPreferredAliasOfInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonUpsertWithWhereUniqueWithoutPreferredMembershipInput {
  create: PersonCreateWithoutPreferredMembershipInput!
  update: PersonUpdateWithoutPreferredMembershipInput!
  where: PersonWhereUniqueInput!
}

input PersonUpsertWithoutAliasesInput {
  create: PersonCreateWithoutAliasesInput!
  update: PersonUpdateWithoutAliasesInput!
}

input PersonUpsertWithoutAppearancesInput {
  create: PersonCreateWithoutAppearancesInput!
  update: PersonUpdateWithoutAppearancesInput!
}

input PersonUpsertWithoutAppearsInInput {
  create: PersonCreateWithoutAppearsInInput!
  update: PersonUpdateWithoutAppearsInInput!
}

input PersonUpsertWithoutAvatarInput {
  create: PersonCreateWithoutAvatarInput!
  update: PersonUpdateWithoutAvatarInput!
}

input PersonUpsertWithoutBannerInput {
  create: PersonCreateWithoutBannerInput!
  update: PersonUpdateWithoutBannerInput!
}

input PersonUpsertWithoutMemberOfInput {
  create: PersonCreateWithoutMemberOfInput!
  update: PersonUpdateWithoutMemberOfInput!
}

input PersonUpsertWithoutPreferredAliasInput {
  create: PersonCreateWithoutPreferredAliasInput!
  update: PersonUpdateWithoutPreferredAliasInput!
}

input PersonWhereInput {
  AND: [PersonWhereInput!]
  NOT: [PersonWhereInput!]
  OR: [PersonWhereInput!]
  aliases: AliasListRelationFilter
  appearances: AppearanceListRelationFilter
  appearsIn: FaceListRelationFilter
  avatar: ImageWhereInput
  avatarId: IntNullableFilter
  banner: ImageWhereInput
  bannerId: IntNullableFilter
  birthDate: DateTimeNullableFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  gender: EnumGenderNullableFilter
  id: IntFilter
  ireneBotId: IntNullableFilter
  memberOf: GroupMemberListRelationFilter
  name: StringFilter
  preferredAlias: AliasWhereInput
  preferredAliasId: IntNullableFilter
  preferredMembership: GroupMemberWhereInput
  preferredMembershipId: IntNullableFilter
  updatedAt: DateTimeFilter
}

input PersonWhereUniqueInput {
  avatarId: Int
  bannerId: Int
  id: Int
  ireneBotId: Int
  preferredAliasId: Int
}

"""Statistics associated with each provider"""
type ProviderStatistic {
  createdAt: DateTime
  defaultName: String
  destination: String!
  discoveredImages: Int!
  enabled: Boolean!
  lastPost: DateTime
  lastScrape: DateTime
  name: String!
  official: Boolean!
  priority: Float!
  scrapeCount: Int!
  tokens: Float!
  url: String!
}

type Query {
  countAppearances(groups: [Int!]!): [AppearanceCount!]!
  discoveredImages(cursor: DiscoveredImageWhereUniqueInput, orderBy: [DiscoveredImageOrderByWithRelationInput!], skip: Int, take: Int, where: DiscoveredImageWhereInput): [DiscoveredImage!]!
  discoveredPosts(cursor: DiscoveredPostWhereUniqueInput, orderBy: [DiscoveredPostOrderByWithRelationInput!], skip: Int, take: Int, where: DiscoveredPostWhereInput): [DiscoveredPost!]!
  discoveryFeed(groupIds: [Int!]!, peopleIds: [Int!]!, skip: Int, take: Int): [DiscoveredPost!]!
  discoveryHistory(skip: Int = 0, take: Int = 10): [DiscoveredPost!]!
  discoveryLeaderboard(skip: Int = 0, take: Int = 10): [LeaderboardUser!]!
  discoveryProviders: [ProviderStatistic!]!
  discoverySchedule: [DiscoveryProvider!]!
  discoveryStats: [DiscoveryStatistic!]!
  group(where: GroupWhereUniqueInput!): Group
  groups(cursor: GroupWhereUniqueInput, orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): [Group!]!
  homepage: [Person!]!

  """Find a single image by its slug."""
  image(slug: String!): Image
  imageConnections(depth: Int! = 2, slug: String!): ImageConnections
  imageReports(cursor: ImageReportWhereUniqueInput, orderBy: [ImageReportOrderByWithRelationInput!], skip: Int, take: Int, where: ImageReportWhereInput): [ImageReport!]!
  images(cursor: ImageWhereUniqueInput, orderBy: [ImageOrderByWithRelationInput!], skip: Int, take: Int, where: ImageWhereInput): [Image!]!
  me: User
  notifications: UserNotifications!
  people(cursor: PersonWhereUniqueInput, orderBy: [PersonOrderByWithRelationInput!], skip: Int, take: Int, where: PersonWhereInput): [Person!]!
  person(where: PersonWhereUniqueInput!): Person
  personImages(amount: Int = 100, personIds: [Int!]!): [ImageMatch!]!
  user(id: Int): User
}

enum QueryMode {
  default
  insensitive
}

type QueueInfo {
  queueSize: Int!
}

enum RestrictionKind {
  NO_IMAGE_REPORT
}

type Role {
  createdAt: DateTime!
  name: String!
}

input RoleCreateManyUserInput {
  createdAt: DateTime
  id: Int
  name: String!
  updatedAt: DateTime
}

input RoleCreateManyUserInputEnvelope {
  data: [RoleCreateManyUserInput!]
  skipDuplicates: Boolean
}

input RoleCreateNestedManyWithoutUserInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserInput!]
  create: [RoleCreateWithoutUserInput!]
  createMany: RoleCreateManyUserInputEnvelope
}

input RoleCreateOrConnectWithoutUserInput {
  create: RoleCreateWithoutUserInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateWithoutUserInput {
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input RoleListRelationFilter {
  every: RoleWhereInput
  none: RoleWhereInput
  some: RoleWhereInput
}

input RoleNameUserIdCompoundUniqueInput {
  name: String!
  userId: Int!
}

input RoleOrderByRelationAggregateInput {
  _count: SortOrder
}

input RoleScalarWhereInput {
  AND: [RoleScalarWhereInput!]
  NOT: [RoleScalarWhereInput!]
  OR: [RoleScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
}

input RoleUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RoleUpdateManyWithWhereWithoutUserInput {
  data: RoleUpdateManyMutationInput!
  where: RoleScalarWhereInput!
}

input RoleUpdateManyWithoutUserInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUserInput!]
  create: [RoleCreateWithoutUserInput!]
  createMany: RoleCreateManyUserInputEnvelope
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [RoleUpdateManyWithWhereWithoutUserInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUserInput!]
}

input RoleUpdateWithWhereUniqueWithoutUserInput {
  data: RoleUpdateWithoutUserInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RoleUpsertWithWhereUniqueWithoutUserInput {
  create: RoleCreateWithoutUserInput!
  update: RoleUpdateWithoutUserInput!
  where: RoleWhereUniqueInput!
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: IntFilter
}

input RoleWhereUniqueInput {
  id: Int
  name_userId: RoleNameUserIdCompoundUniqueInput
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  addedBy: User
  aliases(cursor: TagAliasWhereUniqueInput, skip: Int, take: Int): [TagAlias!]!
  category: TagCategory
  createdAt: DateTime!
  name: String!
  source: TagSource!
}

type TagAlias {
  addedBy: User
  createdAt: DateTime!
  name: String!
  tag: Tag!
  updatedAt: DateTime!
}

input TagAliasAliasTagCompoundUniqueInput {
  name: String!
  tagId: Int!
}

input TagAliasCreateManyAddedByInput {
  createdAt: DateTime
  id: Int
  name: String!
  tagId: Int!
  updatedAt: DateTime
}

input TagAliasCreateManyAddedByInputEnvelope {
  data: [TagAliasCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input TagAliasCreateManyTagInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  name: String!
  updatedAt: DateTime
}

input TagAliasCreateManyTagInputEnvelope {
  data: [TagAliasCreateManyTagInput!]
  skipDuplicates: Boolean
}

input TagAliasCreateNestedManyWithoutAddedByInput {
  connect: [TagAliasWhereUniqueInput!]
  connectOrCreate: [TagAliasCreateOrConnectWithoutAddedByInput!]
  create: [TagAliasCreateWithoutAddedByInput!]
  createMany: TagAliasCreateManyAddedByInputEnvelope
}

input TagAliasCreateNestedManyWithoutTagInput {
  connect: [TagAliasWhereUniqueInput!]
  connectOrCreate: [TagAliasCreateOrConnectWithoutTagInput!]
  create: [TagAliasCreateWithoutTagInput!]
  createMany: TagAliasCreateManyTagInputEnvelope
}

input TagAliasCreateOrConnectWithoutAddedByInput {
  create: TagAliasCreateWithoutAddedByInput!
  where: TagAliasWhereUniqueInput!
}

input TagAliasCreateOrConnectWithoutTagInput {
  create: TagAliasCreateWithoutTagInput!
  where: TagAliasWhereUniqueInput!
}

input TagAliasCreateWithoutAddedByInput {
  createdAt: DateTime
  name: String!
  tag: TagCreateNestedOneWithoutAliasesInput!
  updatedAt: DateTime
}

input TagAliasCreateWithoutTagInput {
  addedBy: UserCreateNestedOneWithoutTagAliasesInput
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input TagAliasListRelationFilter {
  every: TagAliasWhereInput
  none: TagAliasWhereInput
  some: TagAliasWhereInput
}

input TagAliasOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagAliasScalarWhereInput {
  AND: [TagAliasScalarWhereInput!]
  NOT: [TagAliasScalarWhereInput!]
  OR: [TagAliasScalarWhereInput!]
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  tagId: IntFilter
  updatedAt: DateTimeFilter
}

input TagAliasUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagAliasUpdateManyWithWhereWithoutAddedByInput {
  data: TagAliasUpdateManyMutationInput!
  where: TagAliasScalarWhereInput!
}

input TagAliasUpdateManyWithWhereWithoutTagInput {
  data: TagAliasUpdateManyMutationInput!
  where: TagAliasScalarWhereInput!
}

input TagAliasUpdateManyWithoutAddedByInput {
  connect: [TagAliasWhereUniqueInput!]
  connectOrCreate: [TagAliasCreateOrConnectWithoutAddedByInput!]
  create: [TagAliasCreateWithoutAddedByInput!]
  createMany: TagAliasCreateManyAddedByInputEnvelope
  delete: [TagAliasWhereUniqueInput!]
  deleteMany: [TagAliasScalarWhereInput!]
  disconnect: [TagAliasWhereUniqueInput!]
  set: [TagAliasWhereUniqueInput!]
  update: [TagAliasUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [TagAliasUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [TagAliasUpsertWithWhereUniqueWithoutAddedByInput!]
}

input TagAliasUpdateManyWithoutTagInput {
  connect: [TagAliasWhereUniqueInput!]
  connectOrCreate: [TagAliasCreateOrConnectWithoutTagInput!]
  create: [TagAliasCreateWithoutTagInput!]
  createMany: TagAliasCreateManyTagInputEnvelope
  delete: [TagAliasWhereUniqueInput!]
  deleteMany: [TagAliasScalarWhereInput!]
  disconnect: [TagAliasWhereUniqueInput!]
  set: [TagAliasWhereUniqueInput!]
  update: [TagAliasUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [TagAliasUpdateManyWithWhereWithoutTagInput!]
  upsert: [TagAliasUpsertWithWhereUniqueWithoutTagInput!]
}

input TagAliasUpdateWithWhereUniqueWithoutAddedByInput {
  data: TagAliasUpdateWithoutAddedByInput!
  where: TagAliasWhereUniqueInput!
}

input TagAliasUpdateWithWhereUniqueWithoutTagInput {
  data: TagAliasUpdateWithoutTagInput!
  where: TagAliasWhereUniqueInput!
}

input TagAliasUpdateWithoutAddedByInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutAliasesInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagAliasUpdateWithoutTagInput {
  addedBy: UserUpdateOneWithoutTagAliasesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagAliasUpsertWithWhereUniqueWithoutAddedByInput {
  create: TagAliasCreateWithoutAddedByInput!
  update: TagAliasUpdateWithoutAddedByInput!
  where: TagAliasWhereUniqueInput!
}

input TagAliasUpsertWithWhereUniqueWithoutTagInput {
  create: TagAliasCreateWithoutTagInput!
  update: TagAliasUpdateWithoutTagInput!
  where: TagAliasWhereUniqueInput!
}

input TagAliasWhereInput {
  AND: [TagAliasWhereInput!]
  NOT: [TagAliasWhereInput!]
  OR: [TagAliasWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  tag: TagWhereInput
  tagId: IntFilter
  updatedAt: DateTimeFilter
}

input TagAliasWhereUniqueInput {
  aliasTag: TagAliasAliasTagCompoundUniqueInput
  id: Int
}

type TagCategory {
  addedBy: User
  createdAt: DateTime!
  name: String!
  updatedAt: DateTime!
}

input TagCategoryCreateManyAddedByInput {
  createdAt: DateTime
  id: Int
  name: String!
  updatedAt: DateTime
}

input TagCategoryCreateManyAddedByInputEnvelope {
  data: [TagCategoryCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input TagCategoryCreateNestedManyWithoutAddedByInput {
  connect: [TagCategoryWhereUniqueInput!]
  connectOrCreate: [TagCategoryCreateOrConnectWithoutAddedByInput!]
  create: [TagCategoryCreateWithoutAddedByInput!]
  createMany: TagCategoryCreateManyAddedByInputEnvelope
}

input TagCategoryCreateNestedOneWithoutTagsInput {
  connect: TagCategoryWhereUniqueInput
  connectOrCreate: TagCategoryCreateOrConnectWithoutTagsInput
  create: TagCategoryCreateWithoutTagsInput
}

input TagCategoryCreateOrConnectWithoutAddedByInput {
  create: TagCategoryCreateWithoutAddedByInput!
  where: TagCategoryWhereUniqueInput!
}

input TagCategoryCreateOrConnectWithoutTagsInput {
  create: TagCategoryCreateWithoutTagsInput!
  where: TagCategoryWhereUniqueInput!
}

input TagCategoryCreateWithoutAddedByInput {
  createdAt: DateTime
  name: String!
  tags: TagCreateNestedManyWithoutCategoryInput
  updatedAt: DateTime
}

input TagCategoryCreateWithoutTagsInput {
  addedBy: UserCreateNestedOneWithoutTagCategoriesInput
  createdAt: DateTime
  name: String!
  updatedAt: DateTime
}

input TagCategoryListRelationFilter {
  every: TagCategoryWhereInput
  none: TagCategoryWhereInput
  some: TagCategoryWhereInput
}

input TagCategoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagCategoryScalarWhereInput {
  AND: [TagCategoryScalarWhereInput!]
  NOT: [TagCategoryScalarWhereInput!]
  OR: [TagCategoryScalarWhereInput!]
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input TagCategoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagCategoryUpdateManyWithWhereWithoutAddedByInput {
  data: TagCategoryUpdateManyMutationInput!
  where: TagCategoryScalarWhereInput!
}

input TagCategoryUpdateManyWithoutAddedByInput {
  connect: [TagCategoryWhereUniqueInput!]
  connectOrCreate: [TagCategoryCreateOrConnectWithoutAddedByInput!]
  create: [TagCategoryCreateWithoutAddedByInput!]
  createMany: TagCategoryCreateManyAddedByInputEnvelope
  delete: [TagCategoryWhereUniqueInput!]
  deleteMany: [TagCategoryScalarWhereInput!]
  disconnect: [TagCategoryWhereUniqueInput!]
  set: [TagCategoryWhereUniqueInput!]
  update: [TagCategoryUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [TagCategoryUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [TagCategoryUpsertWithWhereUniqueWithoutAddedByInput!]
}

input TagCategoryUpdateOneWithoutTagsInput {
  connect: TagCategoryWhereUniqueInput
  connectOrCreate: TagCategoryCreateOrConnectWithoutTagsInput
  create: TagCategoryCreateWithoutTagsInput
  delete: Boolean
  disconnect: Boolean
  update: TagCategoryUpdateWithoutTagsInput
  upsert: TagCategoryUpsertWithoutTagsInput
}

input TagCategoryUpdateWithWhereUniqueWithoutAddedByInput {
  data: TagCategoryUpdateWithoutAddedByInput!
  where: TagCategoryWhereUniqueInput!
}

input TagCategoryUpdateWithoutAddedByInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutCategoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagCategoryUpdateWithoutTagsInput {
  addedBy: UserUpdateOneWithoutTagCategoriesInput
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagCategoryUpsertWithWhereUniqueWithoutAddedByInput {
  create: TagCategoryCreateWithoutAddedByInput!
  update: TagCategoryUpdateWithoutAddedByInput!
  where: TagCategoryWhereUniqueInput!
}

input TagCategoryUpsertWithoutTagsInput {
  create: TagCategoryCreateWithoutTagsInput!
  update: TagCategoryUpdateWithoutTagsInput!
}

input TagCategoryWhereInput {
  AND: [TagCategoryWhereInput!]
  NOT: [TagCategoryWhereInput!]
  OR: [TagCategoryWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  tags: TagListRelationFilter
  updatedAt: DateTimeFilter
}

input TagCategoryWhereUniqueInput {
  id: Int
  name: String
}

input TagCreateManyAddedByInput {
  categoryId: Int
  createdAt: DateTime
  id: Int
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagCreateManyAddedByInputEnvelope {
  data: [TagCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input TagCreateManyCategoryInput {
  addedById: Int
  createdAt: DateTime
  id: Int
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagCreateManyCategoryInputEnvelope {
  data: [TagCreateManyCategoryInput!]
  skipDuplicates: Boolean
}

input TagCreateNestedManyWithoutAddedByInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutAddedByInput!]
  create: [TagCreateWithoutAddedByInput!]
  createMany: TagCreateManyAddedByInputEnvelope
}

input TagCreateNestedManyWithoutCategoryInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutCategoryInput!]
  create: [TagCreateWithoutCategoryInput!]
  createMany: TagCreateManyCategoryInputEnvelope
}

input TagCreateNestedOneWithoutAliasesInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutAliasesInput
  create: TagCreateWithoutAliasesInput
}

input TagCreateNestedOneWithoutAppearancesInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutAppearancesInput
  create: TagCreateWithoutAppearancesInput
}

input TagCreateNestedOneWithoutImagesInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutImagesInput
  create: TagCreateWithoutImagesInput
}

input TagCreateOrConnectWithoutAddedByInput {
  create: TagCreateWithoutAddedByInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutAliasesInput {
  create: TagCreateWithoutAliasesInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutAppearancesInput {
  create: TagCreateWithoutAppearancesInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutCategoryInput {
  create: TagCreateWithoutCategoryInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutImagesInput {
  create: TagCreateWithoutImagesInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutAddedByInput {
  aliases: TagAliasCreateNestedManyWithoutTagInput
  appearances: AppearanceTagCreateNestedManyWithoutTagInput
  category: TagCategoryCreateNestedOneWithoutTagsInput
  createdAt: DateTime
  images: ImageTagCreateNestedManyWithoutTagInput
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagCreateWithoutAliasesInput {
  addedBy: UserCreateNestedOneWithoutCratedTagsInput
  appearances: AppearanceTagCreateNestedManyWithoutTagInput
  category: TagCategoryCreateNestedOneWithoutTagsInput
  createdAt: DateTime
  images: ImageTagCreateNestedManyWithoutTagInput
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagCreateWithoutAppearancesInput {
  addedBy: UserCreateNestedOneWithoutCratedTagsInput
  aliases: TagAliasCreateNestedManyWithoutTagInput
  category: TagCategoryCreateNestedOneWithoutTagsInput
  createdAt: DateTime
  images: ImageTagCreateNestedManyWithoutTagInput
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagCreateWithoutCategoryInput {
  addedBy: UserCreateNestedOneWithoutCratedTagsInput
  aliases: TagAliasCreateNestedManyWithoutTagInput
  appearances: AppearanceTagCreateNestedManyWithoutTagInput
  createdAt: DateTime
  images: ImageTagCreateNestedManyWithoutTagInput
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagCreateWithoutImagesInput {
  addedBy: UserCreateNestedOneWithoutCratedTagsInput
  aliases: TagAliasCreateNestedManyWithoutTagInput
  appearances: AppearanceTagCreateNestedManyWithoutTagInput
  category: TagCategoryCreateNestedOneWithoutTagsInput
  createdAt: DateTime
  name: String!
  source: TagSource
  updatedAt: DateTime
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  addedById: IntNullableFilter
  categoryId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  source: EnumTagSourceFilter
  updatedAt: DateTimeFilter
}

enum TagSource {
  USER
}

input TagUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  source: EnumTagSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutAddedByInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithWhereWithoutCategoryInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutAddedByInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutAddedByInput!]
  create: [TagCreateWithoutAddedByInput!]
  createMany: TagCreateManyAddedByInputEnvelope
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [TagUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutAddedByInput!]
}

input TagUpdateManyWithoutCategoryInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutCategoryInput!]
  create: [TagCreateWithoutCategoryInput!]
  createMany: TagCreateManyCategoryInputEnvelope
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutCategoryInput!]
  updateMany: [TagUpdateManyWithWhereWithoutCategoryInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutCategoryInput!]
}

input TagUpdateOneRequiredWithoutAliasesInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutAliasesInput
  create: TagCreateWithoutAliasesInput
  update: TagUpdateWithoutAliasesInput
  upsert: TagUpsertWithoutAliasesInput
}

input TagUpdateOneRequiredWithoutAppearancesInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutAppearancesInput
  create: TagCreateWithoutAppearancesInput
  update: TagUpdateWithoutAppearancesInput
  upsert: TagUpsertWithoutAppearancesInput
}

input TagUpdateOneRequiredWithoutImagesInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutImagesInput
  create: TagCreateWithoutImagesInput
  update: TagUpdateWithoutImagesInput
  upsert: TagUpsertWithoutImagesInput
}

input TagUpdateWithWhereUniqueWithoutAddedByInput {
  data: TagUpdateWithoutAddedByInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutCategoryInput {
  data: TagUpdateWithoutCategoryInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutAddedByInput {
  aliases: TagAliasUpdateManyWithoutTagInput
  appearances: AppearanceTagUpdateManyWithoutTagInput
  category: TagCategoryUpdateOneWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  images: ImageTagUpdateManyWithoutTagInput
  name: StringFieldUpdateOperationsInput
  source: EnumTagSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateWithoutAliasesInput {
  addedBy: UserUpdateOneWithoutCratedTagsInput
  appearances: AppearanceTagUpdateManyWithoutTagInput
  category: TagCategoryUpdateOneWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  images: ImageTagUpdateManyWithoutTagInput
  name: StringFieldUpdateOperationsInput
  source: EnumTagSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateWithoutAppearancesInput {
  addedBy: UserUpdateOneWithoutCratedTagsInput
  aliases: TagAliasUpdateManyWithoutTagInput
  category: TagCategoryUpdateOneWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  images: ImageTagUpdateManyWithoutTagInput
  name: StringFieldUpdateOperationsInput
  source: EnumTagSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateWithoutCategoryInput {
  addedBy: UserUpdateOneWithoutCratedTagsInput
  aliases: TagAliasUpdateManyWithoutTagInput
  appearances: AppearanceTagUpdateManyWithoutTagInput
  createdAt: DateTimeFieldUpdateOperationsInput
  images: ImageTagUpdateManyWithoutTagInput
  name: StringFieldUpdateOperationsInput
  source: EnumTagSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateWithoutImagesInput {
  addedBy: UserUpdateOneWithoutCratedTagsInput
  aliases: TagAliasUpdateManyWithoutTagInput
  appearances: AppearanceTagUpdateManyWithoutTagInput
  category: TagCategoryUpdateOneWithoutTagsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  source: EnumTagSourceFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutAddedByInput {
  create: TagCreateWithoutAddedByInput!
  update: TagUpdateWithoutAddedByInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutCategoryInput {
  create: TagCreateWithoutCategoryInput!
  update: TagUpdateWithoutCategoryInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithoutAliasesInput {
  create: TagCreateWithoutAliasesInput!
  update: TagUpdateWithoutAliasesInput!
}

input TagUpsertWithoutAppearancesInput {
  create: TagCreateWithoutAppearancesInput!
  update: TagUpdateWithoutAppearancesInput!
}

input TagUpsertWithoutImagesInput {
  create: TagCreateWithoutImagesInput!
  update: TagUpdateWithoutImagesInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  aliases: TagAliasListRelationFilter
  appearances: AppearanceTagListRelationFilter
  category: TagCategoryWhereInput
  categoryId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  images: ImageTagListRelationFilter
  name: StringFilter
  source: EnumTagSourceFilter
  updatedAt: DateTimeFilter
}

input TagWhereUniqueInput {
  id: Int
  name: String
}

"""Preview urls of an image"""
type Thumbnail {
  large: String!
  medium: String!
  small: String!
}

input UpdatePersonInputs {
  aliases: [String!]!
  avatarId: Int
  bannerId: Int
  birthDate: DateTime
  description: String
  gender: Gender
  groups: [GroupMembership!]!
  name: String!
  preferredAliasId: Int
  preferredMembershipId: Int
}

enum UploadType {
  AUTO_DISCOVERY
  TOKEN
  WEBSITE
}

type User {
  avatar: Image
  bot: Boolean!
  createdAt: DateTime!
  id: Int!
  image: String
  images(cursor: ImageWhereUniqueInput, orderBy: [ImageOrderByWithRelationInput!], skip: Int, take: Int, where: ImageWhereInput): [Image!]!
  name: String
  roles: [Role!]!
  xp: Int
}

input UserCreateNestedOneWithoutActionedReportedImagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutActionedReportedImagesInput
  create: UserCreateWithoutActionedReportedImagesInput
}

input UserCreateNestedOneWithoutAppearanceTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAppearanceTagsInput
  create: UserCreateWithoutAppearanceTagsInput
}

input UserCreateNestedOneWithoutAvatarInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAvatarInput
  create: UserCreateWithoutAvatarInput
}

input UserCreateNestedOneWithoutBannerInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutBannerInput
  create: UserCreateWithoutBannerInput
}

input UserCreateNestedOneWithoutCratedTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCratedTagsInput
  create: UserCreateWithoutCratedTagsInput
}

input UserCreateNestedOneWithoutDiscoveredImageVoteInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutDiscoveredImageVoteInput
  create: UserCreateWithoutDiscoveredImageVoteInput
}

input UserCreateNestedOneWithoutImageLikesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImageLikesInput
  create: UserCreateWithoutImageLikesInput
}

input UserCreateNestedOneWithoutImageTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImageTagsInput
  create: UserCreateWithoutImageTagsInput
}

input UserCreateNestedOneWithoutImagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImagesInput
  create: UserCreateWithoutImagesInput
}

input UserCreateNestedOneWithoutPlacedRestrictionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPlacedRestrictionsInput
  create: UserCreateWithoutPlacedRestrictionsInput
}

input UserCreateNestedOneWithoutReportedImagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReportedImagesInput
  create: UserCreateWithoutReportedImagesInput
}

input UserCreateNestedOneWithoutRestrictionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRestrictionsInput
  create: UserCreateWithoutRestrictionsInput
}

input UserCreateNestedOneWithoutTagAliasesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTagAliasesInput
  create: UserCreateWithoutTagAliasesInput
}

input UserCreateNestedOneWithoutTagCategoriesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTagCategoriesInput
  create: UserCreateWithoutTagCategoriesInput
}

input UserCreateNestedOneWithoutTaggedAppearancesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTaggedAppearancesInput
  create: UserCreateWithoutTaggedAppearancesInput
}

input UserCreateOrConnectWithoutActionedReportedImagesInput {
  create: UserCreateWithoutActionedReportedImagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutAppearanceTagsInput {
  create: UserCreateWithoutAppearanceTagsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutAvatarInput {
  create: UserCreateWithoutAvatarInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutBannerInput {
  create: UserCreateWithoutBannerInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCratedTagsInput {
  create: UserCreateWithoutCratedTagsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutDiscoveredImageVoteInput {
  create: UserCreateWithoutDiscoveredImageVoteInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutImageLikesInput {
  create: UserCreateWithoutImageLikesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutImageTagsInput {
  create: UserCreateWithoutImageTagsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutImagesInput {
  create: UserCreateWithoutImagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutMarkedFacesInput {
  create: UserCreateWithoutMarkedFacesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPlacedRestrictionsInput {
  create: UserCreateWithoutPlacedRestrictionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutReportedImagesInput {
  create: UserCreateWithoutReportedImagesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRestrictionsInput {
  create: UserCreateWithoutRestrictionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTagAliasesInput {
  create: UserCreateWithoutTagAliasesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTagCategoriesInput {
  create: UserCreateWithoutTagCategoriesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutTaggedAppearancesInput {
  create: UserCreateWithoutTaggedAppearancesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutActionedReportedImagesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutAppearanceTagsInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutAvatarInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutBannerInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutCratedTagsInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutDiscoveredImageVoteInput {
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutImageLikesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutImageTagsInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutImagesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutMarkedFacesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutPlacedRestrictionsInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutReportedImagesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutRestrictionsInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutTagAliasesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutTagCategoriesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  taggedAppearances: AppearanceCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

input UserCreateWithoutTaggedAppearancesInput {
  DiscoveredImageVote: DiscoveredImageVoteCreateNestedManyWithoutUserInput
  actionedReportedImages: ImageReportCreateNestedManyWithoutActionedByInput
  appearanceTags: AppearanceTagCreateNestedManyWithoutAddedByInput
  avatar: ImageCreateNestedOneWithoutUserAvatarOfInput
  banner: ImageCreateNestedOneWithoutUserBannerOfInput
  bot: Boolean
  cratedTags: TagCreateNestedManyWithoutAddedByInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  imageLikes: ImageLikeCreateNestedManyWithoutUserInput
  imageTags: ImageTagCreateNestedManyWithoutAddedByInput
  images: ImageCreateNestedManyWithoutUserInput
  markedFaces: FaceCreateNestedManyWithoutAddedByInput
  name: String
  placedRestrictions: UserRestrictionCreateNestedManyWithoutAddedByInput
  reportedImages: ImageReportCreateNestedManyWithoutReportedByInput
  restrictions: UserRestrictionCreateNestedManyWithoutUserInput
  roles: RoleCreateNestedManyWithoutUserInput
  tagAliases: TagAliasCreateNestedManyWithoutAddedByInput
  tagCategories: TagCategoryCreateNestedManyWithoutAddedByInput
  token: String
  updatedAt: DateTime
}

type UserNotifications {
  unreadReports: Int
}

input UserOrderByWithRelationInput {
  DiscoveredImageVote: DiscoveredImageVoteOrderByRelationAggregateInput
  actionedReportedImages: ImageReportOrderByRelationAggregateInput
  appearanceTags: AppearanceTagOrderByRelationAggregateInput
  avatar: ImageOrderByWithRelationInput
  avatarId: SortOrder
  banner: ImageOrderByWithRelationInput
  bannerId: SortOrder
  bot: SortOrder
  cratedTags: TagOrderByRelationAggregateInput
  createdAt: SortOrder
  email: SortOrder
  emailVerified: SortOrder
  id: SortOrder
  image: SortOrder
  imageLikes: ImageLikeOrderByRelationAggregateInput
  imageTags: ImageTagOrderByRelationAggregateInput
  images: ImageOrderByRelationAggregateInput
  markedFaces: FaceOrderByRelationAggregateInput
  name: SortOrder
  placedRestrictions: UserRestrictionOrderByRelationAggregateInput
  reportedImages: ImageReportOrderByRelationAggregateInput
  restrictions: UserRestrictionOrderByRelationAggregateInput
  roles: RoleOrderByRelationAggregateInput
  tagAliases: TagAliasOrderByRelationAggregateInput
  tagCategories: TagCategoryOrderByRelationAggregateInput
  taggedAppearances: AppearanceOrderByRelationAggregateInput
  token: SortOrder
  updatedAt: SortOrder
}

input UserRestrictionCreateManyAddedByInput {
  associatedEntityId: Int
  createdAt: DateTime
  id: Int
  restriction: RestrictionKind!
  updatedAt: DateTime
  userId: Int!
}

input UserRestrictionCreateManyAddedByInputEnvelope {
  data: [UserRestrictionCreateManyAddedByInput!]
  skipDuplicates: Boolean
}

input UserRestrictionCreateManyUserInput {
  addedById: Int
  associatedEntityId: Int
  createdAt: DateTime
  id: Int
  restriction: RestrictionKind!
  updatedAt: DateTime
}

input UserRestrictionCreateManyUserInputEnvelope {
  data: [UserRestrictionCreateManyUserInput!]
  skipDuplicates: Boolean
}

input UserRestrictionCreateNestedManyWithoutAddedByInput {
  connect: [UserRestrictionWhereUniqueInput!]
  connectOrCreate: [UserRestrictionCreateOrConnectWithoutAddedByInput!]
  create: [UserRestrictionCreateWithoutAddedByInput!]
  createMany: UserRestrictionCreateManyAddedByInputEnvelope
}

input UserRestrictionCreateNestedManyWithoutUserInput {
  connect: [UserRestrictionWhereUniqueInput!]
  connectOrCreate: [UserRestrictionCreateOrConnectWithoutUserInput!]
  create: [UserRestrictionCreateWithoutUserInput!]
  createMany: UserRestrictionCreateManyUserInputEnvelope
}

input UserRestrictionCreateOrConnectWithoutAddedByInput {
  create: UserRestrictionCreateWithoutAddedByInput!
  where: UserRestrictionWhereUniqueInput!
}

input UserRestrictionCreateOrConnectWithoutUserInput {
  create: UserRestrictionCreateWithoutUserInput!
  where: UserRestrictionWhereUniqueInput!
}

input UserRestrictionCreateWithoutAddedByInput {
  associatedEntityId: Int
  createdAt: DateTime
  restriction: RestrictionKind!
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutRestrictionsInput!
}

input UserRestrictionCreateWithoutUserInput {
  addedBy: UserCreateNestedOneWithoutPlacedRestrictionsInput
  associatedEntityId: Int
  createdAt: DateTime
  restriction: RestrictionKind!
  updatedAt: DateTime
}

input UserRestrictionListRelationFilter {
  every: UserRestrictionWhereInput
  none: UserRestrictionWhereInput
  some: UserRestrictionWhereInput
}

input UserRestrictionOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserRestrictionScalarWhereInput {
  AND: [UserRestrictionScalarWhereInput!]
  NOT: [UserRestrictionScalarWhereInput!]
  OR: [UserRestrictionScalarWhereInput!]
  addedById: IntNullableFilter
  associatedEntityId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  restriction: EnumRestrictionKindFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
}

input UserRestrictionUpdateManyMutationInput {
  associatedEntityId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  restriction: EnumRestrictionKindFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserRestrictionUpdateManyWithWhereWithoutAddedByInput {
  data: UserRestrictionUpdateManyMutationInput!
  where: UserRestrictionScalarWhereInput!
}

input UserRestrictionUpdateManyWithWhereWithoutUserInput {
  data: UserRestrictionUpdateManyMutationInput!
  where: UserRestrictionScalarWhereInput!
}

input UserRestrictionUpdateManyWithoutAddedByInput {
  connect: [UserRestrictionWhereUniqueInput!]
  connectOrCreate: [UserRestrictionCreateOrConnectWithoutAddedByInput!]
  create: [UserRestrictionCreateWithoutAddedByInput!]
  createMany: UserRestrictionCreateManyAddedByInputEnvelope
  delete: [UserRestrictionWhereUniqueInput!]
  deleteMany: [UserRestrictionScalarWhereInput!]
  disconnect: [UserRestrictionWhereUniqueInput!]
  set: [UserRestrictionWhereUniqueInput!]
  update: [UserRestrictionUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [UserRestrictionUpdateManyWithWhereWithoutAddedByInput!]
  upsert: [UserRestrictionUpsertWithWhereUniqueWithoutAddedByInput!]
}

input UserRestrictionUpdateManyWithoutUserInput {
  connect: [UserRestrictionWhereUniqueInput!]
  connectOrCreate: [UserRestrictionCreateOrConnectWithoutUserInput!]
  create: [UserRestrictionCreateWithoutUserInput!]
  createMany: UserRestrictionCreateManyUserInputEnvelope
  delete: [UserRestrictionWhereUniqueInput!]
  deleteMany: [UserRestrictionScalarWhereInput!]
  disconnect: [UserRestrictionWhereUniqueInput!]
  set: [UserRestrictionWhereUniqueInput!]
  update: [UserRestrictionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserRestrictionUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserRestrictionUpsertWithWhereUniqueWithoutUserInput!]
}

input UserRestrictionUpdateWithWhereUniqueWithoutAddedByInput {
  data: UserRestrictionUpdateWithoutAddedByInput!
  where: UserRestrictionWhereUniqueInput!
}

input UserRestrictionUpdateWithWhereUniqueWithoutUserInput {
  data: UserRestrictionUpdateWithoutUserInput!
  where: UserRestrictionWhereUniqueInput!
}

input UserRestrictionUpdateWithoutAddedByInput {
  associatedEntityId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  restriction: EnumRestrictionKindFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutRestrictionsInput
}

input UserRestrictionUpdateWithoutUserInput {
  addedBy: UserUpdateOneWithoutPlacedRestrictionsInput
  associatedEntityId: NullableIntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  restriction: EnumRestrictionKindFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserRestrictionUpsertWithWhereUniqueWithoutAddedByInput {
  create: UserRestrictionCreateWithoutAddedByInput!
  update: UserRestrictionUpdateWithoutAddedByInput!
  where: UserRestrictionWhereUniqueInput!
}

input UserRestrictionUpsertWithWhereUniqueWithoutUserInput {
  create: UserRestrictionCreateWithoutUserInput!
  update: UserRestrictionUpdateWithoutUserInput!
  where: UserRestrictionWhereUniqueInput!
}

input UserRestrictionUserRestrictionTargetCompoundUniqueInput {
  restriction: RestrictionKind!
  userId: Int!
}

input UserRestrictionWhereInput {
  AND: [UserRestrictionWhereInput!]
  NOT: [UserRestrictionWhereInput!]
  OR: [UserRestrictionWhereInput!]
  addedBy: UserWhereInput
  addedById: IntNullableFilter
  associatedEntityId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  restriction: EnumRestrictionKindFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: IntFilter
}

input UserRestrictionWhereUniqueInput {
  id: Int
  userRestrictionTarget: UserRestrictionUserRestrictionTargetCompoundUniqueInput
}

input UserUpdateOneRequiredWithoutDiscoveredImageVoteInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutDiscoveredImageVoteInput
  create: UserCreateWithoutDiscoveredImageVoteInput
  update: UserUpdateWithoutDiscoveredImageVoteInput
  upsert: UserUpsertWithoutDiscoveredImageVoteInput
}

input UserUpdateOneRequiredWithoutImageLikesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImageLikesInput
  create: UserCreateWithoutImageLikesInput
  update: UserUpdateWithoutImageLikesInput
  upsert: UserUpsertWithoutImageLikesInput
}

input UserUpdateOneRequiredWithoutReportedImagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReportedImagesInput
  create: UserCreateWithoutReportedImagesInput
  update: UserUpdateWithoutReportedImagesInput
  upsert: UserUpsertWithoutReportedImagesInput
}

input UserUpdateOneRequiredWithoutRestrictionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRestrictionsInput
  create: UserCreateWithoutRestrictionsInput
  update: UserUpdateWithoutRestrictionsInput
  upsert: UserUpsertWithoutRestrictionsInput
}

input UserUpdateOneWithoutActionedReportedImagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutActionedReportedImagesInput
  create: UserCreateWithoutActionedReportedImagesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutActionedReportedImagesInput
  upsert: UserUpsertWithoutActionedReportedImagesInput
}

input UserUpdateOneWithoutAppearanceTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAppearanceTagsInput
  create: UserCreateWithoutAppearanceTagsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutAppearanceTagsInput
  upsert: UserUpsertWithoutAppearanceTagsInput
}

input UserUpdateOneWithoutAvatarInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAvatarInput
  create: UserCreateWithoutAvatarInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutAvatarInput
  upsert: UserUpsertWithoutAvatarInput
}

input UserUpdateOneWithoutBannerInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutBannerInput
  create: UserCreateWithoutBannerInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutBannerInput
  upsert: UserUpsertWithoutBannerInput
}

input UserUpdateOneWithoutCratedTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCratedTagsInput
  create: UserCreateWithoutCratedTagsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutCratedTagsInput
  upsert: UserUpsertWithoutCratedTagsInput
}

input UserUpdateOneWithoutImageTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImageTagsInput
  create: UserCreateWithoutImageTagsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutImageTagsInput
  upsert: UserUpsertWithoutImageTagsInput
}

input UserUpdateOneWithoutImagesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutImagesInput
  create: UserCreateWithoutImagesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutImagesInput
  upsert: UserUpsertWithoutImagesInput
}

input UserUpdateOneWithoutMarkedFacesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutMarkedFacesInput
  create: UserCreateWithoutMarkedFacesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutMarkedFacesInput
  upsert: UserUpsertWithoutMarkedFacesInput
}

input UserUpdateOneWithoutPlacedRestrictionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPlacedRestrictionsInput
  create: UserCreateWithoutPlacedRestrictionsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutPlacedRestrictionsInput
  upsert: UserUpsertWithoutPlacedRestrictionsInput
}

input UserUpdateOneWithoutTagAliasesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTagAliasesInput
  create: UserCreateWithoutTagAliasesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutTagAliasesInput
  upsert: UserUpsertWithoutTagAliasesInput
}

input UserUpdateOneWithoutTagCategoriesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTagCategoriesInput
  create: UserCreateWithoutTagCategoriesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutTagCategoriesInput
  upsert: UserUpsertWithoutTagCategoriesInput
}

input UserUpdateOneWithoutTaggedAppearancesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutTaggedAppearancesInput
  create: UserCreateWithoutTaggedAppearancesInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutTaggedAppearancesInput
  upsert: UserUpsertWithoutTaggedAppearancesInput
}

input UserUpdateWithoutActionedReportedImagesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutAppearanceTagsInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutAvatarInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutBannerInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutCratedTagsInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutDiscoveredImageVoteInput {
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutImageLikesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutImageTagsInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutImagesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutMarkedFacesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutPlacedRestrictionsInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutReportedImagesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutRestrictionsInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutTagAliasesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutTagCategoriesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  taggedAppearances: AppearanceUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutTaggedAppearancesInput {
  DiscoveredImageVote: DiscoveredImageVoteUpdateManyWithoutUserInput
  actionedReportedImages: ImageReportUpdateManyWithoutActionedByInput
  appearanceTags: AppearanceTagUpdateManyWithoutAddedByInput
  avatar: ImageUpdateOneWithoutUserAvatarOfInput
  banner: ImageUpdateOneWithoutUserBannerOfInput
  bot: BoolFieldUpdateOperationsInput
  cratedTags: TagUpdateManyWithoutAddedByInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  imageLikes: ImageLikeUpdateManyWithoutUserInput
  imageTags: ImageTagUpdateManyWithoutAddedByInput
  images: ImageUpdateManyWithoutUserInput
  markedFaces: FaceUpdateManyWithoutAddedByInput
  name: NullableStringFieldUpdateOperationsInput
  placedRestrictions: UserRestrictionUpdateManyWithoutAddedByInput
  reportedImages: ImageReportUpdateManyWithoutReportedByInput
  restrictions: UserRestrictionUpdateManyWithoutUserInput
  roles: RoleUpdateManyWithoutUserInput
  tagAliases: TagAliasUpdateManyWithoutAddedByInput
  tagCategories: TagCategoryUpdateManyWithoutAddedByInput
  token: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutActionedReportedImagesInput {
  create: UserCreateWithoutActionedReportedImagesInput!
  update: UserUpdateWithoutActionedReportedImagesInput!
}

input UserUpsertWithoutAppearanceTagsInput {
  create: UserCreateWithoutAppearanceTagsInput!
  update: UserUpdateWithoutAppearanceTagsInput!
}

input UserUpsertWithoutAvatarInput {
  create: UserCreateWithoutAvatarInput!
  update: UserUpdateWithoutAvatarInput!
}

input UserUpsertWithoutBannerInput {
  create: UserCreateWithoutBannerInput!
  update: UserUpdateWithoutBannerInput!
}

input UserUpsertWithoutCratedTagsInput {
  create: UserCreateWithoutCratedTagsInput!
  update: UserUpdateWithoutCratedTagsInput!
}

input UserUpsertWithoutDiscoveredImageVoteInput {
  create: UserCreateWithoutDiscoveredImageVoteInput!
  update: UserUpdateWithoutDiscoveredImageVoteInput!
}

input UserUpsertWithoutImageLikesInput {
  create: UserCreateWithoutImageLikesInput!
  update: UserUpdateWithoutImageLikesInput!
}

input UserUpsertWithoutImageTagsInput {
  create: UserCreateWithoutImageTagsInput!
  update: UserUpdateWithoutImageTagsInput!
}

input UserUpsertWithoutImagesInput {
  create: UserCreateWithoutImagesInput!
  update: UserUpdateWithoutImagesInput!
}

input UserUpsertWithoutMarkedFacesInput {
  create: UserCreateWithoutMarkedFacesInput!
  update: UserUpdateWithoutMarkedFacesInput!
}

input UserUpsertWithoutPlacedRestrictionsInput {
  create: UserCreateWithoutPlacedRestrictionsInput!
  update: UserUpdateWithoutPlacedRestrictionsInput!
}

input UserUpsertWithoutReportedImagesInput {
  create: UserCreateWithoutReportedImagesInput!
  update: UserUpdateWithoutReportedImagesInput!
}

input UserUpsertWithoutRestrictionsInput {
  create: UserCreateWithoutRestrictionsInput!
  update: UserUpdateWithoutRestrictionsInput!
}

input UserUpsertWithoutTagAliasesInput {
  create: UserCreateWithoutTagAliasesInput!
  update: UserUpdateWithoutTagAliasesInput!
}

input UserUpsertWithoutTagCategoriesInput {
  create: UserCreateWithoutTagCategoriesInput!
  update: UserUpdateWithoutTagCategoriesInput!
}

input UserUpsertWithoutTaggedAppearancesInput {
  create: UserCreateWithoutTaggedAppearancesInput!
  update: UserUpdateWithoutTaggedAppearancesInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  DiscoveredImageVote: DiscoveredImageVoteListRelationFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  actionedReportedImages: ImageReportListRelationFilter
  appearanceTags: AppearanceTagListRelationFilter
  avatar: ImageWhereInput
  avatarId: IntNullableFilter
  banner: ImageWhereInput
  bannerId: IntNullableFilter
  bot: BoolFilter
  cratedTags: TagListRelationFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  id: IntFilter
  image: StringNullableFilter
  imageLikes: ImageLikeListRelationFilter
  imageTags: ImageTagListRelationFilter
  images: ImageListRelationFilter
  markedFaces: FaceListRelationFilter
  name: StringNullableFilter
  placedRestrictions: UserRestrictionListRelationFilter
  reportedImages: ImageReportListRelationFilter
  restrictions: UserRestrictionListRelationFilter
  roles: RoleListRelationFilter
  tagAliases: TagAliasListRelationFilter
  tagCategories: TagCategoryListRelationFilter
  taggedAppearances: AppearanceListRelationFilter
  token: StringNullableFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  avatarId: Int
  bannerId: Int
  email: String
  id: Int
  token: String
}
