/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as PrismaClient from ".prisma/client"
import { Context } from "./../site/lib/context-type"
import { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
import { QueryComplexity } from "nexus/dist/plugins/queryComplexityPlugin"


declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AliasListRelationFilter: { // input type
    every?: NexusGenInputs['AliasWhereInput'] | null; // AliasWhereInput
    none?: NexusGenInputs['AliasWhereInput'] | null; // AliasWhereInput
    some?: NexusGenInputs['AliasWhereInput'] | null; // AliasWhereInput
  }
  AliasPersonAliasCompoundUniqueInput: { // input type
    name: string; // String!
    personId: number; // Int!
  }
  AliasWhereInput: { // input type
    AND?: NexusGenInputs['AliasWhereInput'][] | null; // [AliasWhereInput!]
    NOT?: NexusGenInputs['AliasWhereInput'][] | null; // [AliasWhereInput!]
    OR?: NexusGenInputs['AliasWhereInput'][] | null; // [AliasWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    person?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    personId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    preferredAliasOf?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  AliasWhereUniqueInput: { // input type
    id?: number | null; // Int
    personAlias?: NexusGenInputs['AliasPersonAliasCompoundUniqueInput'] | null; // AliasPersonAliasCompoundUniqueInput
  }
  AppearanceAppearanceCompoundUniqueInput: { // input type
    imageId: number; // Int!
    personId: number; // Int!
  }
  AppearanceListRelationFilter: { // input type
    every?: NexusGenInputs['AppearanceWhereInput'] | null; // AppearanceWhereInput
    none?: NexusGenInputs['AppearanceWhereInput'] | null; // AppearanceWhereInput
    some?: NexusGenInputs['AppearanceWhereInput'] | null; // AppearanceWhereInput
  }
  AppearanceWhereInput: { // input type
    AND?: NexusGenInputs['AppearanceWhereInput'][] | null; // [AppearanceWhereInput!]
    NOT?: NexusGenInputs['AppearanceWhereInput'][] | null; // [AppearanceWhereInput!]
    OR?: NexusGenInputs['AppearanceWhereInput'][] | null; // [AppearanceWhereInput!]
    addedBy?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    addedById?: NexusGenInputs['IntFilter'] | null; // IntFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    faces?: NexusGenInputs['FaceListRelationFilter'] | null; // FaceListRelationFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    image?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    imageId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    person?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    personId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  AppearanceWhereUniqueInput: { // input type
    appearance?: NexusGenInputs['AppearanceAppearanceCompoundUniqueInput'] | null; // AppearanceAppearanceCompoundUniqueInput
    id?: number | null; // Int
  }
  BoolFilter: { // input type
    equals?: boolean | null; // Boolean
    not?: NexusGenInputs['NestedBoolFilter'] | null; // NestedBoolFilter
  }
  DateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  DateTimeNullableFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeNullableFilter'] | null; // NestedDateTimeNullableFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  EnumFaceSourceFilter: { // input type
    equals?: NexusGenEnums['FaceSource'] | null; // FaceSource
    in?: NexusGenEnums['FaceSource'][] | null; // [FaceSource!]
    not?: NexusGenInputs['NestedEnumFaceSourceFilter'] | null; // NestedEnumFaceSourceFilter
    notIn?: NexusGenEnums['FaceSource'][] | null; // [FaceSource!]
  }
  EnumMimeTypeFilter: { // input type
    equals?: NexusGenEnums['MimeType'] | null; // MimeType
    in?: NexusGenEnums['MimeType'][] | null; // [MimeType!]
    not?: NexusGenInputs['NestedEnumMimeTypeFilter'] | null; // NestedEnumMimeTypeFilter
    notIn?: NexusGenEnums['MimeType'][] | null; // [MimeType!]
  }
  EnumTagSourceFilter: { // input type
    equals?: NexusGenEnums['TagSource'] | null; // TagSource
    in?: NexusGenEnums['TagSource'][] | null; // [TagSource!]
    not?: NexusGenInputs['NestedEnumTagSourceFilter'] | null; // NestedEnumTagSourceFilter
    notIn?: NexusGenEnums['TagSource'][] | null; // [TagSource!]
  }
  EnumUploadTypeFilter: { // input type
    equals?: NexusGenEnums['UploadType'] | null; // UploadType
    in?: NexusGenEnums['UploadType'][] | null; // [UploadType!]
    not?: NexusGenInputs['NestedEnumUploadTypeFilter'] | null; // NestedEnumUploadTypeFilter
    notIn?: NexusGenEnums['UploadType'][] | null; // [UploadType!]
  }
  FaceListRelationFilter: { // input type
    every?: NexusGenInputs['FaceWhereInput'] | null; // FaceWhereInput
    none?: NexusGenInputs['FaceWhereInput'] | null; // FaceWhereInput
    some?: NexusGenInputs['FaceWhereInput'] | null; // FaceWhereInput
  }
  FaceWhereInput: { // input type
    AND?: NexusGenInputs['FaceWhereInput'][] | null; // [FaceWhereInput!]
    NOT?: NexusGenInputs['FaceWhereInput'][] | null; // [FaceWhereInput!]
    OR?: NexusGenInputs['FaceWhereInput'][] | null; // [FaceWhereInput!]
    addedBy?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    addedById?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    appearance?: NexusGenInputs['AppearanceWhereInput'] | null; // AppearanceWhereInput
    appearanceId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    height?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    image?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    imageId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    person?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    personId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    score?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
    source?: NexusGenInputs['EnumFaceSourceFilter'] | null; // EnumFaceSourceFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    width?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
    x?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
    y?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
  }
  FaceWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  FloatFilter: { // input type
    equals?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: number[] | null; // [Float!]
    lt?: number | null; // Float
    lte?: number | null; // Float
    not?: NexusGenInputs['NestedFloatFilter'] | null; // NestedFloatFilter
    notIn?: number[] | null; // [Float!]
  }
  GroupAliasListRelationFilter: { // input type
    every?: NexusGenInputs['GroupAliasWhereInput'] | null; // GroupAliasWhereInput
    none?: NexusGenInputs['GroupAliasWhereInput'] | null; // GroupAliasWhereInput
    some?: NexusGenInputs['GroupAliasWhereInput'] | null; // GroupAliasWhereInput
  }
  GroupAliasWhereInput: { // input type
    AND?: NexusGenInputs['GroupAliasWhereInput'][] | null; // [GroupAliasWhereInput!]
    NOT?: NexusGenInputs['GroupAliasWhereInput'][] | null; // [GroupAliasWhereInput!]
    OR?: NexusGenInputs['GroupAliasWhereInput'][] | null; // [GroupAliasWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    group?: NexusGenInputs['GroupWhereInput'] | null; // GroupWhereInput
    groupId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  GroupAliasWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  GroupMemberListRelationFilter: { // input type
    every?: NexusGenInputs['GroupMemberWhereInput'] | null; // GroupMemberWhereInput
    none?: NexusGenInputs['GroupMemberWhereInput'] | null; // GroupMemberWhereInput
    some?: NexusGenInputs['GroupMemberWhereInput'] | null; // GroupMemberWhereInput
  }
  GroupMemberMemberCompoundUniqueInput: { // input type
    groupId: number; // Int!
    personId: number; // Int!
  }
  GroupMemberWhereInput: { // input type
    AND?: NexusGenInputs['GroupMemberWhereInput'][] | null; // [GroupMemberWhereInput!]
    NOT?: NexusGenInputs['GroupMemberWhereInput'][] | null; // [GroupMemberWhereInput!]
    OR?: NexusGenInputs['GroupMemberWhereInput'][] | null; // [GroupMemberWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    endDate?: NexusGenInputs['DateTimeNullableFilter'] | null; // DateTimeNullableFilter
    group?: NexusGenInputs['GroupWhereInput'] | null; // GroupWhereInput
    groupId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    person?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    personId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    preferredMemberships_?: NexusGenInputs['PersonListRelationFilter'] | null; // PersonListRelationFilter
    startDate?: NexusGenInputs['DateTimeNullableFilter'] | null; // DateTimeNullableFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  GroupMemberWhereUniqueInput: { // input type
    id?: number | null; // Int
    member?: NexusGenInputs['GroupMemberMemberCompoundUniqueInput'] | null; // GroupMemberMemberCompoundUniqueInput
  }
  GroupOrderByInput: { // input type
    avatarId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    bannerId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    ireneBotId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    name?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  GroupWhereInput: { // input type
    AND?: NexusGenInputs['GroupWhereInput'][] | null; // [GroupWhereInput!]
    NOT?: NexusGenInputs['GroupWhereInput'][] | null; // [GroupWhereInput!]
    OR?: NexusGenInputs['GroupWhereInput'][] | null; // [GroupWhereInput!]
    aliases?: NexusGenInputs['GroupAliasListRelationFilter'] | null; // GroupAliasListRelationFilter
    avatar?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    avatarId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    banner?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    bannerId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    ireneBotId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    members?: NexusGenInputs['GroupMemberListRelationFilter'] | null; // GroupMemberListRelationFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  GroupWhereUniqueInput: { // input type
    avatarId?: number | null; // Int
    bannerId?: number | null; // Int
    id?: number | null; // Int
    ireneBotId?: number | null; // Int
  }
  ImageLikeListRelationFilter: { // input type
    every?: NexusGenInputs['ImageLikeWhereInput'] | null; // ImageLikeWhereInput
    none?: NexusGenInputs['ImageLikeWhereInput'] | null; // ImageLikeWhereInput
    some?: NexusGenInputs['ImageLikeWhereInput'] | null; // ImageLikeWhereInput
  }
  ImageLikeWhereInput: { // input type
    AND?: NexusGenInputs['ImageLikeWhereInput'][] | null; // [ImageLikeWhereInput!]
    NOT?: NexusGenInputs['ImageLikeWhereInput'][] | null; // [ImageLikeWhereInput!]
    OR?: NexusGenInputs['ImageLikeWhereInput'][] | null; // [ImageLikeWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    image?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    imageId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userId?: NexusGenInputs['IntFilter'] | null; // IntFilter
  }
  ImageListRelationFilter: { // input type
    every?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    none?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    some?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
  }
  ImageOrderByInput: { // input type
    bytes?: NexusGenEnums['SortOrder'] | null; // SortOrder
    caption?: NexusGenEnums['SortOrder'] | null; // SortOrder
    createdAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    faceScanDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    faceScanRequestDate?: NexusGenEnums['SortOrder'] | null; // SortOrder
    fileName?: NexusGenEnums['SortOrder'] | null; // SortOrder
    hash?: NexusGenEnums['SortOrder'] | null; // SortOrder
    height?: NexusGenEnums['SortOrder'] | null; // SortOrder
    id?: NexusGenEnums['SortOrder'] | null; // SortOrder
    ireneBotId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    isNsfw?: NexusGenEnums['SortOrder'] | null; // SortOrder
    mimetype?: NexusGenEnums['SortOrder'] | null; // SortOrder
    pHash?: NexusGenEnums['SortOrder'] | null; // SortOrder
    palette?: NexusGenEnums['SortOrder'] | null; // SortOrder
    public?: NexusGenEnums['SortOrder'] | null; // SortOrder
    slug?: NexusGenEnums['SortOrder'] | null; // SortOrder
    source?: NexusGenEnums['SortOrder'] | null; // SortOrder
    updatedAt?: NexusGenEnums['SortOrder'] | null; // SortOrder
    uploadType?: NexusGenEnums['SortOrder'] | null; // SortOrder
    userId?: NexusGenEnums['SortOrder'] | null; // SortOrder
    views?: NexusGenEnums['SortOrder'] | null; // SortOrder
    width?: NexusGenEnums['SortOrder'] | null; // SortOrder
  }
  ImageWhereInput: { // input type
    AND?: NexusGenInputs['ImageWhereInput'][] | null; // [ImageWhereInput!]
    NOT?: NexusGenInputs['ImageWhereInput'][] | null; // [ImageWhereInput!]
    OR?: NexusGenInputs['ImageWhereInput'][] | null; // [ImageWhereInput!]
    appearances?: NexusGenInputs['AppearanceListRelationFilter'] | null; // AppearanceListRelationFilter
    bytes?: NexusGenInputs['IntFilter'] | null; // IntFilter
    caption?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    faceScanDate?: NexusGenInputs['DateTimeNullableFilter'] | null; // DateTimeNullableFilter
    faceScanRequestDate?: NexusGenInputs['DateTimeNullableFilter'] | null; // DateTimeNullableFilter
    faces?: NexusGenInputs['FaceListRelationFilter'] | null; // FaceListRelationFilter
    fileName?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    groupAvatarOf?: NexusGenInputs['GroupWhereInput'] | null; // GroupWhereInput
    groupBannerOf?: NexusGenInputs['GroupWhereInput'] | null; // GroupWhereInput
    hash?: NexusGenInputs['StringFilter'] | null; // StringFilter
    height?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    ireneBotId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    isNsfw?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    likes?: NexusGenInputs['ImageLikeListRelationFilter'] | null; // ImageLikeListRelationFilter
    mimetype?: NexusGenInputs['EnumMimeTypeFilter'] | null; // EnumMimeTypeFilter
    pHash?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    palette?: NexusGenInputs['IntNullableListFilter'] | null; // IntNullableListFilter
    personAvatarOf?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    personBannerOf?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    public?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    slug?: NexusGenInputs['StringFilter'] | null; // StringFilter
    source?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    tags?: NexusGenInputs['TagListRelationFilter'] | null; // TagListRelationFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    uploadType?: NexusGenInputs['EnumUploadTypeFilter'] | null; // EnumUploadTypeFilter
    user?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userAvatarOf?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userBannerOf?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    views?: NexusGenInputs['IntFilter'] | null; // IntFilter
    width?: NexusGenInputs['IntFilter'] | null; // IntFilter
  }
  ImageWhereUniqueInput: { // input type
    id?: number | null; // Int
    ireneBotId?: number | null; // Int
    slug?: string | null; // String
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  IntNullableFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntNullableFilter'] | null; // NestedIntNullableFilter
    notIn?: number[] | null; // [Int!]
  }
  IntNullableListFilter: { // input type
    equals?: number[] | null; // [Int!]
    has?: number | null; // Int
    hasEvery?: number[] | null; // [Int!]
    hasSome?: number[] | null; // [Int!]
    isEmpty?: boolean | null; // Boolean
  }
  NestedBoolFilter: { // input type
    equals?: boolean | null; // Boolean
    not?: NexusGenInputs['NestedBoolFilter'] | null; // NestedBoolFilter
  }
  NestedDateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  NestedDateTimeNullableFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeNullableFilter'] | null; // NestedDateTimeNullableFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  NestedEnumFaceSourceFilter: { // input type
    equals?: NexusGenEnums['FaceSource'] | null; // FaceSource
    in?: NexusGenEnums['FaceSource'][] | null; // [FaceSource!]
    not?: NexusGenInputs['NestedEnumFaceSourceFilter'] | null; // NestedEnumFaceSourceFilter
    notIn?: NexusGenEnums['FaceSource'][] | null; // [FaceSource!]
  }
  NestedEnumMimeTypeFilter: { // input type
    equals?: NexusGenEnums['MimeType'] | null; // MimeType
    in?: NexusGenEnums['MimeType'][] | null; // [MimeType!]
    not?: NexusGenInputs['NestedEnumMimeTypeFilter'] | null; // NestedEnumMimeTypeFilter
    notIn?: NexusGenEnums['MimeType'][] | null; // [MimeType!]
  }
  NestedEnumTagSourceFilter: { // input type
    equals?: NexusGenEnums['TagSource'] | null; // TagSource
    in?: NexusGenEnums['TagSource'][] | null; // [TagSource!]
    not?: NexusGenInputs['NestedEnumTagSourceFilter'] | null; // NestedEnumTagSourceFilter
    notIn?: NexusGenEnums['TagSource'][] | null; // [TagSource!]
  }
  NestedEnumUploadTypeFilter: { // input type
    equals?: NexusGenEnums['UploadType'] | null; // UploadType
    in?: NexusGenEnums['UploadType'][] | null; // [UploadType!]
    not?: NexusGenInputs['NestedEnumUploadTypeFilter'] | null; // NestedEnumUploadTypeFilter
    notIn?: NexusGenEnums['UploadType'][] | null; // [UploadType!]
  }
  NestedFloatFilter: { // input type
    equals?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: number[] | null; // [Float!]
    lt?: number | null; // Float
    lte?: number | null; // Float
    not?: NexusGenInputs['NestedFloatFilter'] | null; // NestedFloatFilter
    notIn?: number[] | null; // [Float!]
  }
  NestedIntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntFilter'] | null; // NestedIntFilter
    notIn?: number[] | null; // [Int!]
  }
  NestedIntNullableFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: NexusGenInputs['NestedIntNullableFilter'] | null; // NestedIntNullableFilter
    notIn?: number[] | null; // [Int!]
  }
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  NestedStringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  PersonListRelationFilter: { // input type
    every?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    none?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    some?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
  }
  PersonWhereInput: { // input type
    AND?: NexusGenInputs['PersonWhereInput'][] | null; // [PersonWhereInput!]
    NOT?: NexusGenInputs['PersonWhereInput'][] | null; // [PersonWhereInput!]
    OR?: NexusGenInputs['PersonWhereInput'][] | null; // [PersonWhereInput!]
    aliases?: NexusGenInputs['AliasListRelationFilter'] | null; // AliasListRelationFilter
    appearances?: NexusGenInputs['AppearanceListRelationFilter'] | null; // AppearanceListRelationFilter
    appearsIn?: NexusGenInputs['FaceListRelationFilter'] | null; // FaceListRelationFilter
    avatar?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    avatarId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    banner?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    bannerId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    description?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    ireneBotId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    memberOf?: NexusGenInputs['GroupMemberListRelationFilter'] | null; // GroupMemberListRelationFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    preferredAlias?: NexusGenInputs['AliasWhereInput'] | null; // AliasWhereInput
    preferredAliasId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    preferredMembership?: NexusGenInputs['GroupMemberWhereInput'] | null; // GroupMemberWhereInput
    preferredMembershipId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  PersonWhereUniqueInput: { // input type
    id?: number | null; // Int
    ireneBotId?: number | null; // Int
    preferredAliasId?: number | null; // Int
  }
  RoleListRelationFilter: { // input type
    every?: NexusGenInputs['RoleWhereInput'] | null; // RoleWhereInput
    none?: NexusGenInputs['RoleWhereInput'] | null; // RoleWhereInput
    some?: NexusGenInputs['RoleWhereInput'] | null; // RoleWhereInput
  }
  RoleUserRoleCompoundUniqueInput: { // input type
    name: string; // String!
    userId: number; // Int!
  }
  RoleWhereInput: { // input type
    AND?: NexusGenInputs['RoleWhereInput'][] | null; // [RoleWhereInput!]
    NOT?: NexusGenInputs['RoleWhereInput'][] | null; // [RoleWhereInput!]
    OR?: NexusGenInputs['RoleWhereInput'][] | null; // [RoleWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    user?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userId?: NexusGenInputs['IntFilter'] | null; // IntFilter
  }
  RoleWhereUniqueInput: { // input type
    id?: number | null; // Int
    userRole?: NexusGenInputs['RoleUserRoleCompoundUniqueInput'] | null; // RoleUserRoleCompoundUniqueInput
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  TagListRelationFilter: { // input type
    every?: NexusGenInputs['TagWhereInput'] | null; // TagWhereInput
    none?: NexusGenInputs['TagWhereInput'] | null; // TagWhereInput
    some?: NexusGenInputs['TagWhereInput'] | null; // TagWhereInput
  }
  TagWhereInput: { // input type
    AND?: NexusGenInputs['TagWhereInput'][] | null; // [TagWhereInput!]
    NOT?: NexusGenInputs['TagWhereInput'][] | null; // [TagWhereInput!]
    OR?: NexusGenInputs['TagWhereInput'][] | null; // [TagWhereInput!]
    addedBy?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    addedById?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    image?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    imageId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    source?: NexusGenInputs['EnumTagSourceFilter'] | null; // EnumTagSourceFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  TagWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  UserWhereInput: { // input type
    AND?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    NOT?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    OR?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    avatar?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    avatarId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    banner?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    bannerId?: NexusGenInputs['IntNullableFilter'] | null; // IntNullableFilter
    bot?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
    cratedTags?: NexusGenInputs['TagListRelationFilter'] | null; // TagListRelationFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    email?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    emailVerified?: NexusGenInputs['DateTimeNullableFilter'] | null; // DateTimeNullableFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    image?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    imageLikes?: NexusGenInputs['ImageLikeListRelationFilter'] | null; // ImageLikeListRelationFilter
    images?: NexusGenInputs['ImageListRelationFilter'] | null; // ImageListRelationFilter
    markedFaces?: NexusGenInputs['FaceListRelationFilter'] | null; // FaceListRelationFilter
    name?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    roles?: NexusGenInputs['RoleListRelationFilter'] | null; // RoleListRelationFilter
    taggedAppearances?: NexusGenInputs['AppearanceListRelationFilter'] | null; // AppearanceListRelationFilter
    token?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
}

export interface NexusGenEnums {
  FaceSource: PrismaClient.FaceSource
  ImageConnectionEdge: "IMAGE_TO_PERSON" | "PERSON_TO_IMAGE"
  MimeType: PrismaClient.MimeType
  QueryMode: PrismaClient.QueryMode
  SortOrder: PrismaClient.SortOrder
  TagSource: PrismaClient.TagSource
  UploadType: PrismaClient.UploadType
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Alias: PrismaClient.Alias;
  Appearance: PrismaClient.Appearance;
  AppearanceCount: { // root type
    count: number; // Int!
    group: NexusGenRootTypes['Group']; // Group!
  }
  Face: PrismaClient.Face;
  Group: PrismaClient.Group;
  GroupAlias: PrismaClient.GroupAlias;
  GroupMember: PrismaClient.GroupMember;
  Homepage: { // root type
    trending: NexusGenRootTypes['HomepageTrendingPerson'][][]; // [[HomepageTrendingPerson!]!]!
  }
  HomepageTrendingPerson: { // root type
    person: NexusGenRootTypes['Person']; // Person!
  }
  Image: PrismaClient.Image;
  ImageConnections: { // root type
    edges: NexusGenRootTypes['ImageEdge'][]; // [ImageEdge!]!
    images: NexusGenRootTypes['Image'][]; // [Image!]!
    people: NexusGenRootTypes['Person'][]; // [Person!]!
  }
  ImageCoordinate: { // root type
    x: number; // Int!
    y: number; // Int!
  }
  ImageEdge: { // root type
    from: number; // Int!
    to: number; // Int!
    type?: NexusGenEnums['ImageConnectionEdge'] | null; // ImageConnectionEdge
  }
  Mutation: {};
  Person: PrismaClient.Person;
  Query: {};
  QueueInfo: { // root type
    queueSize: number; // Int!
  }
  Role: PrismaClient.Role;
  Tag: PrismaClient.Tag;
  Thumbnail: { // root type
    large: string; // String!
    medium: string; // String!
    small: string; // String!
  }
  User: PrismaClient.User;
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Alias: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Appearance: { // field return type
    addedBy: NexusGenRootTypes['User']; // User!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    faces: NexusGenRootTypes['Face'][]; // [Face!]!
    id: number; // Int!
    image: NexusGenRootTypes['Image']; // Image!
    person: NexusGenRootTypes['Person']; // Person!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AppearanceCount: { // field return type
    count: number; // Int!
    group: NexusGenRootTypes['Group']; // Group!
  }
  Face: { // field return type
    addedBy: NexusGenRootTypes['User'] | null; // User
    appearance: NexusGenRootTypes['Appearance'] | null; // Appearance
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    height: number; // Float!
    id: number; // Int!
    image: NexusGenRootTypes['Image']; // Image!
    score: number; // Float!
    source: NexusGenEnums['FaceSource']; // FaceSource!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    width: number; // Float!
    x: number; // Float!
    y: number; // Float!
  }
  Group: { // field return type
    aliases: NexusGenRootTypes['GroupAlias'][]; // [GroupAlias!]!
    avatar: NexusGenRootTypes['Image'] | null; // Image
    banner: NexusGenRootTypes['Image'] | null; // Image
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    members: NexusGenRootTypes['GroupMember'][]; // [GroupMember!]!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  GroupAlias: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  GroupMember: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    endDate: NexusGenScalars['DateTime'] | null; // DateTime
    group: NexusGenRootTypes['Group']; // Group!
    id: number; // Int!
    person: NexusGenRootTypes['Person']; // Person!
    startDate: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Homepage: { // field return type
    trending: NexusGenRootTypes['HomepageTrendingPerson'][][]; // [[HomepageTrendingPerson!]!]!
  }
  HomepageTrendingPerson: { // field return type
    person: NexusGenRootTypes['Person']; // Person!
  }
  Image: { // field return type
    appearances: NexusGenRootTypes['Appearance'][]; // [Appearance!]!
    aspectRatio: number; // Float!
    bytes: number; // Int!
    caption: string | null; // String
    connections: NexusGenRootTypes['ImageConnections']; // ImageConnections!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    faceScanDate: NexusGenScalars['DateTime'] | null; // DateTime
    fileName: string | null; // String
    fileSize: string; // String!
    focus: NexusGenRootTypes['ImageCoordinate']; // ImageCoordinate!
    hash: string; // String!
    height: number; // Int!
    id: number; // Int!
    ireneBotId: number | null; // Int
    isNsfw: boolean; // Boolean!
    liked: boolean | null; // Boolean
    mimetype: NexusGenEnums['MimeType']; // MimeType!
    palette: number[]; // [Int!]!
    public: boolean; // Boolean!
    rawUrl: string; // String!
    slug: string; // String!
    source: string | null; // String
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    thumbnail: NexusGenRootTypes['Thumbnail']; // Thumbnail!
    unknownFaces: NexusGenRootTypes['Face'][]; // [Face!]!
    uploadType: NexusGenEnums['UploadType']; // UploadType!
    uploadedBy: NexusGenRootTypes['User'] | null; // User
    url: string; // String!
    views: number; // Int!
    width: number; // Int!
  }
  ImageConnections: { // field return type
    edges: NexusGenRootTypes['ImageEdge'][]; // [ImageEdge!]!
    images: NexusGenRootTypes['Image'][]; // [Image!]!
    people: NexusGenRootTypes['Person'][]; // [Person!]!
  }
  ImageCoordinate: { // field return type
    x: number; // Int!
    y: number; // Int!
  }
  ImageEdge: { // field return type
    from: number; // Int!
    to: number; // Int!
    type: NexusGenEnums['ImageConnectionEdge'] | null; // ImageConnectionEdge
  }
  Mutation: { // field return type
    addAppearance: NexusGenRootTypes['Appearance']; // Appearance!
    linkFace: NexusGenRootTypes['Appearance']; // Appearance!
    removeAppearance: NexusGenRootTypes['Appearance']; // Appearance!
    scanFaces: NexusGenRootTypes['QueueInfo']; // QueueInfo!
    toggleLike: NexusGenRootTypes['Image']; // Image!
    unlinkFace: number; // Int!
  }
  Person: { // field return type
    aliases: NexusGenRootTypes['Alias'][]; // [Alias!]!
    appearances: NexusGenRootTypes['Appearance'][]; // [Appearance!]!
    avatar: NexusGenRootTypes['Image'] | null; // Image
    banner: NexusGenRootTypes['Image'] | null; // Image
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    faces: NexusGenRootTypes['Face'][]; // [Face!]!
    id: number; // Int!
    memberOf: NexusGenRootTypes['GroupMember'][]; // [GroupMember!]!
    name: string; // String!
    preferredAlias: NexusGenRootTypes['Alias'] | null; // Alias
    preferredMembership: NexusGenRootTypes['GroupMember'] | null; // GroupMember
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: { // field return type
    countAppearances: NexusGenRootTypes['AppearanceCount'][]; // [AppearanceCount!]!
    group: NexusGenRootTypes['Group'] | null; // Group
    groups: NexusGenRootTypes['Group'][]; // [Group!]!
    homepage: NexusGenRootTypes['Person'][]; // [Person!]!
    image: NexusGenRootTypes['Image'] | null; // Image
    imageConnections: NexusGenRootTypes['ImageConnections'] | null; // ImageConnections
    images: NexusGenRootTypes['Image'][]; // [Image!]!
    me: NexusGenRootTypes['User'] | null; // User
    people: NexusGenRootTypes['Person'][]; // [Person!]!
    person: NexusGenRootTypes['Person'] | null; // Person
    user: NexusGenRootTypes['User'] | null; // User
  }
  QueueInfo: { // field return type
    queueSize: number; // Int!
  }
  Role: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    name: string; // String!
  }
  Tag: { // field return type
    addedBy: NexusGenRootTypes['User'] | null; // User
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    name: string; // String!
    source: NexusGenEnums['TagSource']; // TagSource!
  }
  Thumbnail: { // field return type
    large: string; // String!
    medium: string; // String!
    small: string; // String!
  }
  User: { // field return type
    avatar: string | null; // String
    bot: boolean; // Boolean!
    id: number; // Int!
    images: NexusGenRootTypes['Image'][]; // [Image!]!
    name: string | null; // String
    roles: NexusGenRootTypes['Role'][]; // [Role!]!
  }
}

export interface NexusGenFieldTypeNames {
  Alias: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    name: 'String'
    updatedAt: 'DateTime'
  }
  Appearance: { // field return type name
    addedBy: 'User'
    createdAt: 'DateTime'
    faces: 'Face'
    id: 'Int'
    image: 'Image'
    person: 'Person'
    updatedAt: 'DateTime'
  }
  AppearanceCount: { // field return type name
    count: 'Int'
    group: 'Group'
  }
  Face: { // field return type name
    addedBy: 'User'
    appearance: 'Appearance'
    createdAt: 'DateTime'
    height: 'Float'
    id: 'Int'
    image: 'Image'
    score: 'Float'
    source: 'FaceSource'
    updatedAt: 'DateTime'
    width: 'Float'
    x: 'Float'
    y: 'Float'
  }
  Group: { // field return type name
    aliases: 'GroupAlias'
    avatar: 'Image'
    banner: 'Image'
    createdAt: 'DateTime'
    id: 'Int'
    members: 'GroupMember'
    name: 'String'
    updatedAt: 'DateTime'
  }
  GroupAlias: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    name: 'String'
    updatedAt: 'DateTime'
  }
  GroupMember: { // field return type name
    createdAt: 'DateTime'
    endDate: 'DateTime'
    group: 'Group'
    id: 'Int'
    person: 'Person'
    startDate: 'DateTime'
    updatedAt: 'DateTime'
  }
  Homepage: { // field return type name
    trending: 'HomepageTrendingPerson'
  }
  HomepageTrendingPerson: { // field return type name
    person: 'Person'
  }
  Image: { // field return type name
    appearances: 'Appearance'
    aspectRatio: 'Float'
    bytes: 'Int'
    caption: 'String'
    connections: 'ImageConnections'
    createdAt: 'DateTime'
    faceScanDate: 'DateTime'
    fileName: 'String'
    fileSize: 'String'
    focus: 'ImageCoordinate'
    hash: 'String'
    height: 'Int'
    id: 'Int'
    ireneBotId: 'Int'
    isNsfw: 'Boolean'
    liked: 'Boolean'
    mimetype: 'MimeType'
    palette: 'Int'
    public: 'Boolean'
    rawUrl: 'String'
    slug: 'String'
    source: 'String'
    tags: 'Tag'
    thumbnail: 'Thumbnail'
    unknownFaces: 'Face'
    uploadType: 'UploadType'
    uploadedBy: 'User'
    url: 'String'
    views: 'Int'
    width: 'Int'
  }
  ImageConnections: { // field return type name
    edges: 'ImageEdge'
    images: 'Image'
    people: 'Person'
  }
  ImageCoordinate: { // field return type name
    x: 'Int'
    y: 'Int'
  }
  ImageEdge: { // field return type name
    from: 'Int'
    to: 'Int'
    type: 'ImageConnectionEdge'
  }
  Mutation: { // field return type name
    addAppearance: 'Appearance'
    linkFace: 'Appearance'
    removeAppearance: 'Appearance'
    scanFaces: 'QueueInfo'
    toggleLike: 'Image'
    unlinkFace: 'Int'
  }
  Person: { // field return type name
    aliases: 'Alias'
    appearances: 'Appearance'
    avatar: 'Image'
    banner: 'Image'
    createdAt: 'DateTime'
    faces: 'Face'
    id: 'Int'
    memberOf: 'GroupMember'
    name: 'String'
    preferredAlias: 'Alias'
    preferredMembership: 'GroupMember'
    updatedAt: 'DateTime'
  }
  Query: { // field return type name
    countAppearances: 'AppearanceCount'
    group: 'Group'
    groups: 'Group'
    homepage: 'Person'
    image: 'Image'
    imageConnections: 'ImageConnections'
    images: 'Image'
    me: 'User'
    people: 'Person'
    person: 'Person'
    user: 'User'
  }
  QueueInfo: { // field return type name
    queueSize: 'Int'
  }
  Role: { // field return type name
    createdAt: 'DateTime'
    name: 'String'
  }
  Tag: { // field return type name
    addedBy: 'User'
    createdAt: 'DateTime'
    name: 'String'
    source: 'TagSource'
  }
  Thumbnail: { // field return type name
    large: 'String'
    medium: 'String'
    small: 'String'
  }
  User: { // field return type name
    avatar: 'String'
    bot: 'Boolean'
    id: 'Int'
    images: 'Image'
    name: 'String'
    roles: 'Role'
  }
}

export interface NexusGenArgTypes {
  Appearance: {
    faces: { // args
      cursor?: NexusGenInputs['FaceWhereUniqueInput'] | null; // FaceWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Group: {
    aliases: { // args
      cursor?: NexusGenInputs['GroupAliasWhereUniqueInput'] | null; // GroupAliasWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    members: { // args
      cursor?: NexusGenInputs['GroupMemberWhereUniqueInput'] | null; // GroupMemberWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Image: {
    appearances: { // args
      cursor?: NexusGenInputs['AppearanceWhereUniqueInput'] | null; // AppearanceWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    connections: { // args
      depth: number; // Int!
    }
    tags: { // args
      cursor?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Mutation: {
    addAppearance: { // args
      imageId: number; // Int!
      personId: number; // Int!
    }
    linkFace: { // args
      appearanceId: number; // Int!
      faceId: number; // Int!
    }
    removeAppearance: { // args
      appearanceId: number; // Int!
    }
    scanFaces: { // args
      slug: string; // String!
    }
    toggleLike: { // args
      imageId: number; // Int!
    }
    unlinkFace: { // args
      appearanceId: number; // Int!
      faceId: number; // Int!
    }
  }
  Person: {
    aliases: { // args
      cursor?: NexusGenInputs['AliasWhereUniqueInput'] | null; // AliasWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    appearances: { // args
      cursor?: NexusGenInputs['AppearanceWhereUniqueInput'] | null; // AppearanceWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    faces: { // args
      cursor?: NexusGenInputs['FaceWhereUniqueInput'] | null; // FaceWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
    memberOf: { // args
      cursor?: NexusGenInputs['GroupMemberWhereUniqueInput'] | null; // GroupMemberWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
  Query: {
    countAppearances: { // args
      groups: number[]; // [Int!]!
    }
    group: { // args
      where: NexusGenInputs['GroupWhereUniqueInput']; // GroupWhereUniqueInput!
    }
    groups: { // args
      cursor?: NexusGenInputs['GroupWhereUniqueInput'] | null; // GroupWhereUniqueInput
      orderBy?: NexusGenInputs['GroupOrderByInput'][] | null; // [GroupOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['GroupWhereInput'] | null; // GroupWhereInput
    }
    image: { // args
      slug: string; // String!
    }
    imageConnections: { // args
      depth: number; // Int!
      slug: string; // String!
    }
    images: { // args
      cursor?: NexusGenInputs['ImageWhereUniqueInput'] | null; // ImageWhereUniqueInput
      orderBy?: NexusGenInputs['ImageOrderByInput'][] | null; // [ImageOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    }
    people: { // args
      cursor?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['PersonWhereInput'] | null; // PersonWhereInput
    }
    person: { // args
      where: NexusGenInputs['PersonWhereUniqueInput']; // PersonWhereUniqueInput!
    }
    user: { // args
      id?: number | null; // Int
    }
  }
  User: {
    images: { // args
      cursor?: NexusGenInputs['ImageWhereUniqueInput'] | null; // ImageWhereUniqueInput
      orderBy?: NexusGenInputs['ImageOrderByInput'][] | null; // [ImageOrderByInput!]
      skip?: number | null; // Int
      take?: number | null; // Int
      where?: NexusGenInputs['ImageWhereInput'] | null; // ImageWhereInput
    }
    roles: { // args
      cursor?: NexusGenInputs['RoleWhereUniqueInput'] | null; // RoleWhereUniqueInput
      skip?: number | null; // Int
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
    /**
     * The complexity for an individual field. Return a number
     * or a function that returns a number to specify the
     * complexity for this field.
     */
    complexity?: QueryComplexity<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}