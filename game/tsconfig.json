{
  // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
  "include": ["src",
    "src/index",
    "../shared/*",
    "../shared/backend/*"],
  "compilerOptions": {
    "allowJs": true,
    "module": "commonjs",
    "target": "es6",
    "types": ["./types.d.ts"],
    "lib": ["dom", "esnext"],
    "rootDirs": ["./src", "../shared"],
    "paths": {
      "~shared/*": ["./../shared/*"]
    },
    "baseUrl": ".",
    "downlevelIteration": true,
    "importHelpers": true,
    "outDir": "dist",
    // output .d.ts declaration files for consumers
    "declaration": true,
    // output .js.map sourcemap files for consumers
    "sourceMap": true,
    // match output dir to input dir. e.g. dist/index instead of dist/src/index
    // "rootDir": "./src",
    // stricter type-checking for stronger correctness. Recommended by TS
    "noImplicitAny": true,
    "noUncheckedIndexedAccess": true,
    "strict": true,
    // linter checks for common issues
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    // use Node's module resolution algorithm, instead of the legacy TS one
    "moduleResolution": "node",
    // transpile JSX to React.createElement
    "jsx": "react",
    // interop between ESM and CJS modules. Recommended by TS
    "esModuleInterop": true,
    // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
    "skipLibCheck": true,
    // error out if import and file system have a casing mismatch. Recommended by TS
    "forceConsistentCasingInFileNames": true
    // `tsdx build` ignores this option, but it is commonly used when type-checking separately with `tsc`
    // "noEmit": true
  },
}
